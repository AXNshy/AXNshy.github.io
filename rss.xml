<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>花咲く</title>
        <link>http://example.com</link>
        <description>编程笔记 &amp; 学渣的自救</description>
        <language>cn</language>
        <pubDate>Tue, 25 Apr 2023 21:17:33 +0800</pubDate>
        <lastBuildDate>Tue, 25 Apr 2023 21:17:33 +0800</lastBuildDate>
        <category>Android</category>
        <category>图像处理</category>
        <category>C++</category>
        <category>蓝牙</category>
        <category>系统</category>
        <category>Camera</category>
        <category>Cmake</category>
        <category>音视频</category>
        <category>FFmpeg</category>
        <category>多媒体</category>
        <category>ExoPlayer</category>
        <category>流媒体协议</category>
        <category>HLS</category>
        <category>算法</category>
        <category>LeetCode</category>
        <category>开发</category>
        <category>Mac</category>
        <category>OpenGL ES</category>
        <category>OpenGL ES2.0</category>
        <category>OpenGL ES3.0</category>
        <category>OpenSLES</category>
        <category>插件化</category>
        <category>Dalvik虚拟机</category>
        <category>leetcode</category>
        <category>ffmpeg</category>
        <category>日语</category>
        <category>歌词</category>
        <category>排序算法</category>
        <category>二叉树</category>
        <category>Algorithm</category>
        <category>数据结构</category>
        <category>树</category>
        <category>BFS</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/04/25/Mac-M2%E6%9C%BA%E5%9E%8B%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/</guid>
            <title>Mac M2机型开发问题</title>
            <link>http://example.com/2023/04/25/Mac-M2%E6%9C%BA%E5%9E%8B%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/</link>
            <category>开发</category>
            <category>Mac</category>
            <pubDate>Tue, 25 Apr 2023 21:17:33 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;blog环境初始化问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#blog环境初始化问题&#34;&gt;#&lt;/a&gt; Blog 环境初始化问题&lt;/h3&gt;
&lt;h4 id=&#34;1puppeteer安装问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1puppeteer安装问题&#34;&gt;#&lt;/a&gt; 1.puppeteer 安装问题&lt;/h4&gt;
&lt;p&gt;出现了 &lt;code&gt;The chromium binary is not available for arm64&lt;/code&gt;  这个错误&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#解决办法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.install homebrew&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.install chromium by hand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	brew install --cask eloston-chromium&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.install puppeteer and skip chromium installation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 npm i puppeteer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.set env path in ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	export PUPPETEER_EXECUTABLE_PATH=&amp;#x27;/Applications/Chromium.app/Contents/MacOS/Chromium&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	the path is the real path that you downloaded on step 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;2npm-install-g-全局安装npm包权限报错&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2npm-install-g-全局安装npm包权限报错&#34;&gt;#&lt;/a&gt; 2.npm install -g 全局安装 npm 包权限报错&lt;/h4&gt;
&lt;p&gt;使用 npm 安装 node 模块时报错： &lt;code&gt;EACCES permissions errors&lt;/code&gt; &lt;br /&gt;
 解决方式：手动更改 npm 的默认安装地址&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.create custom global npm dir&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mkdir ~/.npm-global&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.config the npm to use new dir&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	npm config set prefix &amp;#x27;~/.npm-global&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.open your .bash_profile file in vim,and a line code:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	export PATH=~/.npm-global/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.update system variables.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	source ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/12/12/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
            <title>正则表达式的实现</title>
            <link>http://example.com/2022/12/12/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
            <category>算法</category>
            <pubDate>Mon, 12 Dec 2022 19:17:35 +0800</pubDate>
            <description><![CDATA[ &lt;h4 id=&#34;实现正则表达式中的-和的功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现正则表达式中的-和的功能&#34;&gt;#&lt;/a&gt; 实现正则表达式中的 &lt;code&gt;.&lt;/code&gt;  和 &lt;code&gt;*&lt;/code&gt;  的功能&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;.  匹配任意一个字符
*  匹配0个或多个*前面一个字符
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;动态规范的解法：&lt;/p&gt;
&lt;p&gt;建立匹配的状态转移方程，设存在待匹配字符串 str 和模式字符串 pat， &lt;code&gt;dp[i][j]&lt;/code&gt;  表示 &lt;code&gt;截止到str[i-1]&lt;/code&gt;  位置的子串与截止到 &lt;code&gt;pat[j-1]&lt;/code&gt;  位置的模式子串匹配的结果&lt;/p&gt;
&lt;h5 id=&#34;边界条件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#边界条件&#34;&gt;#&lt;/a&gt; 边界条件&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;dp[0][j]&lt;/code&gt;  表示空字符串与模式子串匹配结果， &lt;code&gt;dp[i][0]&lt;/code&gt;  表示字符子串与空模式子串匹配结果， &lt;code&gt;dp[i][j]&lt;/code&gt;  表示空子串与空模式串匹配结果&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dp[0][0]&lt;/code&gt;  一直为 true&lt;br /&gt;
 &lt;code&gt;dp[i][0](i &amp;gt; 0)&lt;/code&gt;  一直为 false, 因为任意非空子串与空模式串匹配不能匹配上&lt;br /&gt;
 &lt;code&gt;dp[0][j](j &amp;gt; 0)&lt;/code&gt;  的值需要看模式串 &lt;code&gt;pat[j-1]&lt;/code&gt;  是否为 &lt;code&gt;*&lt;/code&gt; ，如果是，则 &lt;code&gt;*&lt;/code&gt;  可以选择匹配前一个字符 0 次，即 &lt;code&gt;dp[0][j] = dp[0][j-2&lt;/code&gt; ]&lt;/p&gt;
&lt;p&gt;边界条件确认了之后，就可以缺点状态转移方程了&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if str[i-1] == pat[j-1] or &amp;#x27;.&amp;#x27; == pat[j-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dp[i][j] = dp[i-1][j-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else if pat[j-1] == &amp;#x27;*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dp[i][j] = dp[i][j-2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if pat[j-2] == str[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		dp[i][j] |= dp[i-1][j]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/11/30/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%AE%97%E6%B3%95%E6%95%B4%E7%90%86/</guid>
            <title>二叉树算法整理</title>
            <link>http://example.com/2022/11/30/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%AE%97%E6%B3%95%E6%95%B4%E7%90%86/</link>
            <category>二叉树</category>
            <pubDate>Wed, 30 Nov 2022 13:25:43 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;二叉搜索树&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/08/05/Media%E6%9E%B6%E6%9E%84-%E9%9F%B3%E9%A2%91/</guid>
            <title>Media架构-音频</title>
            <link>http://example.com/2022/08/05/Media%E6%9E%B6%E6%9E%84-%E9%9F%B3%E9%A2%91/</link>
            <pubDate>Fri, 05 Aug 2022 23:46:37 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;1-音频应用一般架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-音频应用一般架构&#34;&gt;#&lt;/a&gt; 1. 音频应用一般架构&lt;/h3&gt;
&lt;p&gt;由于音频应用一般需要在后台进行播放，所以音频应用架构一般选择 C/S 架构，将播放器放在 Server 端，下面是 Android 官方推荐的架构设计模式，它使用了 MediaBrowser 和 MediaBrowserService 实现对应的客户端和服务的，之间使用 MediaSession 进行交互&lt;br /&gt;
&lt;img data-src=&#34;http://tva3.sinaimg.cn/large/b5348f57gy1h4wbopbdj1j20ds062myc.jpg&#34; alt=&#34;音频应用架构图&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2server端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2server端&#34;&gt;#&lt;/a&gt; 2.Server 端&lt;/h3&gt;
&lt;p&gt;服务端 Service 使用 MediaBrowserService，&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/20/Android-%E7%9B%B8%E6%9C%BA%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
            <title>Android 相机子系统</title>
            <link>http://example.com/2022/06/20/Android-%E7%9B%B8%E6%9C%BA%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
            <category>Android</category>
            <category>Camera</category>
            <pubDate>Mon, 20 Jun 2022 23:42:47 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android Camera 架构&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva3.sinaimg.cn/large/b5348f57gy1h3f5lczmiuj20kt0gkgqt.jpg&#34; alt=&#34;相机系统&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第一层： Java  APP&lt;br /&gt;
 第二层： Framework 封装 java 层的调用；实现 native 层的 CameraService&lt;br /&gt;
 第三层： Camera HAL google 实现的 HIDL 标准接口，同时芯片厂商和 OEM 厂商基于 HIDL 接口实现自己的功能&lt;br /&gt;
第四层： Driver 相机驱动层&lt;br /&gt;
第五层： 各种电子、感光元件以及相机依赖的硬件&lt;/p&gt;
&lt;p&gt;类：&lt;/p&gt;
&lt;p&gt;CameraServiceClient&lt;/p&gt;
&lt;p&gt;CameraDevice  CameraProviderManager&lt;/p&gt;
&lt;p&gt;Camera3Device&lt;/p&gt;
&lt;p&gt;CameraHAL&lt;/p&gt;
&lt;h2 id=&#34;数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据&#34;&gt;#&lt;/a&gt; 数据&lt;/h2&gt;
&lt;h3 id=&#34;camerametadata&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#camerametadata&#34;&gt;#&lt;/a&gt; CameraMetaData&lt;/h3&gt;
&lt;p&gt;以 key-value 的形式存储数据&lt;br /&gt;
 Camera 系统中流转的三种主要数据都是继承了 CameraMetaData&lt;/p&gt;
&lt;h3 id=&#34;capturechractoristics-静态数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#capturechractoristics-静态数据&#34;&gt;#&lt;/a&gt; CaptureChractoristics  静态数据&lt;/h3&gt;
&lt;p&gt;相机静态配置数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入流配置&lt;/li&gt;
&lt;li&gt;输出流配置&lt;/li&gt;
&lt;li&gt;高分辨率配置&lt;/li&gt;
&lt;li&gt;高帧率配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;capturerequest-拍摄请求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#capturerequest-拍摄请求&#34;&gt;#&lt;/a&gt; CaptureRequest  拍摄请求&lt;/h3&gt;
&lt;p&gt;有 2 种类型的请求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;capture   非重复请求&lt;/li&gt;
&lt;li&gt;repeating   重复请求   例如：实现预览的请求可以用 repeating 请求实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CameraCaptureSession 管理相机连接的会话&lt;/p&gt;
&lt;p&gt;CameraCaptureSession 由 createCameraSession 方法创建&lt;/p&gt;
&lt;h3 id=&#34;captureresult-拍摄结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#captureresult-拍摄结果&#34;&gt;#&lt;/a&gt; CaptureResult  拍摄结果&lt;/h3&gt;
&lt;h2 id=&#34;数据流向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据流向&#34;&gt;#&lt;/a&gt; 数据流向&lt;/h2&gt;
&lt;p&gt;CameraDevice   CameraCaptureSession    CameraManager.AvailabilityCallback&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/29/FFmpeg%E4%B9%8B%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%8C%E6%AD%A5/</guid>
            <title>FFmpeg之音视频同步</title>
            <link>http://example.com/2022/05/29/FFmpeg%E4%B9%8B%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%8C%E6%AD%A5/</link>
            <category>音视频</category>
            <category>FFmpeg</category>
            <pubDate>Sun, 29 May 2022 00:13:10 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;音视频同步问题解释之前先需要了解几个基本的音视频的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pts  渲染时间戳（Presentation TimeStamp）&lt;/li&gt;
&lt;li&gt;dts 解码时间戳 （Decode TimeStamp）&lt;/li&gt;
&lt;li&gt;fps 每秒显示的帧数（Frame Per Second）：帧率&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;音频解码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#音频解码&#34;&gt;#&lt;/a&gt; 音频解码&lt;/h3&gt;
&lt;p&gt;音频解码是顺序解码，所以音频的 PTS 和 DTS 是一样的，当前解码的帧就是当前需要显示的帧。&lt;/p&gt;
&lt;h3 id=&#34;视频解码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#视频解码&#34;&gt;#&lt;/a&gt; 视频解码&lt;/h3&gt;
&lt;p&gt;在视频解码中，由于采用了双向预测的帧间压缩技术，视频帧的解码顺序和视频帧的显示顺序就不一样了。&lt;br /&gt;
举个简单的例子：&lt;br /&gt;
有 1,2,3 这三张顺序显示的图片，第 1 张图片不依赖其他图片进行解码；第二张图片依赖第一张和第三张图片进行解码；第三张图片依赖第一张图片进行解码。&lt;/p&gt;
&lt;p&gt;如果按照 1-&amp;gt;2-&amp;gt;3 的顺序解码，那么由于 2 需要 1 和 3 进行解码，那么 2 就会解码失败。&lt;br /&gt;
所以为了成功的对 1,2,3 都进行解码，就应该按照下面的顺序进行解码：1-&amp;gt;3-&amp;gt;2, 这个顺序就是 dts 的顺序。&lt;/p&gt;
&lt;h3 id=&#34;音视频同步问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#音视频同步问题&#34;&gt;#&lt;/a&gt; 音视频同步问题&lt;/h3&gt;
&lt;h4 id=&#34;1音频播放速度异常&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1音频播放速度异常&#34;&gt;#&lt;/a&gt; 1. 音频播放速度异常&lt;/h4&gt;
&lt;p&gt;可能原因：&lt;br /&gt;
1.1 音频播放器采样率参数设置错误&lt;br /&gt;
如果设置的采样率大于真实采用率，那么音频播放速度会比正常速度快；如果设置的采样率小于真实采样率，那么音频播放速度会比正常速度慢。&lt;/p&gt;
&lt;p&gt;1.2 音频解码速度太快，没有做同步，需要根据真实世界时钟速度进行同步解码&lt;/p&gt;
&lt;h4 id=&#34;2视频播放速度异常&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2视频播放速度异常&#34;&gt;#&lt;/a&gt; 2. 视频播放速度异常&lt;/h4&gt;
&lt;p&gt;可能原因：&lt;br /&gt;
2.1 视频解码速度太快，没有进行音视频同步或者音视频同步出错。&lt;/p&gt;
&lt;h3 id=&#34;音视频同步策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#音视频同步策略&#34;&gt;#&lt;/a&gt; 音视频同步策略&lt;/h3&gt;
&lt;p&gt;音视频同步策略有三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以视频 pts 为准进行同步&lt;/li&gt;
&lt;li&gt;以音频 pts 为基准进行同步&lt;/li&gt;
&lt;li&gt;以真实世界时钟速度进行同步&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用第二种和第三种同步策略，为什么不使用第一种，是因为人的感观是对音频信号比视频画面更敏感，如果使用视频 pts 为基准的话，能感觉到明显的音频速度变化，而我们人眼对视频画面的变化是不敏感的，只要渲染的速度达到每秒 60 帧，对人的肉眼就看不出来停顿感。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/25/Android-SharedPreference%E8%A7%A3%E6%9E%90/</guid>
            <title>Android SharedPreference解析</title>
            <link>http://example.com/2022/05/25/Android-SharedPreference%E8%A7%A3%E6%9E%90/</link>
            <category>Android</category>
            <pubDate>Wed, 25 May 2022 00:02:22 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;contextgetsharedpreferences&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#contextgetsharedpreferences&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Context.getSharedPreferences()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;获取 &lt;code&gt;SharedPreferences&lt;/code&gt;  对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//android.app.Context.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SharedPreferences getSharedPreferences(String name, int mode) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return mBase.getSharedPreferences(name, mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mBase 是Context的实现类 ContextImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//android.app.ContextImpl.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SharedPreferences getSharedPreferences(String name, int mode) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // At least one application in the world actually passes in a null  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // name.  This happened to work because when we generated the file name    // we would stringify it to &amp;quot;null.xml&amp;quot;.  Nice.    if (mPackageInfo.getApplicationInfo().targetSdkVersion &amp;lt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Build.VERSION_CODES.KITKAT) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (name == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            name = &amp;quot;null&amp;quot;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    File file;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (ContextImpl.class) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (mSharedPrefsPaths == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mSharedPrefsPaths = new ArrayMap&amp;lt;&amp;gt;();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        file = mSharedPrefsPaths.get(name);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (file == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//根据传入的name创建一个File对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            file = getSharedPreferencesPath(name);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mSharedPrefsPaths.put(name, file);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return getSharedPreferences(file, mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SharedPreferences getSharedPreferences(File file, int mode) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SharedPreferencesImpl sp;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (ContextImpl.class) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//先在缓存中查找，如果没有找到对应文件的sp对象，就创建一个新的sp对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        final ArrayMap&amp;lt;File, SharedPreferencesImpl&amp;gt; cache = getSharedPreferencesCacheLocked();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sp = cache.get(file);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (sp == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            checkMode(mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (getApplicationInfo().targetSdkVersion &amp;gt;= android.os.Build.VERSION_CODES.O) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (isCredentialProtectedStorage()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;amp;&amp;amp; !getSystemService(UserManager.class)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                .isUserUnlockingOrUnlocked(UserHandle.myUserId())) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    throw new IllegalStateException(&amp;quot;SharedPreferences in credential encrypted &amp;quot;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            + &amp;quot;storage are not available until after user is unlocked&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//创建一个新SharedPreferencesImpl对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sp = new SharedPreferencesImpl(file, mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cache.put(file, sp);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return sp;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ((mode &amp;amp; Context.MODE_MULTI_PROCESS) != 0 ||  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getApplicationInfo().targetSdkVersion &amp;lt; android.os.Build.VERSION_CODES.HONEYCOMB) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // If somebody else (some other process) changed the prefs  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // file behind our back, we reload it.  This has been the        // historical (if undocumented) behavior.        sp.startReloadIfChangedUnexpectedly();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return sp;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SharedPreferences&lt;/code&gt;  是一个接口，实现类是 &lt;code&gt;SharedPreferencesImpl&lt;/code&gt; ,&lt;/p&gt;
&lt;h2 id=&#34;sharedpreferenceseditor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sharedpreferenceseditor&#34;&gt;#&lt;/a&gt;  &lt;code&gt;SharedPreferences.Editor&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sp编辑器&lt;/code&gt; ，用来操作修改 sp 中的数据&lt;/p&gt;
&lt;h3 id=&#34;commit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#commit&#34;&gt;#&lt;/a&gt;  &lt;code&gt;commit&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//android.app.SharedPreferencesImpl$EditorImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public final class EditorImpl implements Editor &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	//存储本次修改的键值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private final Map&amp;lt;String, Object&amp;gt; mModified = new HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public boolean commit() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	long startTime = 0;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	MemoryCommitResult mcr = commitToMemory();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	SharedPreferencesImpl.this.enqueueDiskWrite(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	mcr, null /* sync write on this thread okay */);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//如果没有执行mcr.setDiskWriteResult();那么mcr.writtenToDiskLatch的state&amp;gt;0，调用await会进入挂起状态，走commit方法时，在enqueueDiskWrite这个方法中已经执行了setDiskWriteResult，所以这里不会阻塞，直接返回结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	mcr.writtenToDiskLatch.await();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&amp;#125; catch (InterruptedException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&amp;#125; finally &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	notifyListeners(mcr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	return mcr.writeToDiskResult;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; private void enqueueDiskWrite(final MemoryCommitResult mcr,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                              final Runnable postWriteRunnable) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//是否是执行同步提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final boolean isFromSyncCommit = (postWriteRunnable == null);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final Runnable writeToDiskRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                synchronized (mWritingToDiskLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    writeToFile(mcr, isFromSyncCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                synchronized (mLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    mDiskWritesInFlight--;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (postWriteRunnable != null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    postWriteRunnable.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Typical #commit() path with fewer allocations, doing a write on  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // the current thread.    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (isFromSyncCommit) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        boolean wasEmpty = false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        synchronized (mLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            wasEmpty = mDiskWritesInFlight == 1;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (wasEmpty) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            writeToDiskRunnable.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueuedWork.queue(writeToDiskRunnable, !isFromSyncCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//写入修改到文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private void writeToFile(MemoryCommitResult mcr, boolean isFromSyncCommit) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Attempt to write the file, delete the backup and return true as atomically as  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // possible.  If any exception occurs, delete the new file; next time we will restore    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// from the backup.    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        FileOutputStream str = createFileOutputStream(mFile);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//将本次修改数据写入到文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XmlUtils.writeMapXml(mcr.mapToWriteToDisk, str);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writeTime = System.currentTimeMillis();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        FileUtils.sync(str);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fsyncTime = System.currentTimeMillis();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        str.close();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ContextImpl.setFilePermissionsFromMode(mFile.getPath(), mMode, 0);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mcr.setDiskWriteResult(true, true);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        long fsyncDuration = fsyncTime - writeTime;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mSyncTimes.add((int) fsyncDuration);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mNumSync++;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (XmlPullParserException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.w(TAG, &amp;quot;writeToFile: Got exception:&amp;quot;, e);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (IOException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.w(TAG, &amp;quot;writeToFile: Got exception:&amp;quot;, e);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Clean up an unsuccessfully written file  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (mFile.exists()) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (!mFile.delete()) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Couldn&amp;#x27;t clean up partially-written file &amp;quot; + mFile);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mcr.setDiskWriteResult(false, false);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面的流程可以看出， &lt;code&gt;commit&lt;/code&gt;  调用中没有创建子线程去执行，而是在当前线程去执行，所以 &lt;code&gt;commit&lt;/code&gt;  会产生 IO 调用，如果写入数据太多，会对主线程由影响，所以最好将 &lt;code&gt;commit&lt;/code&gt;  放在子线程中去执行。&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;h3 id=&#34;apply&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apply&#34;&gt;#&lt;/a&gt; apply&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void apply() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final long startTime = System.currentTimeMillis();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final MemoryCommitResult mcr = commitToMemory();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final Runnable awaitCommit = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    mcr.writtenToDiskLatch.await();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; catch (InterruptedException ignored) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueuedWork.addFinisher(awaitCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Runnable postWriteRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                awaitCommit.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                QueuedWork.removeFinisher(awaitCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//第二个参数传了一个runnable对象所以不会走commit的流程，会执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	notifyListeners(mcr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面可以看到&lt;br /&gt;
 &lt;code&gt;SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable); &lt;/code&gt; &lt;br /&gt;
第二个参数传了一个 runnable 对象所以不会走 commit 的流程， &lt;code&gt;enqueueDiskWrite&lt;/code&gt;  最后会执行下面的代码&lt;br /&gt;
 &lt;code&gt;QueuedWork.queue(writeToDiskRunnable, !isFromSyncCommit);  &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//sholdDeley 为true，sCanDelay也为true，除非在执行Activity销毁时，会变成false,这里会延迟100ms然后执行MSG_RUN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static void queue(Runnable work, boolean shouldDelay) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Handler handler = getHandler();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (sLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sWork.add(work);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (shouldDelay &amp;amp;&amp;amp; sCanDelay) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handler.sendEmptyMessageDelayed(QueuedWorkHandler.MSG_RUN, DELAY);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handler.sendEmptyMessage(QueuedWorkHandler.MSG_RUN);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//android.app.QueueWork.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private static class QueuedWorkHandler extends Handler &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static final int MSG_RUN = 1;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueuedWorkHandler(Looper looper) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        super(looper);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public void handleMessage(Message msg) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (msg.what == MSG_RUN) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            processPendingWork();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private static void processPendingWork() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    long startTime = 0;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (sProcessingWork) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LinkedList&amp;lt;Runnable&amp;gt; work;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        synchronized (sLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//sWork中就是QueueWork.queue中的runnable对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            work = (LinkedList&amp;lt;Runnable&amp;gt;) sWork.clone();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sWork.clear();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Remove all msg-s as all work will be processed now  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            getHandler().removeMessages(QueuedWorkHandler.MSG_RUN);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (work.size() &amp;gt; 0) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for (Runnable w : work) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//遍历执行sWork中的任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                w.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;QueueWorkHandler&lt;/code&gt;  这个线程中就会执行上面方法 &lt;code&gt;enqueueDiskWrite&lt;/code&gt;  中创建的 &lt;code&gt;writeToDiskRunnable&lt;/code&gt;  对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final Runnable writeToDiskRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            synchronized (mWritingToDiskLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                writeToFile(mcr, isFromSyncCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            synchronized (mLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mDiskWritesInFlight--;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (postWriteRunnable != null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                postWriteRunnable.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 执行 &lt;code&gt;writeToFile&lt;/code&gt;   进行数据写入，&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;apply&lt;/code&gt;  中创建的 &lt;code&gt;postWriteRunnable&lt;/code&gt;  对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Runnable postWriteRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            awaitCommit.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            QueuedWork.removeFinisher(awaitCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 执行 &lt;code&gt;awaitCommit&lt;/code&gt;  任务&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final Runnable awaitCommit = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 mcr.writtenToDiskLatch.await();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &amp;#125; catch (InterruptedException ignored) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 执行 &lt;code&gt;mcr.writtenToDiskLatch.await();&lt;/code&gt; ，因为 &lt;code&gt;mcr.writtenToDiskLatch&lt;/code&gt;  已经在 &lt;code&gt;wrinteToFile&lt;/code&gt;  中执行了 &lt;code&gt;mcr.setDiskWriteResult&lt;/code&gt; ，所以 state 已经变成了 0，不会挂起当前的 (QueueWrok) 线程&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/22/OpenSLES%E7%AE%80%E4%BB%8B/</guid>
            <title>OpenSLES</title>
            <link>http://example.com/2022/05/22/OpenSLES%E7%AE%80%E4%BB%8B/</link>
            <category>Android</category>
            <category>多媒体</category>
            <category>OpenSLES</category>
            <pubDate>Sun, 22 May 2022 23:20:23 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;接受 pcm 原始音频脉冲数据&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;h3 id=&#34;object-sl对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#object-sl对象&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Object&lt;/code&gt;  SL 对象&lt;/h3&gt;
&lt;p&gt;代码中的 &lt;code&gt;SLObjectItf&lt;/code&gt;  类型，&lt;br /&gt;
每个对象都有三种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unrelalized (initial state) : 不可用状态 ， 对接是活跃的，但是还没有分配资源，处于不可用状态，对象内接口的方法不能使用。&lt;/li&gt;
&lt;li&gt;Realized ：可用状态。对象资源已分配，可以使用对象&lt;/li&gt;
&lt;li&gt;Suspended (optional state): 挂起状态，所需资源比可用状态要少，但是在挂起期间保留了状态信息。当资源不足时，系统可以选择将对象状态改成挂起状态或是不可用状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tvax2.sinaimg.cn/large/b5348f57gy1h2iqkwi4e2j20od0d2jsy.jpg&#34; alt=&#34;OpenSLES Object state diagram&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;interface-接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#interface-接口&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Interface&lt;/code&gt;  接口&lt;/h3&gt;
&lt;p&gt;由特定对象提供的相关特性集合的抽象，在代码中一般为 &lt;code&gt;SLxxxxItf&lt;/code&gt; . 接口必须由特定对象进行生成。&lt;/p&gt;
&lt;h3 id=&#34;一般使用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一般使用方法&#34;&gt;#&lt;/a&gt; 一般使用方法&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//声明对象和接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf object = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLxxxxItf itf = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// init object创建对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 初始化对象，分配资源&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*object)-&amp;gt;Realize(object,SL_BOOLEAN_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//check result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 初始化接口，第二个参数指定接口类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*object)-&amp;gt;GetInterface(object,SL_IID_XXX,&amp;amp;itf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//接口可以使用了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;可以理解为一个对象代表了一个资源和状态，它内部有一系列的接口，对象本身不提供操作，而是由对象内部的接口提供方法调用。&lt;/p&gt;
&lt;h2 id=&#34;opensles使用流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opensles使用流程&#34;&gt;#&lt;/a&gt; OpenSLES 使用流程：&lt;/h2&gt;
&lt;h3 id=&#34;环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境配置&#34;&gt;#&lt;/a&gt; 环境配置&lt;/h3&gt;
&lt;p&gt;Android 环境配置，在 CMakeLists 中将 OpenSLES 加入到目标库链接库列表中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CMakeLists.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_link_libraries(nativelib  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		....        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		OpenSLES  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $&amp;#123;log-lib&amp;#125; )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要在头文件中加上引用&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;opensles_player.h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;SLES/OpenSLES.h&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;SLES/OpenSLES_Android.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化&#34;&gt;#&lt;/a&gt; 初始化&lt;/h3&gt;
&lt;p&gt;先看一个图&lt;br /&gt;
&lt;img data-src=&#34;http://tva2.sinaimg.cn/large/b5348f57gy1h2iss734x0j20uc0ckq5i.jpg&#34; alt=&#34;OpenSLES audio flow diagram&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;1初始化引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1初始化引擎&#34;&gt;#&lt;/a&gt; 1. 初始化引擎&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_engine_obj = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEngineItf m_engine = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::CreateEngine() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult lresult =slCreateEngine(&amp;amp;m_engine_obj,0, nullptr,0, nullptr, nullptr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult, &amp;quot;Engine&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_engine_obj)-&amp;gt;Realize(m_engine_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;EngineRealize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_engine_obj)-&amp;gt;GetInterface(m_engine_obj,SL_IID_ENGINE,&amp;amp;m_engine);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;2初始化合成器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2初始化合成器&#34;&gt;#&lt;/a&gt; 2. 初始化合成器&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 合成器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_output_mix_obj = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 环境混响接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEnvironmentalReverbItf m_output_mix_evn_reverb = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 环境混响设置参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEnvironmentalReverbSettings m_output_mix_evn_settings = SL_I3DL2_ENVIRONMENT_PRESET_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::CreateOutputMixer() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const SLInterfaceID mids[1] = &amp;#123;SL_IID_ENVIRONMENTALREVERB&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const SLboolean mreq[1] = &amp;#123;SL_BOOLEAN_FALSE&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//使用Engine接口创建合成器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult lresult = asInterface(m_engine)-&amp;gt;CreateOutputMix(m_engine,&amp;amp;m_output_mix_obj,1,mids,mreq);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Output Mix&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//合成器对象初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_output_mix_obj)-&amp;gt;Realize(m_output_mix_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Mix Realize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//使用合成器对象获取环境混响接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_output_mix_obj)-&amp;gt;GetInterface(m_output_mix_obj,SL_IID_ENVIRONMENTALREVERB,&amp;amp;m_output_mix_evn_reverb);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Mix Env Reverb&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//如果环境混响接口获取成功，设置环境混响属性为上面定义的默认值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(lresult == SL_RESULT_SUCCESS)&amp;#123;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (*m_output_mix_evn_reverb)-&amp;gt;SetEnvironmentalReverbProperties(m_output_mix_evn_reverb,&amp;amp;m_output_mix_evn_settings);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;3初始化并配置播放器对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3初始化并配置播放器对象&#34;&gt;#&lt;/a&gt; 3. 初始化并配置播放器对象&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_pcm_player_obj = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//播放器接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLPlayItf m_pcm_player = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//音量接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLVolumeItf m_pcm_volume = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Android缓冲区队列接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLAndroidSimpleBufferQueueItf m_pcm_buffer = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::ConfigPlayer() &amp;#123;          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataLocator_AndroidSimpleBufferQueue android_queue =&amp;#123;SL_DATALOCATOR_ANDROIDSIMPLEBUFFERQUEUE,SL_QUEUE_BUFFER_COUNT&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 定义PCM数据格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataFormat_PCM pcm = &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_DATAFORMAT_PCM,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(SLuint32)2,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_SAMPLINGRATE_44_1,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_PCMSAMPLEFORMAT_FIXED_16,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_PCMSAMPLEFORMAT_FIXED_16,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_SPEAKER_FRONT_LEFT|SL_SPEAKER_FRONT_RIGHT,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_BYTEORDER_LITTLEENDIAN  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataSource slDataSource =&amp;#123;&amp;amp;android_queue,&amp;amp;pcm&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataLocator_OutputMix outputMix = &amp;#123;SL_DATALOCATOR_OUTPUTMIX,m_output_mix_obj&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataSink dataSink = &amp;#123;&amp;amp;outputMix, nullptr&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLInterfaceID ids[3] = &amp;#123;SL_IID_BUFFERQUEUE,SL_IID_EFFECTSEND,SL_IID_VOLUME&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLboolean reqs[3] = &amp;#123;SL_BOOLEAN_TRUE,SL_BOOLEAN_TRUE,SL_BOOLEAN_TRUE,&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 通过Engine接口创建音频播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult  lresult = asInterface(m_engine)-&amp;gt;CreateAudioPlayer(m_engine,&amp;amp;m_pcm_player_obj,&amp;amp;slDataSource,&amp;amp;dataSink,3,ids,reqs);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Create Audio Player&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 初始化音频播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;Realize(m_pcm_player_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player Realize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取播放接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_PLAY,&amp;amp;m_pcm_player);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取缓冲区队列接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_BUFFERQUEUE,&amp;amp;m_pcm_buffer);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Buffer GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 缓冲区队列注册缓冲区数据可用回调接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = (*m_pcm_buffer)-&amp;gt;RegisterCallback(m_pcm_buffer,sReadPcmBufferCbFun,this);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Buffer RegisterCallback&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取音量接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_VOLUME,&amp;amp;m_pcm_volume);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player Volume  GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LOGD(TAG,&amp;quot;OpenSL ES init success&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;播放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#播放&#34;&gt;#&lt;/a&gt; 播放&lt;/h3&gt;
&lt;p&gt;创建一个播放线程，&lt;br /&gt;
解码器将解码数据 push 到 PCM 数据缓冲队列中，通知播放器线程启动播放&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void createThread()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	std::thread t = std::thread(cb.render);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void cb(OpenSLRender *render)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/11/Cmake%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
            <title>Cmake的使用</title>
            <link>http://example.com/2022/05/11/Cmake%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
            <category>Android</category>
            <category>Cmake</category>
            <pubDate>Wed, 11 May 2022 00:00:53 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在 Android Studio 中使用 Cmake 来构建 C,C++ 应用&lt;/p&gt;
&lt;p&gt;今天尝试了学习使用 ffmpeg 来编写播放器，需要使用 C,C++ 来编写代码，所有学习一下 Cmake 的使用。&lt;/p&gt;
&lt;p&gt;Cmake 是一个开源，跨平台的工具，被用来构建、测试、打包软件。Cmake 使用了简单的和平台、编译器无关的配置文件，来生成当前平台的软件、链接库。&lt;/p&gt;
&lt;h2 id=&#34;用法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用法&#34;&gt;#&lt;/a&gt; 用法&lt;/h2&gt;
&lt;p&gt;举个栗子：&lt;br /&gt;
我有一个 jni 接口，Java 层调用这个接口，返回一个字符串 &lt;code&gt;hello Cmake&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libnative2/src/main/cpp/nativelib.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;jni.h&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;extern &amp;quot;C&amp;quot; JNIEXPORT jstring JNICALL  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java_com_xzq_nativelib2_NativeLib_stringFromJNI(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        JNIEnv* env,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jobject /* this */) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::string hello = &amp;quot;hello Cmake&amp;quot;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return env-&amp;gt;NewStringUTF(hello.c_str());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 这个 cpp 文件对应的 java 类是 com/xzq/nativelib2/NativeLib.kt 这个类&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libnative2/src/main/kotlin/com/xzq/nativelib2/NativeLib.kt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;package com.xzq.nativelib2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class NativeLib &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//external对应的是Java中的native方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	external fun stringFromJNI(): String  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    companion object &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Used to load the &amp;#x27;nativelib2&amp;#x27; library on application startup.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        init &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//它会去加载名为libnativelib2.so的动态库文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.loadLibrary(&amp;quot;nativelib2&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我想要将这个 cpp 编译成 so 文件 &lt;code&gt;libnativelib2.so&lt;/code&gt; ，在 app 模块中 MainActivity 中去调用 NativeLib 接口去访问本地 cpp 代码。&lt;/p&gt;
&lt;p&gt;Cmake 有两种用法：gradle 配置和命令行&lt;/p&gt;
&lt;h3 id=&#34;1gradle配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1gradle配置&#34;&gt;#&lt;/a&gt; 1.gradle 配置&lt;/h3&gt;
&lt;p&gt;CMake 可以通过 android build tool 脚本进行配置，在启动 gradle 构建后自动生成对应的文件。&lt;/p&gt;
&lt;p&gt;1. 在 &lt;code&gt;android&lt;/code&gt;  配置块中将 gradle 链接到你的 CMake 脚本&lt;br /&gt;
 2. 在 &lt;code&gt;defaultConfig&lt;/code&gt;  配置块中可以指定 CMake 可选的参数 (args) 和标记 (flags)&lt;br /&gt;
 3. 在 &lt;code&gt;productFlavor&lt;/code&gt;  中针对不同产品来替换对应属性&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;plugins &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    id &amp;#x27;com.android.library&amp;#x27;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	id &amp;#x27;com.android.application&amp;#x27;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;android &amp;#123;  ...  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	buildTypes &amp;#123;...&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	productFlavors &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		create(&amp;quot;demo&amp;quot;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			externalNativeBuild &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				cmake &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					// 指定gradle只编译target指定的模块。如果不指定target，那么CMake配置中的所有模块都会被进行编译和打包。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					targets += listOf(&amp;quot;native-lib-demo&amp;quot;,                 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				     //可执行文件是可选的，一般情况，仅编译动态库文件能满足要求。	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;quot;my-executible-demo&amp;quot;)       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		create(&amp;quot;paid&amp;quot;) &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			externalNativeBuild &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				cmake &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					targets += listOf(&amp;quot;native-lib-paid&amp;quot;,      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;quot;my-executible-paid&amp;quot;)     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 本地编译配置，可以配置ndk-bundle和CMake&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	externalNativeBuild &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//CMake编译配置    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cmake &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//指定CMakeLists.txt文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			path = file(&amp;quot;CMakeLists.txt&amp;quot;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;2命令行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2命令行&#34;&gt;#&lt;/a&gt; 2. 命令行&lt;/h3&gt;
&lt;p&gt;使用命令行方式编译本地代码，&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ cmake \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake \    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-DANDROID_ABI=$ABI \    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-DANDROID_PLATFORM=android-$MINSDKVERSION \    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$OTHER_ARGS&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面命令行中几个参数的含义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-DCMAKE_TOLLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake   指定 ndk 中 CMake 编译工具链文件地址&lt;/li&gt;
&lt;li&gt;-DANDROID_ABI=$ABI   指定目标平台的应用程序二进制接口    2022 年 最常见的应该是 arm64-v8a&lt;/li&gt;
&lt;li&gt;-DANDROID_PLATFORM=android-$MINSDKVERSION  指定应用或库支持的最低 Android 平台版本，例如 android-31,android-29&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有更多的参数可以参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vbmRrL2d1aWRlcy9jbWFrZT9obD16aC1jbiNjb21tYW5kLWxpbmVfMg==&#34;&gt; Android 指南 - CMake&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;cmakeliststxt-配置文件编写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cmakeliststxt-配置文件编写&#34;&gt;#&lt;/a&gt; CMakeLists.txt 配置文件编写&lt;/h2&gt;
&lt;p&gt;CMake 的执行已经知道了，但是我们没讲到如何将 cpp 文件编译成可执行文件或是库文件，CMakeLists.txt 就是用来告诉 CMake, 要如何编译，按照什么规则进行编译，编译需要使用的依赖项目，好像很类似与 Makefile 文件。下面是一个栗子：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#指定了Cmake的最小支持版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake_minimum_required(VERSION 3.10.2)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#设置这个Cmake项目名，可以通过变量PROJECT_NAME进行访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;project(&amp;quot;nativelib2&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#创建并命名一个库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_library( &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# 设置这个库的名称  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nativelib2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 这个生成的库的类型，静态库，动态库等 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        SHARED  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 指定库的源文件相对路径，当在cpp中新增了文件中，需要在这个进行声明，cmake才会将新文件打包进库中。除了可以指定cpp源文件，还可以指定库文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nativelib2.cpp)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 搜索ndk环境中的库并自定义命名路径变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find_library( &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# 定义变量log-lib存储log这个库的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log-lib  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 指定ndk环境中库的名称     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		log)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#指定所有需要被链接到目标库的库名称  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_link_libraries(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# 目标库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nativelib2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		#被链接的库，可以新增多个库名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     	$&amp;#123;log-lib&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置好了之后，我们直接使用 Android Studio 编译安装 apk，打开 app，能看到打印成功&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022-05-11 01:25:51.546 20065-20065/com.luffy.mulmedia D/NavigationActivity: stringFromJNI2 hello Cmake&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项&lt;/h2&gt;
&lt;p&gt;我在学习过程中发现，如果 Android Studio 项目存在多个模块，如果有一个模块需要设置 cmake 的 abiFilter  为 armeabi-v7a，那么每一个模块都要设置 abiFilter，不然就会存在找不到 so 的情况。&lt;br /&gt;
我猜测，可能是因为如果某个模块不设置，那么就会在最终的 apk 的 jniLibs 中创建默认的 arm64-v8a 文件夹，然后运行中，发现了有 arm64-v8a 的文件夹，那么就只会在这个路径下搜索全部的 so 文件；又由于其他指定了 abiFilter 的模块会编译出指定的 armeabi-v7a 架构的文件，所有在 arm64-v8a 中找不到，最终抛出异常。如果有大佬知道原因的话可以告诉我一下。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/23/%E6%95%B0%E5%AD%97%E7%9A%84%E7%BF%BB%E8%BD%AC/</guid>
            <title>数字的翻转</title>
            <link>http://example.com/2022/04/23/%E6%95%B0%E5%AD%97%E7%9A%84%E7%BF%BB%E8%BD%AC/</link>
            <category>算法</category>
            <pubDate>Sat, 23 Apr 2022 17:02:25 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;最近遇到了几道算法题，都涉及到了如何将一个整形的数字进行翻转，在这里记录一下数字翻转的代码的模板&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int reverseNum(int x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//记录最后翻转后的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int revert = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//记录从x中从右往左遍历得到的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int b = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//当x的值为0时表明已经遍历完成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(x &amp;gt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//对当前x取余获取x的个位数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            b = x % 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//对x除10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x /= 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//这里判断了翻转后的数字是否溢出，如果溢出就直接返回&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(revert &amp;gt; INT_MAX/10 || (revert == INT_MAX &amp;amp;&amp;amp; b &amp;gt; INT_MAX % 10))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                return INT_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			   if(revert &amp;lt; INT_MIN/10 || (revert == INT_MAX &amp;amp;&amp;amp; b &amp;lt; INT_MIN % 10))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                return INT_MIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//将新得到的数字加到revert右边。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            revert = revert *10 + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return revert;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/19/Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid>
            <title>Z字形变换</title>
            <link>http://example.com/2022/04/19/Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link>
            <category>算法</category>
            <category>leetcode</category>
            <pubDate>Tue, 19 Apr 2022 23:25:15 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;题目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目&#34;&gt;#&lt;/a&gt; 题目&lt;/h2&gt;
&lt;p&gt;将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。&lt;/p&gt;
&lt;p&gt;比如输入字符串为 &amp;quot;PAYPALISHIRING&amp;quot; 行数为 3 时，排列如下：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;P   A   H   N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A P L S I I G&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Y   I   R&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：&amp;quot;PAHNAPLSIIGYIR&amp;quot;。&lt;/p&gt;
&lt;p&gt;请你实现这个将字符串进行指定行数变换的函数：&lt;/p&gt;
&lt;h2 id=&#34;解法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解法&#34;&gt;#&lt;/a&gt; 解法&lt;/h2&gt;
&lt;p&gt;仔细观察由字符串构造成的 z 字形，可以发现一下规律：&lt;br /&gt;
对于每个周期每一行都有 2 (1) 个字符，根据字符规律：&lt;br /&gt;
当对构造的 z 型字符有 n 行，对每 (2n-2) 的位置形成重复周期的形状，对第 j 个周期中，第 i 行的位置，下面两个位置 &lt;code&gt;I1&lt;/code&gt; , &lt;code&gt;I2&lt;/code&gt;  的字符是连在一起的：&lt;br /&gt;
 &lt;code&gt;I1 = j*(2n-2) - i&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;I2 = j*(2n-2) + i&lt;/code&gt; &lt;br /&gt;
 当 &lt;code&gt;I1&lt;/code&gt; , &lt;code&gt;I2&lt;/code&gt;  相等时，表明他们到了第 0 行或第 n-1 行。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string convert(string s, int numRows) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(numRows == 1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        string result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int last = -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int cur = -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int len = s.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0;i&amp;lt;numRows;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            int j =0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            //j*(2*numRows - 2) + i &amp;lt; s.length() &amp;amp;&amp;amp; j*(2*numRows - 2) - i &amp;lt; s.length()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            while(true)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cur = j*(2*numRows - 2) - i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(cur &amp;gt;= len)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(cur &amp;gt;= 0 &amp;amp;&amp;amp; cur != last)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    result += s[cur];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    last = cur;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cur = j*(2*numRows - 2) + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 if(cur &amp;gt;= len)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(cur &amp;gt;= 0 &amp;amp;&amp;amp; cur != last)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    result += s[cur];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    last = cur;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/15/OpenGL-ES3-0-%E5%85%A5%E9%97%A8-%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2/</guid>
            <title>OpenGL ES3.0 入门-画三角形</title>
            <link>http://example.com/2022/04/15/OpenGL-ES3-0-%E5%85%A5%E9%97%A8-%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2/</link>
            <category>OpenGL ES3.0</category>
            <pubDate>Fri, 15 Apr 2022 01:56:26 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android OpenGL ES3.0 入门&lt;/p&gt;
&lt;h1 id=&#34;egl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#egl&#34;&gt;#&lt;/a&gt; EGL&lt;/h1&gt;
&lt;h2 id=&#34;初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化&#34;&gt;#&lt;/a&gt; 初始化&lt;/h2&gt;
&lt;p&gt;选择的 EGL 版本为 EGL1.4 版本，对应了 AndroidSdk 中的  &lt;code&gt;EGL14&lt;/code&gt; &lt;br /&gt;
 创建可以等到 Surface 初始化完成后进行，比如在 SurfaceHolder 的 surfaceCreate 方法中去初始化。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; //必须要一个surface对象来创建窗口表面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun initEGL(surface: Surface) : Boolean&amp;#123;  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//第一步，获取一个EGLDisplay表面，用来建立与设备的窗口系统通信信道，建立连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    egldisplay = EGL14.eglGetDisplay(EGL14.EGL_DEFAULT_DISPLAY);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(egldisplay == EGL14.EGL_NO_DISPLAY)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;eglGetDisplay fail $egldisplay&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//初始化EGL，返回EGL的主版本号的次版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!EGL14.eglInitialize( egldisplay,versions,0,versions,1))&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;eglInitialize fail $egldisplay&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val config : Array&amp;lt;EGLConfig?&amp;gt; = arrayOfNulls(1)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var configNum = intArrayOf(EGL14.EGL_NONE)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//选择设备窗口系统支持的EGL配置列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!EGL14.eglChooseConfig(egldisplay,configAttribe,0,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            config,0,1, configNum,0)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;eglChooseConfig fail $config&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(config[0] == null)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;config choose fail $config&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建一个窗口，作为屏幕上的渲染区域&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    eglSurface = EGL14.eglCreateWindowSurface(egldisplay,config[0],surface,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        intArrayOf(EGL14.EGL_NONE),0)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(eglSurface == EGL14.EGL_NO_SURFACE)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;eglCreateWindowSurface fail $eglSurface&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建渲染上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val eglContext = EGL14.eglCreateContext(egldisplay,config[0],  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        EGL14.EGL_NO_CONTEXT,contextAttribe,0)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(eglContext == EGL14.EGL_NO_CONTEXT)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;eglCreateContext fail $eglContext&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//将上一步创建的上下文与渲染表面进行关联&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!EGL14.eglMakeCurrent(egldisplay,eglSurface,eglSurface,eglContext))&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG, &amp;quot;eglMakeCurrent fail $egldisplay&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;运行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运行&#34;&gt;#&lt;/a&gt; 运行&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//这里是放在一个子线程的run方法体中，执行一个无限循环去渲染OpenGL ES3.0API输出的数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    super.run()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(!init())&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.d(TAG,&amp;quot;EGL init fail&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while (true)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(draw in drawers)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                draw.draw()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                swapBuffer(egldisplay,eglSurface)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sleep(20)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;catch (e:Exception)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.printStackTrace()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(draw in drawers)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        draw.release()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private fun swapBuffer (display: EGLDisplay,surface:EGLSurface)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    EGL14.eglSwapBuffers(display,surface)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;opengl-es30&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opengl-es30&#34;&gt;#&lt;/a&gt; OpenGL ES3.0&lt;/h1&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/15/ffmpeg%E5%85%A5%E9%97%A8-%E5%9C%A8Windows11%20%E4%B8%8B%E7%BC%96%E8%AF%91Android%E5%B9%B3%E5%8F%B0%E5%AF%B9%E5%BA%94SO/</guid>
            <title>ffmpeg 的编译</title>
            <link>http://example.com/2022/04/15/ffmpeg%E5%85%A5%E9%97%A8-%E5%9C%A8Windows11%20%E4%B8%8B%E7%BC%96%E8%AF%91Android%E5%B9%B3%E5%8F%B0%E5%AF%B9%E5%BA%94SO/</link>
            <category>多媒体</category>
            <category>ffmpeg</category>
            <pubDate>Fri, 15 Apr 2022 00:06:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;编译参考了&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY2F0Y2hpbmcudG9wLyMvYXJ0aWNsZS8xMDAwMDAxNTE4MzU3NzMw&#34;&gt;开发的猫&lt;/span&gt; 这位同学的编译教程&lt;/p&gt;
&lt;p&gt;前置环境：&lt;br /&gt;
操作系统：windows 11&lt;br /&gt;
minGW：llvm-mingw-20220323-msvcrt-x86_64&lt;br /&gt;
msys：msys2-x86_64-20220319.exe&lt;br /&gt;
ndk：24.0.8215888&lt;br /&gt;
llvm：ndk 自带&lt;br /&gt;
 clang： ndk 自带&lt;br /&gt;
 yasm&lt;br /&gt;
git&lt;/p&gt;
&lt;p&gt;msys 安装缺少工具：   &lt;code&gt;pacman -S &amp;lt;pkgname&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编译工具链地址：C:\Users\ZhenqianXu\AppData\Local\Android\Sdk\ndk\24.0.8215888\toolchains\llvm\prebuilt\windows-x86_64\bin&lt;br /&gt;
 交叉编译工具链地址：C:\Users\ZhenqianXu\AppData\Local\Android\Sdk\ndk\24.0.8215888\toolchains\llvm\prebuilt\windows-x86_64\sysroot&lt;/p&gt;
&lt;p&gt;找到编译目标 Android 版本 29 需要的 clang 和 clang++ 文件&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;C:\Users\ZhenqianXu\AppData\Local\Android\Sdk\ndk\24.0.8215888\toolchains\llvm\prebuilt\windows-x86_64\bin\armv7a-linux-androideabi29-clang&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;C:\Users\ZhenqianXu\AppData\Local\Android\Sdk\ndk\24.0.8215888\toolchains\llvm\prebuilt\windows-x86_64\bin\armv7a-linux-androideabi29-clang++&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 进入 &lt;code&gt;configure&lt;/code&gt;  文件中，找到 CMDLINE_SET，在其中添加一个变量&lt;br /&gt;
 &lt;code&gt;cross-prefix-clang&lt;/code&gt; &lt;br /&gt;
 然后就找到 &lt;code&gt;cc_default&lt;/code&gt; , &lt;code&gt;cxx_default&lt;/code&gt;  这两个变量定义的地方，修改为&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# clang set&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cc_default=&amp;quot;$&amp;#123;cross_prefix_clang&amp;#125;$&amp;#123;cc_default&amp;#125;&amp;quot; cxx_default=&amp;quot;$&amp;#123;cross_prefix_clang&amp;#125;$&amp;#123;cxx_default&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 也可以直接改成下面的，这两个变量就是对应上面clang和clang++编译器路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cc_default=&amp;quot;$&amp;#123;cross_prefix_clang&amp;#125;clang&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cxx_default=&amp;quot;$&amp;#123;cross_prefix_clang&amp;#125;clang++&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;新建编译脚本：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set -x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 目标Android版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;API=29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CPU=armv7-a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#so库输出目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OUTPUT=/c/Users/XZQ/Desktop/FFmpeg/ffmpeg-4.2.2/android/$CPU&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# NDK的路径，根据自己的NDK位置进行设置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NDK=/c/Users/XZQ/AppData/Local/Android/Sdk/ndk/24.0.8215888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 编译工具链路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/windows-x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 编译环境&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SYSROOT=$TOOLCHAIN/sysroot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ./configure \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --prefix=$OUTPUT \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --target-os=android \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --arch=arm \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --cpu=armv7-a \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --enable-asm \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --enable-neon \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --enable-cross-compile \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --enable-shared \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-static \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-doc \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-ffplay \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-ffprobe \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-symver \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-ffmpeg \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//禁掉strip优化，避免了找不到strip工具报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --disable-stripping \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --sysroot=$SYSROOT \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --cross-prefix=$TOOLCHAIN/bin/arm-linux-androideabi- \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --cross-prefix-clang=$TOOLCHAIN/bin/armv7a-linux-androideabi$API- \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --extra-cflags=&amp;quot;-fPIC&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  make clean all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  # 这里是定义用几个线程编译&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  make -j12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  make install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 msys 中运行该脚本：&lt;br /&gt;
 &lt;code&gt;./build_android_clang.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编译成功&lt;br /&gt;
&lt;img data-src=&#34;http://tvax3.sinaimg.cn/large/b5348f57gy1h19rj5f737j20wg0dwafa.jpg&#34; alt=&#34;屏幕截图 2022-04-15 012650&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/07/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</guid>
            <title>贪心算法</title>
            <link>http://example.com/2022/04/07/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</link>
            <category>Algorithm</category>
            <pubDate>Thu, 07 Apr 2022 23:52:17 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;leetcode-45-跳跃游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leetcode-45-跳跃游戏&#34;&gt;#&lt;/a&gt; leetcode 45 跳跃游戏&lt;/h2&gt;
&lt;p&gt;给你一个非负整数数组  &lt;code&gt;nums&lt;/code&gt;  ，你最初位于数组的第一个位置。&lt;/p&gt;
&lt;p&gt;数组中的每个元素代表你在该位置可以跳跃的最大长度。&lt;/p&gt;
&lt;p&gt;你的目标是使用最少的跳跃次数到达数组的最后一个位置。&lt;/p&gt;
&lt;p&gt;假设你总是可以到达数组的最后一个位置。&lt;/p&gt;
&lt;p&gt;输入: nums = [2,3,1,1,4]&lt;br /&gt;
 输出: 2&lt;br /&gt;
 解释：跳到最后一个位置的最小跳跃数是 2。&lt;br /&gt;
从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。&lt;/p&gt;
&lt;p&gt;解题思路：&lt;br /&gt;
贪心思路：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tvax1.sinaimg.cn/large/b5348f57gy1h11n6nuu09j21h31xg4b7.jpg&#34; alt=&#34;Page1&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/b5348f57gy1h11n5w2bjjj21h31xg0z2.jpg&#34; alt=&#34;Page2&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;leetcode-134-加油站问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leetcode-134-加油站问题&#34;&gt;#&lt;/a&gt; Leetcode 134 加油站问题&lt;/h2&gt;
&lt;p&gt;题目：&lt;br /&gt;
在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas [i] 升。&lt;/p&gt;
&lt;p&gt;你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost [i] 升。你从其中的一个加油站出发，开始时油箱为空。&lt;/p&gt;
&lt;p&gt;给定两个整数数组 gas 和 cost ，如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。&lt;br /&gt;
定义 gas [i]-cost [i] 为油量变换，如果油量变换为正，则叫正加油点，否则叫负加油点。&lt;br /&gt;
推论：&lt;br /&gt;
1. 不能从负加油点出发，&lt;br /&gt;
2. 如果从某个加油站 X 到另一个加油站 Y 无法到达，那么从 X 到 Y 之间的加油站出发到 Y 都不可达。待证明&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int canCompleteCircuit(vector&amp;lt;int&amp;gt;&amp;amp; gas, vector&amp;lt;int&amp;gt;&amp;amp; cost) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int mGas = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int step = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int start = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int size = gas.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vector&amp;lt;int&amp;gt; benefit = vector&amp;lt;int&amp;gt;(size, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int i = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while (step &amp;lt; size &amp;amp;&amp;amp; start &amp;lt; size) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int j = i % size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int n = gas[j] - cost[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (mGas + n &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				mGas = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				start = i + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				step = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				mGas += n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			step++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (start &amp;gt;= size) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return start;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/06/Kotlin%E5%8D%8F%E7%A8%8B%E4%BD%BF%E7%94%A8/</guid>
            <title>Kotlin协程使用</title>
            <link>http://example.com/2022/04/06/Kotlin%E5%8D%8F%E7%A8%8B%E4%BD%BF%E7%94%A8/</link>
            <pubDate>Wed, 06 Apr 2022 23:04:02 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;runBlocking  是一个协程构建器，它是一个函数，返回值是一个 Coroutine 对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;这个kotlin预制的一个函数，返回值是一个Coroutine对象，同时会阻塞该协程运行的线程。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*params:  context:CoroutineContext ,协程上下文对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*params:  block:suspend CoroutineScope.() -&amp;gt; T 一个lambda函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public fun &amp;lt;T&amp;gt; runBlocking(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -&amp;gt; T): T&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动一个协程，协程只能在协程作用域中运行，协程作用域是 CoroutineScope，协程无法脱离其存在，下面是 launch 的源码，&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public fun CoroutineScope.launch(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//协程上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	context: CoroutineContext = EmptyCoroutineContext,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //协程启动器的启动选项&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	start: CoroutineStart = CoroutineStart.DEFAULT,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//协程体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    block: suspend CoroutineScope.() -&amp;gt; Unit  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;): Job &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val newContext = newCoroutineContext(context)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val coroutine = if (start.isLazy)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LazyStandaloneCoroutine(newContext, block) else  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; StandaloneCoroutine(newContext, active = true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    coroutine.start(start, coroutine, block)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return coroutine  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;CoroutineStart 是协程启动器启动选项，有 4 个枚举类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DEFAULT  根据协程上下文环境立即执行协程体&lt;/li&gt;
&lt;li&gt;LAZY   只在协程需要执行的时候才执行&lt;/li&gt;
&lt;li&gt;ATOMIC  类似 DEFAULT，只是不可以取消&lt;/li&gt;
&lt;li&gt;UNDISPATCHED   立即执行协程体直到遇到当前线程第一个挂起点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//class: StandaloneCoroutine -&amp;gt; AbstractCoroutine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//start: CoroutineStart.DEFAULT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//receiver: StandaloneCoroutine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//block: 协程体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public fun &amp;lt;R&amp;gt; start(start: CoroutineStart, receiver: R, block: suspend R.() -&amp;gt; T) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    initParentJob()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start(block, receiver, this)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;internal fun initParentJob() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    initParentJobInternal(parentContext[Job])  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;internal fun initParentJobInternal(parent: Job?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert &amp;#123; parentHandle == null &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; if (parent == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parentHandle = NonDisposableHandle  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parent.start() // make sure the parent is started  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; @Suppress(&amp;quot;DEPRECATION&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val handle = parent.attachChild(this)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parentHandle = handle  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // now check our state _after_ registering (see tryFinalizeSimpleState order of actions)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; if (isCompleted) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        handle.dispose()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parentHandle = NonDisposableHandle // release it just in case, to aid GC  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//CoroutineStart 启动协程体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public operator fun &amp;lt;R, T&amp;gt; invoke(block: suspend R.() -&amp;gt; T, receiver: R, completion: Continuation&amp;lt;T&amp;gt;): Unit =  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    when (this) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        DEFAULT -&amp;gt; block.startCoroutineCancellable(receiver, completion)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ATOMIC -&amp;gt; block.startCoroutine(receiver, completion)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        UNDISPATCHED -&amp;gt; block.startCoroutineUndispatched(receiver, completion)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LAZY -&amp;gt; Unit // will start lazily  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; internal fun &amp;lt;R, T&amp;gt; (suspend (R) -&amp;gt; T).startCoroutineCancellable(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    receiver: R, completion: Continuation&amp;lt;T&amp;gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    onCancellation: ((cause: Throwable) -&amp;gt; Unit)? = null  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;) =  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    runSafely(completion) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//创建协程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		createCoroutineUnintercepted(receiver, completion)   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.intercepted()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.resumeCancellableWith(Result.success(Unit), onCancellation)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//因为kotlin编译器会将协程体表达式编译成一个SuspendLambda对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SuspendLambda -&amp;gt; ContinuationImpl -&amp;gt; BaseContinuationImpl -&amp;gt; Continuation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public actual fun &amp;lt;R, T&amp;gt; (suspend R.() -&amp;gt; T).createCoroutineUnintercepted(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    receiver: R,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    completion: Continuation&amp;lt;T&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;): Continuation&amp;lt;Unit&amp;gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val probeCompletion = probeCoroutineCreated(completion)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return if (this is BaseContinuationImpl)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        create(receiver, probeCompletion)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        createCoroutineFromSuspendFunction(probeCompletion) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; (this as Function2&amp;lt;R, Continuation&amp;lt;T&amp;gt;, Any?&amp;gt;).invoke(receiver, it)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/04/PathClassLoader%E4%B8%8EDexClassLoader-%E8%A7%A3%E6%9E%90/</guid>
            <title>PathClassLoader与DexClassLoader 解析</title>
            <link>http://example.com/2022/04/04/PathClassLoader%E4%B8%8EDexClassLoader-%E8%A7%A3%E6%9E%90/</link>
            <category>Android</category>
            <category>插件化</category>
            <category>Dalvik虚拟机</category>
            <pubDate>Mon, 04 Apr 2022 23:06:50 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;未完&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#未完&#34;&gt;#&lt;/a&gt; 未完&lt;/h1&gt;
&lt;h2 id=&#34;java中的classloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#java中的classloader&#34;&gt;#&lt;/a&gt; Java 中的 ClassLoader&lt;/h2&gt;
&lt;p&gt;在 Java 中，类加载器的作用是通过一个类的全限定名获取描述这个类的二进制字节流，然后加载到虚拟机中生成类对象并提供引用。&lt;br /&gt;
对 Java 虚拟机来说，类加载器可以分为 2 中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动类加载器。由 C++ 代码实现，是 Java 虚拟机的一部分&lt;/li&gt;
&lt;li&gt;其他加载器。由 Java 代码实现，独立于虚拟机，并且全都继承自 java.lang.ClassLoader 这个类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于我们开发人员来说，类加载器由 3 种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bootstrap ClassLoader&lt;/li&gt;
&lt;li&gt;Extension ClassLoader 加载指定扩展包中的类&lt;/li&gt;
&lt;li&gt;Application ClassLoader  加载 ClassPath 指定路径上的类&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;双亲委派模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双亲委派模型&#34;&gt;#&lt;/a&gt; 双亲委派模型&lt;/h2&gt;
&lt;p&gt;双亲委派模型是一种类加载的模型，是被推荐使用的类加载模型。双亲委派模型的定义是每次去加载一个类时，先判断这个类是否加载过，如果没有加载过，那么判断有没有父类加载器，如果有父类加载器，那么先调用父类加载器的加载方法；如果父类加载器加载失败，那么就调用当前类加载器。&lt;/p&gt;
&lt;p&gt;使用双亲委派模型的好处：&lt;br /&gt;
使 Java 类与 Java 类加载器一起产生了优先级层次，保证了同一个类始终由一个类加载器去加载。&lt;/p&gt;
&lt;p&gt;双亲委派模型的实现：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;protected synchronized Class&amp;lt;?&amp;gt; loadClass(Stirng name,boolean resolve) throws ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Class c = findLoadedClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(c == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(parent != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//父类加载器存在，继续调用父类加载器的loadClass方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				c = parent.loadClass(name,false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//父类加载器不存在，调用启动类加载器去加载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				c = findBootstrapClassOrNull(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125; catch (ClassNotFoundException e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//如果父类加载器和启动类加载器都加载失败，使用当前类加载器去加载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if ( c == null )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			c = findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(resolve)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		resolveClass(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;android-dalvik虚拟机中的类加载器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#android-dalvik虚拟机中的类加载器&#34;&gt;#&lt;/a&gt; Android Dalvik 虚拟机中的类加载器&lt;/h2&gt;
&lt;h3 id=&#34;basedexclassloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#basedexclassloader&#34;&gt;#&lt;/a&gt; BaseDexClassLoader&lt;/h3&gt;
&lt;p&gt;一个基于 Dex 的通用功能的 ClassLoader 实现，其核心代码如下：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//libcore/dalvik/src/main/java/dalvik/system/BaseDexClassLoader.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Class BaseDexClassLoader extends ClassLoader&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private final DexPathList pathList;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//一个ClassLoader数组，用来加载pathList pathList中可能依赖的类和资源，用来实现	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//Android中的AndroidManifest.xml中&amp;lt;use-library&amp;gt;标签中的库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	protected final ClassLoader[] sharedLibraryLoaders;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	protected final ClassLoader[] sharedLibraryLoadersAfter;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public BaseDexClassLoader(String dexPath,String librarySearchPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ClassLoader parent,ClassLoader[] sharedLibraryLoaders,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ClassLoader[] sharedLibraryLoadersAfter,boolean isTrust)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		super(parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		this.pathList = new DexPathList(this,dexPath,librarySearchPath,null,isTrust);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	protected synchronized Class&amp;lt;?&amp;gt; findClass(Stirng name,boolean resolve) throws ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(sharedLibraryLoaders != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(ClassLoader loader : sharedLibraryLoaders)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					return loader.loadClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;catch(ClassNotFoundException ignore)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		List&amp;lt;Throwable&amp;gt; suppressedExceptions = new ArrayList&amp;lt;Throwable&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Class c = dexPath.findClass(name,suppressedExceptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(c == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(sharedLibraryLoadersAfter != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(ClassLoader loader : sharedLibraryLoadersAfter)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					return loader.loadClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;catch(ClassNotFoundException ignore)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(c == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			throw new ClassNotFoundException();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面可以看出，BaseDexClassLoader 并没有遵守 Java 的双亲委托模型。&lt;/p&gt;
&lt;p&gt;BaseDexClassLoader 将代码加载又委托给了 DexPathList 来进行加载。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//libcore/dalvik/src/main/java/dalvik/system/DexPathList.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class DexPathList&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Element[] dexElements;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public DexPathList(...)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		dexElement = makePathElements(spliteDexPath(dexPath)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			,null,null,classLoader,	isTrust);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//这里有关于热修复实现的知识点，就是将补丁 dex 文件放到 dexElements 数组靠前位置，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//这样在加载 class 时，优先找到补丁包中的 dex 文件，加载到 class 之后就不再寻找，从&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//而原来的 apk 文件中同名的类就不会再使用，从而达到修复的目的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public Class&amp;lt;?&amp;gt; findClass(String name,List&amp;lt;Throwable&amp;gt; suppressed)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(Element element : dexElements)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Class&amp;lt;?&amp;gt; clazz = element.findClass(name,classLoader,suppressed);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(clazz != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				return clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public static Element[] makeDexElements(List&amp;lt;File&amp;gt; files,File optimizedDictionary,List&amp;lt;IOException&amp;gt; suppressedExceptions,ClassLoader classloader,boolean isTrusted)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Element[] elements = new Element[files.size()];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(Files file : files)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(file.isDictionary())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				elements[elementsPos++] = new Element(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				if(file.isFile())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					DexFile dex = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					if(file.path.endWith(&amp;quot;.dex&amp;quot;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						dex = loadDexFile(file,optimizedDictionary,loader,elements);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						if(dex != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							elements[elementsPos++] = new Element(dex,null);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						dex = loadDexFile(file,optimizedDictionary,loader,elements);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						if(dex == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							elements[elementsPos++] = new Element(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							elements[elementsPos++] = new Element(dex,file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return elements;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private static DexFile loadDexPath(File file,File optimizedDictionary,ClassLoader loader,Element[] elements)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(optimizeDictory == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return new DexFile(file,loader,elements);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//创建一个文件，路径为optimizedDictionary指定文件夹内，file同名的文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			String optimizedPath = optimizedPathFor(file,optimizedDictionary);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//libcore/dalvik/src/main/java/dalvik/system/DexFile.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;final Class DexFile&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private Object mCookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public DexFile(File file,ClassLoader loader,DexPathList.Element[] elements)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mCookie = openDexFile(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private static Object openDexFile()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return openDexFileNative(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;pathclassloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pathclassloader&#34;&gt;#&lt;/a&gt; PathClassLoader&lt;/h3&gt;
&lt;p&gt;只能加载已经安装过的 Apk&lt;/p&gt;
&lt;h3 id=&#34;dexclassloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dexclassloader&#34;&gt;#&lt;/a&gt; DexClassLoader&lt;/h3&gt;
&lt;p&gt;可以加载 jar,apk,dex, 可以直接从 SD 卡加载未安装的 apk&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/02/Android-%E6%BA%90%E7%A0%81%E4%B8%AD-C-%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
            <title>Android 源码中 C++ 知识点</title>
            <link>http://example.com/2022/04/02/Android-%E6%BA%90%E7%A0%81%E4%B8%AD-C-%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
            <category>C++</category>
            <pubDate>Sat, 02 Apr 2022 23:36:44 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;c-智能指针&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c-智能指针&#34;&gt;#&lt;/a&gt; C++ 智能指针 ：&lt;/h2&gt;
&lt;h4 id=&#34;stdauto_ptrt-c-11-已弃用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stdauto_ptrt-c-11-已弃用&#34;&gt;#&lt;/a&gt; std::auto_ptr&amp;lt;T&amp;gt;  (C++ 11 已弃用)&lt;/h4&gt;
&lt;h4 id=&#34;stdshared_ptrt-同一时间能有多个智能指针对象指向引用对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stdshared_ptrt-同一时间能有多个智能指针对象指向引用对象&#34;&gt;#&lt;/a&gt; std::shared_ptr&amp;lt;T&amp;gt;  同一时间能有多个智能指针对象指向引用对象。&lt;/h4&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;stdunique_ptrt-同一时间只能有一个智能指针对象指向引用对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stdunique_ptrt-同一时间只能有一个智能指针对象指向引用对象&#34;&gt;#&lt;/a&gt; std::unique_ptr&amp;lt;T&amp;gt;  同一时间只能有一个智能指针对象指向引用对象。&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;可以通过std::move()转移到另一个智能指针对象
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;stdmake_uniquet&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stdmake_uniquet&#34;&gt;#&lt;/a&gt; std::make_unique&amp;lt;T&amp;gt;()&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;返回 std::unique_ptr&amp;lt;T&amp;gt;类型
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;stdmake_sharedt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stdmake_sharedt&#34;&gt;#&lt;/a&gt; std::make_shared&amp;lt;T&amp;gt;()&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;返回 std::shared_ptr&amp;lt;T&amp;gt;类型
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;c对象初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c对象初始化&#34;&gt;#&lt;/a&gt; C++ 对象初始化&lt;/h2&gt;
&lt;h3 id=&#34;new初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#new初始化&#34;&gt;#&lt;/a&gt; new 初始化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用 new 关键字进行初始化的对象是在堆上分配&lt;/li&gt;
&lt;li&gt;使用 new 关键字创建的对象返回的是对象地址，必须由一个类指针接收&lt;/li&gt;
&lt;li&gt;使用 new 关键字创建的对象必须使用 delete 手动清除缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;不使用new初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不使用new初始化&#34;&gt;#&lt;/a&gt; 不使用 new 初始化&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a = new int(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int b(1);	&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不是使用 new 进行初始化的方法上面两种，这种初始化是在栈上分配的，由于栈上内存是系统进行管理，所以会自行对空间进行回收。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### 虚函数

对象中定义的虚函数需要赋值为0，不然会有编译错误
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/02/%E4%BA%91%E9%9B%80/</guid>
            <title>云雀</title>
            <link>http://example.com/2022/04/02/%E4%BA%91%E9%9B%80/</link>
            <category>日语</category>
            <category>歌词</category>
            <pubDate>Sat, 02 Apr 2022 21:40:41 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;雲雀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#雲雀&#34;&gt;#&lt;/a&gt; 雲雀&lt;/h1&gt;
&lt;p&gt;だいじなものをいつも&lt;/p&gt;
&lt;p&gt;わたしはまちがえるの&lt;/p&gt;
&lt;p&gt;ほほえみにみんな　なにかをかくしてる&lt;/p&gt;
&lt;p&gt;もうだれもしらない&lt;/p&gt;
&lt;p&gt;やくそくがひとつ&lt;/p&gt;
&lt;p&gt;ものがたりのはじまりと&lt;/p&gt;
&lt;p&gt;おわりをつないでた&lt;/p&gt;
&lt;p&gt;よびあっているような&lt;/p&gt;
&lt;p&gt;ひばりのこえだけとーく&lt;/p&gt;
&lt;p&gt;くものむこおへ　　そうげんにやさしいかげをのこして&lt;/p&gt;
&lt;p&gt;ねえ　ほんとうはいつだって&lt;/p&gt;
&lt;p&gt;ひかりのなかにいたよね&lt;/p&gt;
&lt;p&gt;あいのかたちお　みつけにいくの&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/02/%E6%A0%91/</guid>
            <title>树</title>
            <link>http://example.com/2022/04/02/%E6%A0%91/</link>
            <category>C++</category>
            <category>数据结构</category>
            <category>树</category>
            <category>BFS</category>
            <pubDate>Sat, 02 Apr 2022 00:55:04 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;树的遍历算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#树的遍历算法&#34;&gt;#&lt;/a&gt; 树的遍历算法&lt;/h1&gt;
&lt;h2 id=&#34;bfs-广度优先遍历模板代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bfs-广度优先遍历模板代码&#34;&gt;#&lt;/a&gt; BFS (广度优先遍历) 模板代码&lt;/h2&gt;
&lt;p&gt;非递归方式，借用队列结构。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; levelOrderBottom1(TreeNode* root) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		queue&amp;lt;TreeNode*&amp;gt; mQueue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int level = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (root == nullptr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mQueue.push(root);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while (!mQueue.empty())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			result.push_back(vector&amp;lt;int&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int size = mQueue.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for (int i = 0; i &amp;lt; size; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				TreeNode* front = mQueue.front();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				mQueue.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				result[level].push_back(front-&amp;gt;val);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				if (front-&amp;gt;left != nullptr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					mQueue.push(front-&amp;gt;left);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				if (front-&amp;gt;right != nullptr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					mQueue.push(front-&amp;gt;right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			level++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;dfs深度优先遍历模板代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dfs深度优先遍历模板代码&#34;&gt;#&lt;/a&gt; DFS (深度优先遍历) 模板代码&lt;/h2&gt;
&lt;p&gt;非递归方式，借用栈数据结构&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void dfs(TreeNode* root) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        vector&amp;lt;int&amp;gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stack&amp;lt;TreeNode*&amp;gt; mStack;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(root != nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mStack.push(root);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(!mStack.empty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            TreeNode* node = mStack.top();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mStack.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(node-&amp;gt;right != nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mStack.push(node-&amp;gt;right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(node-&amp;gt;left != nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mStack.push(node-&amp;gt;left);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;中序遍历非递归实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中序遍历非递归实现&#34;&gt;#&lt;/a&gt; 中序遍历非递归实现&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vector&amp;lt;int&amp;gt; midorder(TreeNode* root)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	vector&amp;lt;int&amp;gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(root == nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	stack&amp;lt;TreeNode*&amp;gt; mStk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(!mStk.empty() || root != nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while(root!= nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mStk.push(root);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			root = root-&amp;gt;left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		TreeNode *node = mStk.top();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mStk.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		res.push(node-&amp;gt;val);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		root = node-&amp;gt;right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;后序遍历非递归&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后序遍历非递归&#34;&gt;#&lt;/a&gt; 后序遍历非递归&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vector&amp;lt;int&amp;gt; postOrder(TreeNode* root)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	vector&amp;lt;int&amp;gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(root == nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	stack&amp;lt;TreeNode*&amp;gt; mStk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	TreeNode* prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(root!= nullptr || !mStk.empty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while(root != nullptr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mStk.push(root);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			root = root.left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		TreeNode* node = mStk.top();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(node-&amp;gt;right == null || node-&amp;gt;right == prev)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mStk.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			res.push(node-&amp;gt;val);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			pre = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			root = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			mStk.push(node-&amp;gt;right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			root = node-&amp;gt;right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;224-基本计算器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#224-基本计算器&#34;&gt;#&lt;/a&gt; 224 基本计算器&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int calculate(string s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//定义栈存储参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stack&amp;lt;int&amp;gt; nums;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//预存入一个数字0，防止首个字符是运算符号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nums.push(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//定义栈存储操作符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stack&amp;lt;char&amp;gt; ops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        bool f = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0;i&amp;lt;s.length();i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(s[i] ==&amp;#x27; &amp;#x27;)//遇到空格跳过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else if(s[i] == &amp;#x27;+&amp;#x27; || s[i] == &amp;#x27;-&amp;#x27;) //遇到运算符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                f = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//判断运算符号签名的字符是否为左括号，如果是，则在参数栈增加一个参数，用于于防止左括号后首个字符是运算符的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(i &amp;gt; 0 &amp;amp;&amp;amp; s[i-1] == &amp;#x27;(&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    nums.push(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//推入符号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ops.push(s[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else if(s[i] == &amp;#x27;(&amp;#x27;)//遇到左括号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 f = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ops.push(s[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else if(s[i] == &amp;#x27;)&amp;#x27;)//遇到右括号，先弹出符号栈栈顶的左括号（栈顶必须是左括号，否则表达式错误）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ops.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(!ops.empty() &amp;amp;&amp;amp; ops.top() != &amp;#x27;(&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					//计算括号内与括号左边数字的计算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    if(ops.top() == &amp;#x27;+&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        int right = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        int left = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        nums.push(left + right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ops.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;else if(ops.top() == &amp;#x27;-&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        int right = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        int left = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        nums.push(left - right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ops.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			else//遇到数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//遇到数字左边也是数字，那就将参数栈顶弹出，与当前数字组成更大的数，然后再压入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(i&amp;gt;0 &amp;amp;&amp;amp;  s[i-1] &amp;gt;= &amp;#x27;0&amp;#x27; &amp;amp;&amp;amp; s[i-1] &amp;lt;= &amp;#x27;9&amp;#x27; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        int v = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        v = v*10 + (s[i] - &amp;#x27;0&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        nums.push(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//直接压入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    nums.push(s[i] - &amp;#x27;0&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//遇到数字右边也是数字，那么先不取符号栈中的符号进行运算，继续遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(i+1&amp;lt;s.length() &amp;amp;&amp;amp;  s[i+1] &amp;gt;=&amp;#x27;0&amp;#x27; &amp;amp;&amp;amp; s[i+1] &amp;lt;= &amp;#x27;9&amp;#x27; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					//参数参加计算得到新参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    if(!ops.empty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        if(ops.top() == &amp;#x27;+&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            int right = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            int left = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            nums.push(left + right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            ops.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;else if(ops.top() == &amp;#x27;-&amp;#x27;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            int right = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            int left = nums.top();nums.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            nums.push(left - right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            ops.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return nums.top(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;二叉搜索树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二叉搜索树&#34;&gt;#&lt;/a&gt; 二叉搜索树&lt;/h2&gt;
&lt;p&gt;性质一： 二叉搜索树的中序遍历是递增序列&lt;/p&gt;
&lt;h4 id=&#34;由一个递增序列构建二叉搜索树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#由一个递增序列构建二叉搜索树&#34;&gt;#&lt;/a&gt; 由一个递增序列构建二叉搜索树&lt;/h4&gt;
&lt;p&gt;使用递归法构建 BST 树&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;TreeNode* buildBinarySearchTree(Vector&amp;lt;int&amp;gt;&amp;amp; nums)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return buildBinarySearchTree(nums,0,nums.size()-1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TreeNode* buildBinarySearchTree(Vector&amp;lt;int&amp;gt;&amp;amp; nums, int left,int right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(left &amp;gt; right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int mid = (right - left) / 2 + left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TreeNode* node = new TreeNode(nums[mid]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    node-&amp;gt;left = buildBinarySearchTree(nums,left, mid-1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    node-&amp;gt;right = buildBinarySearchTree(nums,mid+1,right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/31/Android-%E8%93%9D%E7%89%99%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</guid>
            <title>Android 蓝牙应用开发流程</title>
            <link>http://example.com/2022/03/31/Android-%E8%93%9D%E7%89%99%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</link>
            <category>Android</category>
            <category>蓝牙</category>
            <pubDate>Thu, 31 Mar 2022 22:30:19 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;蓝牙权限申请&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#蓝牙权限申请&#34;&gt;#&lt;/a&gt; 蓝牙权限申请&lt;/h1&gt;
&lt;p&gt;目标应用的 targetSdkVersion &amp;gt;= 31，那么应该申请一下权限&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;搜索蓝牙设备权限 ：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_SCAN&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启蓝牙对其他设备可见的权限：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_ADVERTISE&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;与已经配对过的设备进行通讯：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_CONNECT&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;传统蓝牙权限，需要声明权限的 maxSdkVersion 来满足兼容性。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!-- Request legacy Bluetooth permissions on older devices. --&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH&amp;quot;  		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	android:maxSdkVersion=&amp;quot;30&amp;quot; /&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_ADMIN&amp;quot;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	android:maxSdkVersion=&amp;quot;30&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取蓝牙设备真实位置信息的权限：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_FINE_LOCATION&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目标应用的 targetSdkVersion &amp;lt;= 30，那么应该申请一下权限&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//if(version &amp;gt; 29)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_FINE_LOCATION&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_COARSE_LOCATION&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-feature android:name=&amp;quot;android.hardware.bluetooth&amp;quot; android:required=&amp;quot;true&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;// 发现设备权限&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_ADMIN&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;经典蓝牙连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#经典蓝牙连接&#34;&gt;#&lt;/a&gt; 经典蓝牙连接&lt;/h1&gt;
&lt;h2 id=&#34;创建bluetoothadapter对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建bluetoothadapter对象&#34;&gt;#&lt;/a&gt; 创建 BluetoothAdapter 对象&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;val adapter = BluetoothAdapter.getDefaultAdapter()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取蓝牙状态：蓝牙是否开启，如果没有开启，就跳转到蓝牙开启页面&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if (bluetoothAdapter?.isEnabled == false) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	val enableBtIntent = Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;监听蓝牙状态变化，蓝牙状态由 4 种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;STATE_ON   蓝牙已开启，该状态下才能继续使用 BluetoothAdapter 进行蓝牙配对&lt;/li&gt;
&lt;li&gt;STATE_OFF  蓝牙已关闭。&lt;/li&gt;
&lt;li&gt;STATE_TURNING_ON，正在开启种，该状态 BluetoothAdapter 还无法使用&lt;/li&gt;
&lt;li&gt;STATE_TURNING_OFF 正在关闭种，可以在这个状态去关闭蓝牙连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用系统广播&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//1 声明权限 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//2 开启广播监听&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun registerBluetoothReceiver(context : Context)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val intentFilter = IntentFilter().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; addAction(BluetoothAdapter.ACTION_STATE_CHANGED)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; context.registerReceiver(bluetoothReceiver,intentFilter)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val bluetoothReceiver = object : BroadcastReceiver() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    override fun onReceive(context: Context?, intent: Intent?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        when(intent?.action)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            BluetoothAdapter.ACTION_STATE_CHANGED -&amp;gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                val state = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,BluetoothAdapter.STATE_OFF)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                val prestate = intent.getIntExtra(BluetoothAdapter.EXTRA_PREVIOUS_STATE,BluetoothAdapter.STATE_OFF)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;扫描蓝牙设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扫描蓝牙设备&#34;&gt;#&lt;/a&gt; 扫描蓝牙设备&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fun registerBluetoothReceiver(context : Context)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val intentFilter = IntentFilter().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        addAction(BluetoothDevice.ACTION_FOUND)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; context.registerReceiver(bluetoothReceiver,intentFilter)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val bluetoothReceiver = object : BroadcastReceiver() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    override fun onReceive(context: Context?, intent: Intent?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        when(intent?.action)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            BluetoothDevice.ACTION_FOUND -&amp;gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                val device: BluetoothDevice? =  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                device?.run &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val deviceName = name  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val deviceHardwareAddress = address // MAC address  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;配对&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配对&#34;&gt;#&lt;/a&gt; 配对&lt;/h2&gt;
&lt;p&gt;蓝牙建立连接也是一个 C/S 模型，需要一个 Server 和一个 Client&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BluetoothServerSocket   蓝牙服务端 Socket 接口，监听客户端的连接，收到了连接请求后会返回一个 BluetoothSocket 接口对象用来通讯&lt;/li&gt;
&lt;li&gt;BluetoothSocket   蓝牙双方通讯的 socket 接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;服务端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务端&#34;&gt;#&lt;/a&gt; 服务端&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private inner class AcceptThread : Thread() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private val mmServerSocket: BluetoothServerSocket? by lazy(LazyThreadSafetyMode.NONE) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; bluetoothAdapter?.listenUsingInsecureRfcommWithServiceRecord(&amp;quot;YOUR DEVICE NAME&amp;quot;, UUID.fromString(&amp;quot;MY_UUID&amp;quot;))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Keep listening until exception occurs or a socket is returned.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; var shouldLoop = true  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; while (shouldLoop) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            val socket: BluetoothSocket? = try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmServerSocket?.accept()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.e(TAG, &amp;quot;Socket&amp;#x27;s accept() method failed&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shouldLoop = false  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; null &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            socket?.also &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; manageMyConnectedSocket(it)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmServerSocket?.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shouldLoop = false  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Closes the connect socket and causes the thread to finish.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun cancel() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmServerSocket?.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Could not close the connect socket&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun manageMyConnectedSocket(socket : BluetoothSocket)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //execute bluetooth communicate  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;客户端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#客户端&#34;&gt;#&lt;/a&gt; 客户端&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private inner class ConnectThread(device: BluetoothDevice) : Thread() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private val mmSocket: BluetoothSocket? by lazy(LazyThreadSafetyMode.NONE) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; device.createRfcommSocketToServiceRecord(UUID.fromString(&amp;quot;MY_UUID&amp;quot;))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Cancel discovery because it otherwise slows down the connection.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; bluetoothAdapter?.cancelDiscovery()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mmSocket?.let &amp;#123; socket -&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // Connect to the remote device through the socket. This call blocks  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // until it succeeds or throws an exception. socket.connect()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // The connection attempt succeeded. Perform work associated with  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // the connection in a separate thread. manageMyConnectedSocket(socket)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Closes the client socket and causes the thread to finish.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun cancel() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmSocket?.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Could not close the client socket&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据传输&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据传输&#34;&gt;#&lt;/a&gt; 数据传输&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private val handler: Handler = Handler()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val MESSAGE_READ: Int = 0  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val MESSAGE_WRITE: Int = 1  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val MESSAGE_TOAST: Int = 2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private inner class ConnectedThread(private val mmSocket: BluetoothSocket) : Thread() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private val mmInStream: InputStream = mmSocket.inputStream  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; private val mmOutStream: OutputStream = mmSocket.outputStream  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; private val mmBuffer: ByteArray = ByteArray(1024) // mmBuffer store for the stream  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        var numBytes: Int // bytes returned from read()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // Keep listening to the InputStream until an exception occurs. while (true) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Read from the InputStream.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; numBytes = try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmInStream.read(mmBuffer)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.d(TAG, &amp;quot;Input stream was disconnected&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Send the obtained bytes to the UI activity.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val readMsg = handler.obtainMessage(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                MESSAGE_READ, numBytes, -1,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmBuffer)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            readMsg.sendToTarget()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Call this from the main activity to send data to the remote device.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun write(bytes: ByteArray) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmOutStream.write(bytes)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Error occurred when sending data&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Send a failure message back to the activity.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val writeErrorMsg = handler.obtainMessage(MESSAGE_TOAST)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            val bundle = Bundle().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; putString(&amp;quot;toast&amp;quot;, &amp;quot;Couldn&amp;#x27;t send data to the other device&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; writeErrorMsg.data = bundle  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handler.sendMessage(writeErrorMsg)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Share the sent message with the UI activity.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val writtenMsg = handler.obtainMessage(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MESSAGE_WRITE, -1, -1, mmBuffer)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writtenMsg.sendToTarget()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Call this method from the main activity to shut down the connection.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun cancel() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmSocket.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Could not close the connect socket&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;低功耗蓝牙bluetooth-low-energy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#低功耗蓝牙bluetooth-low-energy&#34;&gt;#&lt;/a&gt; 低功耗蓝牙（Bluetooth Low Energy）&lt;/h1&gt;
&lt;h2 id=&#34;ble设备发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ble设备发现&#34;&gt;#&lt;/a&gt; BLE 设备发现&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmx1ZXRvb3RoLmNvbS9ibG9nL2FkdmVydGlzaW5nLXdvcmtzLXBhcnQtMS8=&#34;&gt;https://www.bluetooth.com/blog/advertising-works-part-1/&lt;/span&gt;&lt;br /&gt;
 低功耗蓝牙协议栈中包含的一个用来帮助设备彼此发现并连接的配置文件：Generic Access Profile (GAP)&lt;br /&gt;
 这个发现过程里面就有一个称之为 &amp;quot;advertise&#39;&#39; 的动作，表明设备想被其他设备发现。&lt;br /&gt;
处于 Advertise 的设备会持续向周围发送很小的数据包，让周围的扫描设备能够发现它。&lt;br /&gt;
对于 GAP 协议来说 发送 advertise 广播的设备可以被看做是边缘设备；也可以作为一个广播者存在，不接受任何的连接请求，单纯只发送广播。&lt;/p&gt;
&lt;p&gt;处于扫描中的设备是作为 GAP 的观察者，当其对连接上其他设备感兴趣时，被作为 GAP 中心设备。&lt;/p&gt;
&lt;p&gt;概念：&lt;br /&gt;
PDU: packat data unit&lt;br /&gt;
ADV: advertising 广播&lt;/p&gt;
&lt;p&gt;Android 中低功耗蓝牙发送广播与开启扫描方式：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//第一步依然是初始化BluetoothAdapter，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val adapter = BluetoothAdapter.getDefaultAdapter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// next step: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//发送广播，在边缘设备上实现，Peripheral&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun startAdvertising()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bluetoothAdapter?.bluetoothLeAdvertiser?.run &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val setting = AdvertiseSettings.Builder().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; /*设置Advertise广播的参数  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 设置广播模式 三种模式:ADVERTISE_MODE_LOW_POWER 低功耗，默认模式  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *                   ADVERTISE_MODE_BALANCED 平衡模式，平衡了广播频率与电量消耗  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *                   ADVERTISE_MODE_LOW_LATENCY 传统模式，高耗电模式。  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */ setAdvertiseMode(AdvertiseSettings.ADVERTISE_MODE_LOW_POWER)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // 广播是否是可连接的  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; setConnectable(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            //设置广播时长，如果为0，则不会中断  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; setTimeout(0)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            /*  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 设置广播传输功耗等级，可以限制广播数据包的可见范围:  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_ULTRA_LOW 最低  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_LOW 低  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_MEDIUM 中  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_HIGH 高  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * */ setTxPowerLevel(AdvertiseSettings.ADVERTISE_TX_POWER_LOW)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.build()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Ble广播数据包，需要注意的是AdvertiseData中包含的数据大小不能超过31个字节  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val data = AdvertiseData.Builder().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; setIncludeDeviceName(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setIncludeTxPowerLevel(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            addServiceUuid(ParcelUuid.fromString(UUID.randomUUID().toString()))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            addManufacturerData(0x0001, byteArrayOf())  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.build()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        val callback = object :AdvertiseCallback()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onStartSuccess(settingsInEffect: AdvertiseSettings?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onStartSuccess(settingsInEffect)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onStartFailure(errorCode: Int) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onStartFailure(errorCode)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startAdvertising(setting,data,callback)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//扫描广播，在中心设备上实现,Center  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun discovery()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bluetoothAdapter?.bluetoothLeScanner?.apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val scanSetting = ScanSettings.Builder().apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setLegacy(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setScanMode(ScanSettings.SCAN_MODE_BALANCED)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.build()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        val filter = mutableListOf&amp;lt;ScanFilter&amp;gt;().apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(ScanFilter.Builder().apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setServiceUuid(ParcelUuid.fromString(UUID.randomUUID().toString()))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                setManufacturerData(0x0001, byteArrayOf())  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;.build())  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.toList()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startScan(filter,scanSetting,object: ScanCallback()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onScanResult(callbackType: Int, result: ScanResult?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onScanResult(callbackType, result)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onBatchScanResults(results: MutableList&amp;lt;ScanResult&amp;gt;?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onBatchScanResults(results)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onScanFailed(errorCode: Int) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onScanFailed(errorCode)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/31/Android-Surface%E6%B8%B2%E6%9F%93%E6%9C%BA%E5%88%B6/</guid>
            <title>Android Surface渲染机制</title>
            <link>http://example.com/2022/03/31/Android-Surface%E6%B8%B2%E6%9F%93%E6%9C%BA%E5%88%B6/</link>
            <category>Android</category>
            <pubDate>Thu, 31 Mar 2022 00:37:12 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android Surface 的渲染机制&lt;/p&gt;
&lt;h1 id=&#34;1surface是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1surface是什么&#34;&gt;#&lt;/a&gt; 1.Surface 是什么？&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Handle onto a raw buffer that is being managed by the screen compositor.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A Surface is generally created by or from a consumer of image buffers (such as a SurfaceTexture, android.media.MediaRecorder, or android.renderscript.Allocation), and is handed to some kind of producer (such as OpenGL, MediaPlayer, or CameraDevice) to draw into.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Note: A Surface acts like a weak reference to the consumer it is associated with. By itself it will not keep its parent consumer from being reclaimed.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这段话是 Surface.java 这个类的注释，大致意思是：&lt;br /&gt;
Surface 是一个句柄，指向一个 raw buffer 缓冲对象，这个缓冲对象由 screen compositer 管理。Surface 通常由一个图像缓冲的消费者创建，例如 SurfaceTexture，MediaRecorder，Allocation。然后被送给各种消费者来绘制。&lt;/p&gt;
&lt;h2 id=&#34;window创建流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#window创建流程&#34;&gt;#&lt;/a&gt; window 创建流程&lt;/h2&gt;
&lt;p&gt;在 Activity 的启动过程中，&lt;br /&gt;
ActivityThread.handleLaunchActivity 中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public Activity handleLaunchActivity(ActivityClientRecord r,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PendingTransactionActions pendingActions, Intent customIntent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	WindowManagerGlobal.initialize();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	final Activity a = performLaunchActivity(r, customIntent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ContextImpl appContext = createBaseContextForActivity(r);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Activity activity = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	activity = mInstrumentation.newActivity(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cl, component.getClassName(), r.intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Application app = r.packageInfo.makeApplication(false, mInstrumentation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	activity.attach(appContext, this, getInstrumentation(), r.token,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.ident, app, r.intent, r.activityInfo, title, r.parent,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.embeddedID, r.lastNonConfigurationInstances, config,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.referrer, r.voiceInteractor, window, r.configCallback,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.assistToken, r.shareableActivityToken);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mInstrumentation.callActivityOnCreate(activity, r.state);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 在 Activity 的 attch 中，创建创建了 Window 对象。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final void attach(Context context, ActivityThread aThread,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Instrumentation instr, IBinder token, int ident,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Application application, Intent intent, ActivityInfo info,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CharSequence title, Activity parent, String id,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        NonConfigurationInstances lastNonConfigurationInstances,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Configuration config, String referrer, IVoiceInteractor voiceInteractor,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Window window, ActivityConfigCallback activityConfigCallback, IBinder assistToken,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        IBinder shareableActivityToken) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	attachBaseContext(context);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mFragments.attachHost(null /*parent*/);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mWindow = new PhoneWindow(this, window, activityConfigCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mWindow.setWindowManager(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (WindowManager)context.getSystemService(Context.WINDOW_SERVICE),  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mToken, mComponent.flattenToString(),  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (info.flags &amp;amp; ActivityInfo.FLAG_HARDWARE_ACCELERATED) != 0);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (mParent != null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	mWindow.setContainer(mParent.getWindow());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mWindowManager = mWindow.getWindowManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
Activity 中的 WindowManager 的初始化&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void setWindowManager(WindowManager wm, IBinder appToken, String appName,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        boolean hardwareAccelerated) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mAppToken = appToken;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mAppName = appName;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mHardwareAccelerated = hardwareAccelerated;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (wm == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wm = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mWindowManager = ((WindowManagerImpl)wm).createLocalWindowManager(this);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//WindowManagerImpl.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public WindowManagerImpl createLocalWindowManager(Window parentWindow) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Bridge.getLog().fidelityWarning(ILayoutLog.TAG_UNSUPPORTED,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;quot;The preview does not support multiple windows.&amp;quot;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            null, null, null);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return this;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
ActivityThread.handleResumeActivity 中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//ActivityThread.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void handleResumeActivity(ActivityClientRecord r, boolean finalStateRequest,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        boolean isForward, String reason) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (r.activity.mVisibleFromClient) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	r.activity.makeVisible();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//Activity.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void makeVisible() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (!mWindowAdded) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ViewManager wm = getWindowManager();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wm.addView(mDecor, getWindow().getAttributes());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mWindowAdded = true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mDecor.setVisibility(View.VISIBLE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 会通过 &lt;code&gt;WindowManager.addView(View,Attributes)&lt;/code&gt;  将 DecorView 添加到 Window 上。&lt;/p&gt;
&lt;p&gt;WindowManager 实现类是 WindowManagerImpl，他又将添加 View 的操作委托给了 WindowmanagerGlobal。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//WindowmanagerGlobal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void addView(View view, ViewGroup.LayoutParams params,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Display display, Window parentWindow, int userId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ViewRootImpl root = new ViewRootImpl(view.getContext(), display);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	root.setView(view, wparams, panelParentView, userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//ViewRootImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void setView(View view, WindowManager.LayoutParams attrs, View panelParentView,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int userId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//启动Choreographer的Vsync信号监听，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	requestLayout();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//通过WindowSession请求wms，这里的WindowSession是一个binder接口。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	es = mWindowSession.addToDisplayAsUser(mWindow, mWindowAttributes,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getHostVisibility(), mDisplay.getDisplayId(), userId,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mInsetsController.getRequestedVisibility(), inputChannel, mTempInsets,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mTempControls);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//WindowSession初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static IWindowSession getWindowSession() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (WindowManagerGlobal.class) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (sWindowSession == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                // Emulate the legacy behavior.  The global instance of InputMethodManager  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // was instantiated here. // TODO(b/116157766): Remove this hack after cleaning up @UnsupportedAppUsage InputMethodManager.ensureDefaultInstanceForDefaultDisplayIfNecessary();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                IWindowManager windowManager = getWindowManagerService();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sWindowSession = windowManager.openSession(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        new IWindowSessionCallback.Stub() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public void onAnimatorScaleChanged(float scale) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                ValueAnimator.setDurationScale(scale);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (RemoteException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                throw e.rethrowFromSystemServer();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return sWindowSession;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 从这里进入了 system_server 中的 WMS 进行执行&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//Session.java   Session是IWindowSession这个AIDL接口的实现类，是应用与WMS进行交互的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public int addToDisplay(IWindow window, WindowManager.LayoutParams attrs,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int viewVisibility, int displayId, InsetsState requestedVisibility,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InputChannel outInputChannel, InsetsState outInsetsState,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InsetsSourceControl[] outActiveControls) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return mService.addWindow(this, window, attrs, viewVisibility, displayId,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            UserHandle.getUserId(mUid), requestedVisibility, outInputChannel, outInsetsState,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            outActiveControls);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 最后进入了 WindowManagerService 中执行：&lt;/p&gt;
&lt;h2 id=&#34;surface的创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#surface的创建&#34;&gt;#&lt;/a&gt; Surface 的创建&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//1.WindowManagerService.addWindow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public int addWindow(Session session, IWindow client, LayoutParams attrs, int viewVisibility,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int displayId, int requestUserId, InsetsState requestedVisibility,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InputChannel outInputChannel, InsetsState outInsetsState,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InsetsSourceControl[] outActiveControls) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	final DisplayContent displayContent = getDisplayContentOrCreate(displayId, attrs.token);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	WindowToken token = displayContent.getWindowToken(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        hasParent ? parentWindow.mAttrs.token : attrs.token);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (token == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		token = new WindowToken.Builder(this, binder, type)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .setDisplayContent(displayContent)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .setOwnerCanManageAppTokens(session.mCanAddInternalSystemWindow)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .setRoundedCornerOverlay(isRoundedCornerOverlay)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	final WindowState win = new WindowState(this, session, client, token, parentWindow,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        appOp[0], attrs, viewVisibility, session.mUid, userId,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        session.mCanAddInternalSystemWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	win.attach();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//2.WindowSession.attach()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void attach() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mSession.windowAddedLocked();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//3.Session.windowAddedLocked()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; void windowAddedLocked()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	mSurfaceSession = new SurfaceSession();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; //4.SurfaceSession&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public SurfaceSession() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mNativeClient = nativeCreate();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5.android_view_SurfaceSession.nativeCreate()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;static jlong nativeCreate()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SurfaceClientComposer* client = new SurfaceClientComposer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;surface上屏流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#surface上屏流程&#34;&gt;#&lt;/a&gt; Surface 上屏流程&lt;/h2&gt;
&lt;p&gt;1.Android 发送了 Vsync 垂直同步脉冲信号&lt;/p&gt;
&lt;p&gt;-&amp;gt; DisplaySync&lt;br /&gt;
-&amp;gt;Choreographer 接收到 Vsync-app 信号&lt;br /&gt;
 -&amp;gt;Choreographer 回调 doFrame&lt;br /&gt;
-&amp;gt;ViewRootImpl 执行 scheduleTravesals, 同时发送一个同步屏障&lt;br /&gt;
 -&amp;gt; 取消同步屏障，执行 performTravesals&lt;br /&gt;
-&amp;gt;performMeasure(),performLayout(),performDraw()&lt;br /&gt;
-&amp;gt; 申请 BufferQueue 中的图像缓冲区对象&lt;br /&gt;
 -&amp;gt;RenderThread 发送 OpenGL 命令&lt;br /&gt;
 -&amp;gt;queueBuffer&lt;/p&gt;
&lt;p&gt;-&amp;gt;DisplaySync&lt;br /&gt;
-&amp;gt;SurfaceFlinger 收到 Vsync-sf&lt;br /&gt;
-&amp;gt; 释放上一次获取 buffer 缓冲区对象&lt;br /&gt;
 -&amp;gt;onMessageReceive (INVALIDATE)   判断当前是否有 Layer 状态发生变化，BufferQueue 中是否有新数据&lt;br /&gt;
 -&amp;gt;onMessageReceive (REFRESH)  获取了 LAYER 后，将 buffer 发送给 HWC 进行合成图层&lt;br /&gt;
 -&amp;gt; 图层合成后通过 drm 将帧送显上屏&lt;br /&gt;
 -&amp;gt;HWC 归还 buffer 给 surfaceFlinger，待下一次 Vsync-sf 时 release 这次的 buffer。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/30/Android%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
            <title>Android系统启动流程</title>
            <link>http://example.com/2022/03/30/Android%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
            <category>Android</category>
            <category>系统</category>
            <pubDate>Wed, 30 Mar 2022 00:12:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android 启动分 5 个阶段：&lt;/p&gt;
&lt;h2 id=&#34;bootloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bootloader&#34;&gt;#&lt;/a&gt; BootLoader&lt;/h2&gt;
&lt;p&gt;上电后引导芯片从指定位置加载 bootloader 程序，初始化 ram，&lt;br /&gt;
然后启动 linux 内核&lt;/p&gt;
&lt;h2 id=&#34;linux内核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux内核&#34;&gt;#&lt;/a&gt; Linux 内核&lt;/h2&gt;
&lt;p&gt;启动 linux 内核后，会初始化内存管理单元和缓存，进程管理。&lt;br /&gt;
加载驱动：Display Driver，Camera Driver, Input，Binder Driver 等。&lt;br /&gt;
最后启动 init 进程&lt;/p&gt;
&lt;h2 id=&#34;init进程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#init进程&#34;&gt;#&lt;/a&gt; init 进程&lt;/h2&gt;
&lt;p&gt;linux 内核启动中创建，是内核创建的第一个用户进程，pid 为 1，执行分两个阶段，分别在从内核态和用户态执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一阶段，设置环境变量，创建挂载文件系统，设置 selinux，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二阶段，初始化启动属性服务，解析 init.rc 文件，启动 ServiceManager, 然后启动 Zygote 进程，最后自身进入一个无限循环等待事件处理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zygote&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zygote&#34;&gt;#&lt;/a&gt; Zygote&lt;/h2&gt;
&lt;p&gt;创建 Java 虚拟机（Dalvik/ART）&lt;br /&gt;
注册 JNI 函数&lt;br /&gt;
通过 JNI 调用到 zygoteInit.java 类中的 main 方法，第一次进入 Java 世界。&lt;br /&gt;
创建一个 Socket 并监听来自 AMS 的 fork 请求&lt;br /&gt;
启动 system_server 进程&lt;/p&gt;
&lt;h2 id=&#34;system_server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#system_server&#34;&gt;#&lt;/a&gt; system_server&lt;/h2&gt;
&lt;p&gt;启动 binder 线程池&lt;br /&gt;
创建 SystemServiceManager 负责创建其他系统服务&lt;br /&gt;
创建 AMS,WMS,PWS,IMS 等系统服务&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/26/ExoPlayer-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%881%EF%BC%89/</guid>
            <title>ExoPlayer 源码解析（1）</title>
            <link>http://example.com/2022/03/26/ExoPlayer-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%881%EF%BC%89/</link>
            <category>Android</category>
            <category>多媒体</category>
            <category>ExoPlayer</category>
            <pubDate>Sat, 26 Mar 2022 18:52:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#start&#34;&gt;#&lt;/a&gt; Start&lt;/h1&gt;
&lt;h2 id=&#34;1exoplayer起播时序图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1exoplayer起播时序图&#34;&gt;#&lt;/a&gt; 1.ExoPlayer 起播时序图&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/b5348f57gy1h0oaiq9lpej21e313iqpe.jpg&#34; alt=&#34;ExoPlayer播放.drawio&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;2exoplayer的初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2exoplayer的初始化&#34;&gt;#&lt;/a&gt; 2.ExoPlayer 的初始化&lt;/h2&gt;
&lt;p&gt;先看看 ExoPlayer 的初始化&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;protected StyledPlayerView playerView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private DataSource.Factory dataSourceFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void onCreate(@Nullable Bundle savedInstanceState)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dataSourceFactory = DemoUtil.getDataSourceFactory(/* context= */ this);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//获取在XML中声明的StyledPlayerView对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	playerView = findViewById(R.id.player_view);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//初始化ExoPlayer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void initializePlayer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建播放媒体列表对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mediaItems = createMediaItems(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建渲染器工厂对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	RenderersFactory renderersFactory =  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   DemoUtil.buildRenderersFactory(/* context= */ this, preferExtensionDecoders);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建媒体通道选择器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	trackSelector = new DefaultTrackSelector(/* context= */ this);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建ExoPlayer对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player =  new ExoPlayer.Builder(/* context= */ this)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.setRenderersFactory(renderersFactory)  //设置渲染器工厂对象  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.setMediaSourceFactory(createMediaSourceFactory())    //设置媒体源工厂对象  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.setTrackSelector(trackSelector)    //设置媒体通道选择器  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.setTrackSelectionParameters(trackSelectionParameters);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//设置播放器事件回调&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.addListener(new PlayerEventListener());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//设置音频参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.setAudioAttributes(AudioAttributes.DEFAULT, /* handleAudioFocus= */ true);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//设置是否自动开始播放&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.setPlayWhenReady(startAutoPlay);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面就是 ExoPlayer 的播放代码，总结一下播放的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 DataSource.Factory 工厂对象&lt;/li&gt;
&lt;li&gt;创建 StyledPlayerView 播放器 UI 对象&lt;/li&gt;
&lt;li&gt;创建 RenderersFactory 对象&lt;/li&gt;
&lt;li&gt;创建 MediaSource.Factory 对象&lt;/li&gt;
&lt;li&gt;创建 TrackSelector 对象&lt;/li&gt;
&lt;li&gt;通过 ExoPlayer.Builder 对象构造 ExoPlayer 对象&lt;/li&gt;
&lt;li&gt;添加播放器事件回调，设置默认音频参数&lt;/li&gt;
&lt;li&gt;设置是否自动开始播放&lt;/li&gt;
&lt;li&gt;开始起播&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3重要的对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3重要的对象&#34;&gt;#&lt;/a&gt; 3. 重要的对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;DataSource.Factory&lt;br /&gt;
DataSource.Factory 是负责创建 DataSource 对象的工厂类&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DataSource 代表 Uri 识别的数据源，根据不同的协议从不同媒体介质中获取视频数据流&lt;br /&gt;
下面是 ExoPlayer 实现了的数据源类型&lt;br /&gt;
&lt;img data-src=&#34;https://tvax3.sinaimg.cn/large/b5348f57gy1h0oajo70wvj20xz0pdb0a.jpg&#34; alt=&#34;DataSource实现类&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;StyledPlayerView&lt;br /&gt;
 播放器 UI 对象，包含了视频 UI，控制器 UI，字幕，专辑等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RenderersFactory&lt;br /&gt;
RenderersFactory 是负责创建 Renderer 的工厂对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Renderer 渲染器&lt;br /&gt;
 ExoPlayer 定义了 6 种 Renderer 对象：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;VideoRenderer    视频渲染器，负责视频渲染，实现类有 MediaCodecVideoRenderer，还有 ffmpeg 扩展&lt;/li&gt;
&lt;li&gt;AudioRenderer   音频渲染器&lt;/li&gt;
&lt;li&gt;TextRenderer  字幕渲染器&lt;/li&gt;
&lt;li&gt;MetadataRenderer  视频元数据渲染器&lt;/li&gt;
&lt;li&gt;CameraMotionRenderer  相机动作渲染器，CameraMotionRenderer 是处理相机拍摄的视频播放时，相机在物理上可能会有旋转动作，导致相机拍摄的视频也会产生 rotation，所以在播放相机拍摄的视频时需要解析视频中的 rotation 属性，然后在 OpenGL ES 渲染的时候，将窗口进行旋转，使画面恢复正常方向。&lt;/li&gt;
&lt;li&gt;MiscellaneousRenderer  混合渲染器 ，Google 暂时没有实现该渲染器，应该是留作扩展用。&lt;br /&gt;
&lt;img data-src=&#34;https://tvax4.sinaimg.cn/large/b5348f57gy1h0oak2u83fj20y80ieasz.jpg&#34; alt=&#34;Renderer实现类&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;MediaSource.Factory&lt;br /&gt;
MediaSource.Factory 是负责构造 MediaSource 对象的工厂类&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MediaSource 媒体源，ExoPlayer 使用 MediaSource 实现了多视频播放逻辑，还有不停了流媒体协议类型等。&lt;br /&gt;
ExoPlayer 预定义的 MediaSource 类型：&lt;br /&gt;
&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/b5348f57gy1h0oakcx1ssj20xi0exk6h.jpg&#34; alt=&#34;MediaSource实现类&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TrackSelector&lt;br /&gt;
 选择器：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;媒体流：用于在播放时选择容器中封装的的不同的视频、音频通道，比如在 HLS\DASH 流播放时根据网络带宽，设备性能选择不同分辨率的流。&lt;/li&gt;
&lt;li&gt;通道：播放时根据情况选择视频中不同的视频 \ 音频 \ 字幕通道。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;end&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#end&#34;&gt;#&lt;/a&gt; End&lt;/h1&gt;
&lt;p&gt;这里先粗略分析了一下 ExoPlayer 大致播放流程，还有部分的类的介绍，后面再根据情况对不同模块进行分析。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2019/03/28/LeetCode-17/</guid>
            <title>LeetCode 17</title>
            <link>http://example.com/2019/03/28/LeetCode-17/</link>
            <category>算法</category>
            <category>LeetCode</category>
            <pubDate>Thu, 28 Mar 2019 20:30:25 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;LeetCode 第 17 题 Java 实现&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbGV0dGVyLWNvbWJpbmF0aW9ucy1vZi1hLXBob25lLW51bWJlci8=&#34;&gt;电话号码的字母组合&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static Map&amp;lt;String, String&amp;gt; map;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map = new HashMap&amp;lt;String, String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;0&amp;quot;, &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;1&amp;quot;, &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;2&amp;quot;, &amp;quot;abc&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;3&amp;quot;, &amp;quot;def&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;4&amp;quot;, &amp;quot;ghi&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;5&amp;quot;, &amp;quot;jkl&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;6&amp;quot;, &amp;quot;mno&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;7&amp;quot;, &amp;quot;pqrs&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;8&amp;quot;, &amp;quot;tuv&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(&amp;quot;9&amp;quot;, &amp;quot;wxyz&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public List&amp;lt;String&amp;gt; letterCombinations(String digits) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(digits == null || digits.length() == 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return new ArrayList&amp;lt;String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return recusiveResult(digits, 0, digits.length() - 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private List&amp;lt;String&amp;gt; recusiveResult(String digits, int left, int right) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        List&amp;lt;String&amp;gt; result = new ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (left == right) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String str = map.get(digits.charAt(left) + &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for (int j = 0; j &amp;lt; str.length(); j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                result.add(str.charAt(j) + &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else if (left == right - 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String Sleft = map.get(digits.charAt(left) + &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String Sright = map.get(digits.charAt(right) + &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (Sleft != null &amp;amp;&amp;amp; Sleft.length() &amp;gt; 0 &amp;amp;&amp;amp; Sright != null &amp;amp;&amp;amp; Sright.length() &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for (int i = 0; i &amp;lt; Sleft.length(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    for (int j = 0; j &amp;lt; Sright.length(); j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        result.add(Sleft.charAt(i) + &amp;quot;&amp;quot; + Sright.charAt(j));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (Sleft != null &amp;amp;&amp;amp; Sleft.length() &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    for (int i = 0; i &amp;lt; Sleft.length(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        result.add(Sleft.charAt(i) + &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    for (int i = 0; i &amp;lt; Sright.length(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        result.add(Sright.charAt(i) + &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            int mid = (left + right) / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            List&amp;lt;String&amp;gt; lefStrings = recusiveResult(digits, left, mid);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            List&amp;lt;String&amp;gt; rightStrings = recusiveResult(digits, mid + 1, right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for (int i = 0; i &amp;lt; lefStrings.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for (int j = 0; j &amp;lt; rightStrings.size(); j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    result.add(lefStrings.get(i) + rightStrings.get(j));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2018/06/10/HLS%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
            <title>HLS知识点</title>
            <link>http://example.com/2018/06/10/HLS%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
            <category>多媒体</category>
            <category>流媒体协议</category>
            <category>HLS</category>
            <pubDate>Sun, 10 Jun 2018 20:07:41 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;hls协议简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hls协议简介&#34;&gt;#&lt;/a&gt; HLS 协议简介&lt;/h2&gt;
&lt;p&gt;全称 HTTP Live Streaming，是由苹果公司开发的用于支持在线音视频播放的流媒体协议，该协议是基于 HTTP 协议实现的。&lt;/p&gt;
&lt;p&gt;HLS 是由 m3u8 配置文件和 TS 分片文件组成的。&lt;/p&gt;
&lt;h2 id=&#34;m3u8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#m3u8&#34;&gt;#&lt;/a&gt; m3u8&lt;/h2&gt;
&lt;p&gt;m3u8 是 m3u 文件的一种，是 HLS 定义的配置文件，客户端从该文件中解析出播放所需的元数据后，从中寻找可用的媒体流的地址，然后下载媒体流进行播放。&lt;/p&gt;
&lt;p&gt;m3u8 其实是一个播放列表文件 playlist，里面记录了可用的媒体片段信息，m3u8 文件支持嵌套。&lt;/p&gt;
&lt;p&gt;m3u8 文件结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EXTM3U    文件第一行配置指定这是一个 M3u8 文件&lt;/li&gt;
&lt;li&gt;EXT-X-MEDIA-SEQUENCE  第一个 TS 分片起始位置序号；直播时则为直播段起始位置&lt;/li&gt;
&lt;li&gt;EXT-X-TARGETDURATION 每个分片最大时长&lt;/li&gt;
&lt;li&gt;EXT-X-ALLOW-CACHE 是否运行缓存&lt;/li&gt;
&lt;li&gt;EXT-X-ENDLIST 文件结束符，如果是直播流，则没有文件结束符&lt;/li&gt;
&lt;li&gt;EXTINF 附加信息，分片的时长，带宽等&lt;/li&gt;
&lt;li&gt;EXT-X-VERSION m3u8 版本号&lt;/li&gt;
&lt;li&gt;EXT-X-DISCONTINUITY 分片中断&lt;/li&gt;
&lt;li&gt;EXT-X-PLAYLIST-TYPE 流媒体类型
&lt;ul&gt;
&lt;li&gt;类型： VOD  表明是点播源，文件中应该也有 ENDLIST 标签&lt;/li&gt;
&lt;li&gt;类型： EVENT   表明是直播源，文件中应该没有 ENDLIST 标签，不允许服务器修改已有的数据，但是可以在文件结尾添加新数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;EXT-X-KEY  是否加密解析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;广告插入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#广告插入&#34;&gt;#&lt;/a&gt; 广告插入&lt;/h3&gt;
&lt;p&gt;可以在 m3u8 中插入广告的 ts，实现广告的播放，但是有个问题是广告的视频编码格式与原视频可能不一样，所以需要在广告的 TS 分片前后加上 DISCONTINUITY 这个标签，表明视频前后中断，需要客户端去处理该情况。&lt;/p&gt;
&lt;h2 id=&#34;mpeg-2-transport-stream&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mpeg-2-transport-stream&#34;&gt;#&lt;/a&gt; MPEG-2 Transport Stream&lt;/h2&gt;
&lt;p&gt;更有弹性避免包丢失和损坏&lt;/p&gt;
&lt;p&gt;ts 流的数据包固定大小为 188 字节，由 4 个字节的头和 184 字节组成，&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/07/12/OpenGL-ES2-0%E4%B8%AD%E7%9A%84%E7%BA%B9%E7%90%86/</guid>
            <title>OpenGL ES2.0中的纹理</title>
            <link>http://example.com/2017/07/12/OpenGL-ES2-0%E4%B8%AD%E7%9A%84%E7%BA%B9%E7%90%86/</link>
            <category>图像处理</category>
            <category>OpenGL ES</category>
            <category>OpenGL ES2.0</category>
            <pubDate>Wed, 12 Jul 2017 10:49:46 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;opengl-中的texture纹理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opengl-中的texture纹理&#34;&gt;#&lt;/a&gt; OpenGL 中的 Texture（纹理）&lt;/h1&gt;
&lt;p&gt;翻译自&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5sZWFybm9wZW5nbGVzLmNvbS9hbmRyb2lkLWxlc3Nvbi1mb3VyLWludHJvZHVjaW5nLWJhc2ljLXRleHR1cmluZy8=&#34;&gt; Android 课程 3：基础纹理&lt;/span&gt; 英语好的小伙伴可以直接去这个网站学习 OpenGL ES2&lt;/p&gt;
&lt;h2 id=&#34;纹理介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#纹理介绍&#34;&gt;#&lt;/a&gt; 纹理介绍&lt;/h2&gt;
&lt;p&gt;纹理映射技术是构建一个真实 3D 世界最重要的方式。没有纹理映射的话，所以的东西都是光滑的渐变，看起来像人造的，像是 90 年代的控制台游戏&lt;/p&gt;
&lt;p&gt;首先大量使用了纹理技术的游戏，比如 Doom 和 Duke Nukem 3D，通过添加的视觉影响能极大的增强了游戏的真实性。&lt;/p&gt;
&lt;h2 id=&#34;纹理坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#纹理坐标系&#34;&gt;#&lt;/a&gt; 纹理坐标系&lt;/h2&gt;
&lt;p&gt;在 OpenGL 中，纹理坐标系使用（s，t）来代替（x，y）坐标，代表纹理上的点，最终映射到几何形上。另外需要注意的是纹理坐标系和其他的 OpenGL 坐标系一样，t（y）轴指向上，因此位置越高值越大。&lt;/p&gt;
&lt;p&gt;[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-AiDSpFC1-1648314308409)(&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ltZzQuaW1ndG4uYmRpbWcuY29tL2l0L3U9MjIyNjEzNjg0MywxNjkzMDA3ODk1JmFtcDtmbT0yNiZhbXA7Z3A9MC5qcGc=&#34;&gt;http://img4.imgtn.bdimg.com/it/u=2226136843,1693007895&amp;amp;fm=26&amp;amp;gp=0.jpg&lt;/span&gt;)]&lt;/p&gt;
&lt;h2 id=&#34;纹理映射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#纹理映射&#34;&gt;#&lt;/a&gt; 纹理映射&lt;/h2&gt;
&lt;p&gt;在这课中注意看 2D 纹理 (GL_TEXTURE_2D)。OpenGL ES 也提供了其他的纹理模型让你做不同和专业的效果。&lt;/p&gt;
&lt;h3 id=&#34;顶点着色器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#顶点着色器&#34;&gt;#&lt;/a&gt; 顶点着色器&lt;/h3&gt;
&lt;p&gt;从之前博客中的顶点着色器，增加一些修改：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;attribute vec2 a_TexCoordinate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;varying vec2 v_TexCoordinate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//将纹理坐标信息传递给片段着色器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v_TexCoordinate = a_TexCoordinate;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 在顶点着色器中我们添加了一个新的 attribute 类型 2 维向量来携带纹理的坐标信息作为输入数据。这会是基于每个顶点的，就像是位置，颜色，法线数据一样。我们还添加了一个新的 varying 型的变量来将数据传递进片段着色器中，通过三角形表面线性插入。&lt;/p&gt;
&lt;h3 id=&#34;片段着色器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#片段着色器&#34;&gt;#&lt;/a&gt; 片段着色器&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uniform sampler2D u_Texture;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;varing vec2 v_TexCoordinate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diffuse = diffuse * (1.0/(1.0+(0.1.*distance)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diffuse = diffuse + 0.3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gl_FragColor = (c_Color*diffuse*texture2D(u_Texture,v_TexCoordinate));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们添加了一个新的 uniform 类型 sampler2D 代表了实际的纹理数据 ()，v_TexCoordinate 从顶点着色器中获取到了纹理坐标数据，之后我们调用 texture2D (texture,textureCoordinate) 来读出纹理在当前坐标处的值。获取到了这个值后将它与其它项相乘就得到了最后的输出颜色。这种方式添加的纹理会有时在整个环境中较暗，所以可以将环境光上调一些来减少光的衰减。&lt;/p&gt;
&lt;h3 id=&#34;从一个图像中加载纹理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#从一个图像中加载纹理&#34;&gt;#&lt;/a&gt; 从一个图像中加载纹理&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public static int loadTexture(Bitmap bitmap)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       int[] textureHandle = new int[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       //由OpenGL ES生成一个纹理句柄并存放到textureHandle中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       GLES20.glGenTextures(1,textureHandle,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       if(textureHandle[0]!=0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           //将纹理绑定到OpenGL上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           GLES20.glBindTexture(GLES20.GL_TEXTURE_2D,textureHandle[0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           // Set filtering&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           GLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_NEAREST);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           GLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_NEAREST);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           GLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, bitmap, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           // Recycle the bitmap, since its data has been loaded into OpenGL.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           bitmap.recycle();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       if (textureHandle[0] == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           throw new RuntimeException(&amp;quot;Error loading texture.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       return textureHandle[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 传入一个 Bitmap 对象并将其加载到 OpenGL 中&lt;/p&gt;
&lt;h3 id=&#34;定义纹理坐标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义纹理坐标&#34;&gt;#&lt;/a&gt; 定义纹理坐标&lt;/h3&gt;
&lt;p&gt;我们知道纹理坐标系左下是（0，0），而右上是（1，1），而我们的之前定义一个矩形是&lt;/p&gt;
&lt;p&gt;-1,1，&lt;/p&gt;
&lt;p&gt;-1,-1,&lt;/p&gt;
&lt;p&gt;1,1,&lt;/p&gt;
&lt;p&gt;-1,-1,&lt;/p&gt;
&lt;p&gt;1,-1,&lt;/p&gt;
&lt;p&gt;1,1&lt;/p&gt;
&lt;p&gt;这样的顺序定义的，&lt;br /&gt;
我们的纹理坐标应该是怎么样的呢：&lt;/p&gt;
&lt;p&gt;0f,0f,&lt;/p&gt;
&lt;p&gt;0f,1f,&lt;/p&gt;
&lt;p&gt;1f,0f,&lt;/p&gt;
&lt;p&gt;0f,1f,&lt;/p&gt;
&lt;p&gt;1f,1f,&lt;/p&gt;
&lt;p&gt;1f,0f.&lt;/p&gt;
&lt;p&gt;这个坐标的对应顺序可以自己在纸上画一下来增强理解.&lt;br /&gt;
(我个人理解和这个文章的作者不一样，在 Android 上，纹理坐标系好像是和 Android 的 2d 坐标系相同，Android 的 2D 坐标系是 y 轴向下为正，x 轴向右为正，坐标原点为左上，以左上角为 (0,0)，所以将纹理映射到 OpenGL 坐标系中就是上面这样)&lt;/p&gt;
&lt;h3 id=&#34;使用纹理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用纹理&#34;&gt;#&lt;/a&gt; 使用纹理&lt;/h3&gt;
&lt;p&gt;在 GLES20.glUseProgram 之后添加下面的代码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//纹理坐标句柄&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mTextureHandle = GLES20.glGetAttribLocation(Program,&amp;quot;a_TexCoordinate&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//纹理采样器句柄&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mTextureCoordHandle = GLES20.glGetUniformLocation(Program,&amp;quot;u_Texture&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//将纹理坐标传递进着色器程序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mTriangleTexture.position(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GLES20.glVertexAttribPointer(mTextureHandle,2 ,GLES20.GL_FLOAT,false,0,mTriangleTexture);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GLES20.glEnableVertexAttribArray(mTextureHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//激活第一个纹理单元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GLES20.glActiveTexture(GLES20.GL_TEXTURE0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//绑定纹理到指定的纹理通道，GL_TEXTURE_2D在着色器中就会使用simpler2D。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GLES20.glBindTexture(GLES20.GL_TEXTURE_2D,mTextureDataHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//只使用一个纹理的话给Simpler2D传0就可以&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GLES20.glUniform1i(mTextureCoordHandle,0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/07/10/OpenGL-ES2-0%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2/</guid>
            <title>OpenGL ES2.0中的坐标变换</title>
            <link>http://example.com/2017/07/10/OpenGL-ES2-0%E4%B8%AD%E7%9A%84%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2/</link>
            <category>图像处理</category>
            <category>OpenGL ES</category>
            <category>OpenGL ES2.0</category>
            <pubDate>Mon, 10 Jul 2017 21:20:47 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;opengl-es中的坐标变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opengl-es中的坐标变换&#34;&gt;#&lt;/a&gt; OpenGL ES 中的坐标变换&lt;/h1&gt;
&lt;h2 id=&#34;opengl-es中的坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opengl-es中的坐标系&#34;&gt;#&lt;/a&gt; OpenGL ES 中的坐标系&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;世界坐标系&lt;/li&gt;
&lt;li&gt;纹理坐标系&lt;/li&gt;
&lt;li&gt;物体坐标系&lt;/li&gt;
&lt;li&gt;眼坐标系或相机坐标系&lt;/li&gt;
&lt;li&gt;裁剪坐标系&lt;/li&gt;
&lt;li&gt;屏幕坐标系&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;世界坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#世界坐标系&#34;&gt;#&lt;/a&gt; 世界坐标系&lt;/h3&gt;
&lt;p&gt;世界坐标系是 OpenGL 中描绘三位空间的坐标系&lt;/p&gt;
&lt;h3 id=&#34;纹理坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#纹理坐标系&#34;&gt;#&lt;/a&gt; 纹理坐标系&lt;/h3&gt;
&lt;p&gt;一种假象的坐标系&lt;br /&gt;
可以叫 UV 坐标系&lt;br /&gt;
一个纹理的纹理坐标左上角为（0，0），右下为（1，1），坐标用浮点数表示&lt;br /&gt;
 [外链图片转存中...(img-RtLrvTin-1648314227884)]&lt;/p&gt;
&lt;h3 id=&#34;物体坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#物体坐标系&#34;&gt;#&lt;/a&gt; 物体坐标系&lt;/h3&gt;
&lt;p&gt;相对于单个物体的坐标系&lt;/p&gt;
&lt;h3 id=&#34;相机坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相机坐标系&#34;&gt;#&lt;/a&gt; 相机坐标系&lt;/h3&gt;
&lt;p&gt;相机坐标系是以相机为原地，相机观察方向 z 轴向内为正方向的坐标系&lt;/p&gt;
&lt;h3 id=&#34;裁剪坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#裁剪坐标系&#34;&gt;#&lt;/a&gt; 裁剪坐标系&lt;/h3&gt;
&lt;p&gt;将相机坐标系乘以 ProjectionMatrix 就可以得到裁剪坐标系&lt;/p&gt;
&lt;h3 id=&#34;屏幕坐标系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#屏幕坐标系&#34;&gt;#&lt;/a&gt; 屏幕坐标系&lt;/h3&gt;
&lt;p&gt;最终显示到屏幕上的坐标系&lt;/p&gt;
&lt;h3 id=&#34;坐标变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#坐标变换&#34;&gt;#&lt;/a&gt; 坐标变换&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/img_convert/4b5aa0e7049bdab4fcd7db83190de3f0.png&#34; alt=&#34;OpenGL中的坐标变换&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;在android进行opengles的坐标矩阵变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在android进行opengles的坐标矩阵变换&#34;&gt;#&lt;/a&gt; 在 Android 进行 OpenGLES 的坐标矩阵变换&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;float ModelMatrix = new float[16];//一个4*4矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float ViewMatrix = new float[16];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float ProjectionMatrix = new float[16];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float MVPMatrix = new float[16];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float eyeX = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float eyeY = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float eyeZ = -5f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float lookAtX = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float lookAtY  = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float lookAtZ = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float upX = 0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float upY = 1f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;float upZ = 0f; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//设置ViewMatrix矩阵，up为垂直于视线的向量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Matrix.setLookAtM(ViewMatrix,0，eyeX,eyeY,eyeZ,lookAtX,lookAtY,lookAtZ,upX,upY,upZ);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//矩阵乘以矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Matrix.multiplyMM();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//矩阵乘以向量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Matrix.multiplyMV();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/07/10/OpenGL-ES2-0%E4%B8%AD%E7%9A%84%E5%85%89%E7%85%A7/</guid>
            <title>OpenGL ES2.0中的光照</title>
            <link>http://example.com/2017/07/10/OpenGL-ES2-0%E4%B8%AD%E7%9A%84%E5%85%89%E7%85%A7/</link>
            <category>图像处理</category>
            <category>OpenGL ES</category>
            <category>OpenGL ES2.0</category>
            <pubDate>Mon, 10 Jul 2017 20:53:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;opengles20中的光照&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opengles20中的光照&#34;&gt;#&lt;/a&gt; OpenGLES2.0 中的光照&lt;/h1&gt;
&lt;p&gt;翻译自&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5sZWFybm9wZW5nbGVzLmNvbS9hbmRyb2lkLWxlc3Nvbi10d28tYW1iaWVudC1hbmQtZGlmZnVzZS1saWdodGluZy8=&#34;&gt; Android 课程二：环境光和漫反射光&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;1什么是光&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1什么是光&#34;&gt;#&lt;/a&gt; 1. 什么是光？&lt;/h2&gt;
&lt;p&gt;世界没有光就会什么也看不到，我们将无法感知这个世界活着物体。&lt;/p&gt;
&lt;p&gt;在真实的世界里，光是由无数的光子聚合在一起形成的，它从一个光源出发，经过无数时间，最后传递到了我们的眼睛里&lt;/p&gt;
&lt;p&gt;我们应该如何用计算机图像模拟光呢，现在有 2 种热门技术可以实现：光线跟踪和栅格化。光线跟踪通过数学计算跟踪真实的光线，能给出十分准确和真实的结果，但是不足之处是模拟所有的光线十分消耗计算资源，并且实时渲染速度很慢。由于这个限制，大多数的实时计算机图像使用的是栅格化技术，通过接近结果模拟光线。&lt;/p&gt;
&lt;h2 id=&#34;2光线的分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2光线的分类&#34;&gt;#&lt;/a&gt; 2. 光线的分类&lt;/h2&gt;
&lt;p&gt;我们可以抽象出光工作的方式形成三种基本的光线类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;环境光&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;环境光是一种基础的光线，它遍布整个场景，它没有表现出来自任何其他的光源，因为它在到达你之前经过了无数的反射。这种光能阴天的户外，或是许多不同光源累积影响的室内。没有分别计算所有独立的光，我们可以为对象或场景设置一个基本的光照等级。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漫反射光&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种光在到达教你的眼睛里经过了物体之间反射。物体的光照等级随它与光线的角度不同而变化。直面它的时候更加明亮。同样我们感知物体时无论我们相对物体的位置在哪里，亮点都是相同的。这种现象也叫兰伯特余弦定律（Lambert&#39;s cosine law），漫反射和兰伯特反射在生活中是很常见的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高光&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和漫反射不同，高光随我们和物体的位置不同而不同，它让物体发亮和更加光滑&lt;/p&gt;
&lt;h2 id=&#34;2模拟光&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2模拟光&#34;&gt;#&lt;/a&gt; 2. 模拟光&lt;/h2&gt;
&lt;p&gt;与在 3D 场景中的光有 3 种一样，光源也有 3 种：直接光源、Point lighting、Spot lighting。&lt;/p&gt;
&lt;h3 id=&#34;1数学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数学&#34;&gt;#&lt;/a&gt; 1. 数学&lt;/h3&gt;
&lt;p&gt;学习来自一个点光源的环境光和漫反射光&lt;/p&gt;
&lt;h4 id=&#34;环境光&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境光&#34;&gt;#&lt;/a&gt; 环境光&lt;/h4&gt;
&lt;p&gt;环境光其实是漫反射光的一种，但是它也能被看作是充满整个场景的低级光。这样想的话，它会很容易计算&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final color = material color * ambient light color&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 例如，有个物体是红色的，我们的环境光是灰白的。让我们假定将颜色存储为有 3 个颜色的数组红、绿、蓝，使用 RGB 颜色模型：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final color = &amp;#123; 1 , 0 , 0 &amp;#125; * &amp;#123; 0.1 , 0.1 , 0.1 &amp;#125; = &amp;#123; 0.1 , 0.0 , 0.0 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终物体的颜色会是淡红色。基础的场景光就是这样的，除非你想要更加高级的视觉技术&lt;/p&gt;
&lt;h4 id=&#34;漫反射光-点光源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漫反射光-点光源&#34;&gt;#&lt;/a&gt; 漫反射光 - 点光源&lt;/h4&gt;
&lt;p&gt;对漫反射光，我们需要增加衰减和光的位置。光的位置会用来计算光和表面的角度，它会影响表面的光照的整个等级。它还用来计算光和表面的距离，并决定了那个点的光照强度。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;步骤一： 计算兰伯特因子&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我们需要的第一个主要的计算是计算出表明和光的角度。直面光线的表层会处于光照的最大强度。计算出这个属性的合适的方式是使用兰伯特余弦定理。如果我们有 2 个向量，一个是从光线到表面的一个点，第二个是曲面法线，我们可以计算出余弦值：先将各个向量归一化，因此有它们的长度为 1，然后计算出 2 个向量的点积。这个操作能通过 OpenGL ES 的两个着色器轻松完成。&lt;/p&gt;
&lt;p&gt;我们声明 lambert 因子，它的范围是 0 到 1&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;light vector = light position - obejct position&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cosine = dot product(object normal,normalize(light vector))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lambert factor = max(cosine,0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 首先我们通过对象位置减去光线位置计算出光线的向量，然后我们获取物体的法线和光线向量的点积，就得到了这个余弦了。归一化光线向量的意思就是改变它的长度为 1。因为点积德范围是 - 1 到 1，我们把它固定到（0，1）。&lt;/p&gt;
&lt;p&gt;这是一个例子：有个光滑的平面，表面的法线笔直的指向天。光线的位置为「0，10，-10」，或是向上 10 个单位，向前 10 个单位，我们要计算出原地的光&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;light vector = &amp;#123; 0, 10, -10&amp;#125; - &amp;#123;0, 0, 0&amp;#125; = &amp;#123;0, 10, -10&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obejct normal = &amp;#123;0, 1, 0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 用平白的语言来说，如果我们沿着光线向量出发移动，到达光线的位置。要归一化这个向量，我们让向量的每一个标量处以向量的长度：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;light vector length = square root( 0*0 + 10*10 + -10*-10) = square root(200) = 14.14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;normalized light vector = &amp;#123;0/14.14, 10/14.14, -10/14.14&amp;#125; = &amp;#123;0, 0.707, -0.707&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 然后我们计算点积&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dot product(&amp;#123;0,1,0&amp;#125;,&amp;#123;0,0.707, -0.707&amp;#125;) = 0*0 + 1*0.707 + 0*-0.707 = 0.707&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lambert factor = max(0.707,0) = 0.707&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;OpenGL ES 2 的着色器语言已经内置了一些这种函数，所以我们不需要手动做所有的数学，但是这对我们的理解仍然有帮助。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;步骤二：计算衰减因子&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;接着，我们需要计算衰减，真实的点光源的光线衰减遵从&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2JhaWtlLmJhaWR1LmNvbS9saW5rP3VybD1fa2RXcG5oNXJJVnZ0Y0tlQU1wZGRsWkdKUDJlNjVCM2V2cGQ4QS1mVFA0UFpqTG9RN09PdHpqQXJURHpWdmVMUEt2UllvaUxnQjJZSXdyTmswVVp3V3FQbHVsdnF4VjdKcjF0dXltZ3Y0eDhKS21hSVJpbGhKc0dxN1JuMmRFOHRHOHY3bFFtTnQ1aGVFRXExdDhrRUs=&#34;&gt;平方反比定律&lt;/span&gt;，它可以表述为：&lt;br /&gt;
 &lt;code&gt;luminosity = 1 / (distance* distance)&lt;/code&gt; &lt;br /&gt;
 回到我们的例子，我们知道了一个距离为 14.14，所以最后我们的亮度看起来是：&lt;br /&gt;
 &lt;code&gt;luminosity = 1/ (14.14*14.14) = 0.005&lt;/code&gt; &lt;br /&gt;
 你可以看到，平方反比定律在距离上会导致剧烈的衰减。这就是光在真实世界中从点光源出发是怎么回事，但是我们的图像显示有限制范围，因此抑制衰减因子，我们能得到更加真实的光照而不会使物体看起来太暗了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;步骤三：计算最后的颜色&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;现在我们同时有了余弦和衰减因子，我们能计算出最终的光照等级：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final color = meterial color * (light color * lambert factor * luminosity)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;回到之前一个例子，我们有红色的材料和全白的光源，最终的计算：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final color = &amp;#123;1, 0, 0&amp;#125; *(&amp;#123;1,1,1&amp;#125;*0.707*0.005) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;= &amp;#123;1,0,0&amp;#125;*&amp;#123;0.0035,0.0035,0.0035&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;= &amp;#123;0.0035,0,0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简单的总结一下，对漫反射光我们需要使用表面和光线的角度，还有表面和光线的距离来最终计算出整个漫反射照明等级。下面是步骤：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//one&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;light vector = light position - object position&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cosine = dot product(object normal,normalize(light vector))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lambert factor = max(cosine,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//two&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;luminosity = 1/(distance*distance)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//three&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;final color = material color * (light color*lambert factor * luminosity)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;顶点着色器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#顶点着色器&#34;&gt;#&lt;/a&gt; 顶点着色器&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final String vertexShader =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;uniform mat4 u_MVPMatrix;      \n&amp;quot;     // 一个表示进行了Model变换、View变换、投影变换的矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;uniform mat4 u_MVMatrix;       \n&amp;quot;     // 一个表示进行了Model变换和View变换的矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;uniform vec3 u_LightPos;       \n&amp;quot;     // 在眼坐标系中光的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;attribute vec4 a_Position;     \n&amp;quot;     // 传入的顶点位置信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;attribute vec4 a_Color;        \n&amp;quot;     // 传人的每个顶点的颜色信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;attribute vec3 a_Normal;       \n&amp;quot;     // 每个顶点的法线信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;varying vec4 v_Color;          \n&amp;quot;     // 颜色信息，这个变量会传递进片段着色器中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;void main()                    \n&amp;quot;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;&amp;#123;                              \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 将顶点转化为眼坐标系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   vec3 modelViewVertex = vec3(u_MVMatrix * a_Position);              \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 将法线方向转移进眼坐标系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   vec3 modelViewNormal = vec3(u_MVMatrix * vec4(a_Normal, 0.0));     \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 计算出顶点和光线的距离  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   float distance = length(u_LightPos - modelViewVertex);             \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 获取从光线处到顶点的光线向量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   vec3 lightVector = normalize(u_LightPos - modelViewVertex);        \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 计算lambert factor，也就是计算光线向量和顶点法线的点积. 如果法线向量和光线向量指向同一个方向，则会得出最大的光照强度.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   float lambert = max(dot(modelViewNormal, lightVector), 0.1);       \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 光线随距离的衰减&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   float diffuse = lambert * (1.0 / (1.0 + (0.25 * distance * distance)));  \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 将颜色乘以衰减度， It will be interpolated across the triangle.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   v_Color = a_Color * diffuse;                                       \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// gl_Position 存储最终的位置.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 将这个向量乘以变换矩阵得到在归一屏幕坐标系中的点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   gl_Position = u_MVPMatrix * a_Position;                            \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;&amp;#125;                                                                     \n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;片段着色器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#片段着色器&#34;&gt;#&lt;/a&gt; 片段着色器&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final String fragmentShader =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;precision mediump float;       \n&amp;quot;     // Set the default precision to medium. We don&amp;#x27;t need as high of a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                          // precision in the fragment shader.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+ &amp;quot;varying vec4 v_Color;          \n&amp;quot;     // This is the color from the vertex shader interpolated across the&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                          // triangle per fragment.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+ &amp;quot;void main()                    \n&amp;quot;     // The entry point for our fragment shader.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+ &amp;quot;&amp;#123;                              \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+ &amp;quot;   gl_FragColor = v_Color;     \n&amp;quot;     // Pass the color directly through the pipeline.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+ &amp;quot;&amp;#125;                              \n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;光源的顶点-片段着色器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#光源的顶点-片段着色器&#34;&gt;#&lt;/a&gt; 光源的顶点、片段着色器&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// Define a simple shader program for our point.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;final String pointVertexShader =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;uniform mat4 u_MVPMatrix;      \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;attribute vec4 a_Position;     \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;void main()                    \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;&amp;#123;                              \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   gl_Position = u_MVPMatrix   \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;               * a_Position;   \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   gl_PointSize = 5.0;         \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;&amp;#125;                              \n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;final String pointFragmentShader =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;precision mediump float;       \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;void main()                    \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;&amp;#123;                              \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   gl_FragColor = vec4(1.0,    \n&amp;quot; //直接指定片段颜色为白色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;   1.0, 1.0, 1.0);             \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  + &amp;quot;&amp;#125;                              \n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有一个新的属性叫 &lt;code&gt;gl_PointSize&lt;/code&gt;  是点在空间中的大小为多少个像素。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/06/25/Android-Matrix%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
            <title>Android Matrix的使用</title>
            <link>http://example.com/2017/06/25/Android-Matrix%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
            <category>Android</category>
            <category>图像处理</category>
            <pubDate>Sun, 25 Jun 2017 21:46:23 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;#Learn the Matrix Class in Android&lt;/p&gt;
&lt;p&gt;参考:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5nY3NzbG9vcC5jb20vY3VzdG9tdmlldy9NYXRyaXhfQmFzaWM=&#34;&gt;GcsSloop 的博客&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;1matrix是android中graphics包下的一个类主要用来对图像进行平移-缩放-旋转-透视-错切等操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1matrix是android中graphics包下的一个类主要用来对图像进行平移-缩放-旋转-透视-错切等操作&#34;&gt;#&lt;/a&gt; 1.Matrix 是 Android 中 Graphics 包下的一个类，主要用来对图像进行平移、缩放、旋转、透视、错切等操作。&lt;/h3&gt;
&lt;p&gt;Matrix 对象实际是一个 3x3 的矩阵。每个值都有不同的用处：&lt;/p&gt;
&lt;p&gt;mScalaX     mSkewX    mTransfX&lt;/p&gt;
&lt;p&gt;mSkewY      mScalaY   mTransfY&lt;/p&gt;
&lt;p&gt;mPersp0     mPersp1   mPersp 2&lt;/p&gt;
&lt;p&gt;scalax, scalay 用于缩放&lt;br /&gt;
 skewx,skewy 用于错切&lt;br /&gt;
 transfx,transfy 用于平移&lt;br /&gt;
 persp0,persp1,persp2 用于透视&lt;/p&gt;
&lt;h3 id=&#34;2关于matrix的要点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2关于matrix的要点&#34;&gt;#&lt;/a&gt; 2. 关于 Matrix 的要点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;所有的操作 (旋转、平移、缩放、错切) 默认都是以坐标原点为基准点的。&lt;/li&gt;
&lt;li&gt;之前操作的坐标系状态会保留，并且影响到后续状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3martirx的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3martirx的方法&#34;&gt;#&lt;/a&gt; 3.Martirx 的方法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;pre&lt;br /&gt;
pre 为前缀的方法的意思是右乘，意思是当前矩阵乘以目标矩阵&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;preScala()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;preTranslate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;preRotate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;post&lt;br /&gt;
post 为前缀的方法的意思是左乘，意思是目标矩阵乘以当前矩阵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;postScala()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;postTranslate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;postRotate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/06/11/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
            <title>希尔排序算法</title>
            <link>http://example.com/2017/06/11/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
            <category>算法</category>
            <category>排序算法</category>
            <pubDate>Sun, 11 Jun 2017 15:25:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;shell-sort&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shell-sort&#34;&gt;#&lt;/a&gt; Shell Sort&lt;/h1&gt;
&lt;p&gt;##1. 介绍&lt;br /&gt;
希尔排序是插入排序的一种，它的步骤如下：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2.对这些分组内的项进行单独的直接插入排序。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.当每个组内的排序完成后，再将整歌序列按另一个更小的Gap来进行分组。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.重复2、3，直到gap的值变为1，对整个序列进行一次直接插入排序。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
##2.Gap 的选值&lt;br /&gt;
 gap 的选值可以只用最简单的，每次都区 gap／2，第一个 gap 取 arr.len/2。也有一些更加效率的选值方式，此处不提了。&lt;/p&gt;
&lt;p&gt;##3. 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;C语言： &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    void shellSort(int* arr，int len)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int gap = len/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(gap&amp;gt;=1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i = gap;i&amp;lt;len;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            int temp = arr[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            int k = i-gap;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            while(k&amp;gt;=0&amp;amp;&amp;amp;arr[k]&amp;gt;arr[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                arr[i]=arr[k];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                k-=gap;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // if (k != i - gap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                arr[k+gap] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            gap /=2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2016/04/01/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
            <title>快速排序算法</title>
            <link>http://example.com/2016/04/01/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
            <category>算法</category>
            <category>排序算法</category>
            <pubDate>Fri, 01 Apr 2016 19:17:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;排序算法学习之快速排序算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#排序算法学习之快速排序算法&#34;&gt;#&lt;/a&gt; 排序算法学习之快速排序算法&lt;/h1&gt;
&lt;p&gt;##1. 快速排序算法的原理&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;快速排序算法的原理是选取一个值作为标志，将一个数组分为2部分，左边部分的数全部都比标志值小，右边部分都比标志值大，然后分别对左边数组和又边数组进行递归，直到排序完成。
下面是进行一次数组处理的过程：
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;对以下的数组进行排序：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                      [key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        i                                    j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        33  17  54  15  23  21  37  20  32  24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将数组的第一个数设置为标志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               [key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第一次处理]：比较str[i]与str[j］（ 如果str[i]&amp;lt;str[j],就执行&amp;#x27;j--&amp;#x27;，然后重复［第一次处理］），发现33&amp;gt;24，即str[i]&amp;gt;str[j]，所以将str[i],str[j]互换位置，i 向前进一位，得到如下的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        i--&amp;gt;i                                j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  54  15  23  21  37  20  32  33  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						    i                                j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  54  15  23  21  37  20  32  33 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        [key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第二次处理]：比较str[i]与str[j]，17&amp;gt;33,即str[i]&amp;lt;str[j],所以执行&amp;#x27;i++&amp;#x27;操作,i右移一位。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						    i--&amp;gt;i                            j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  54  15  23  21  37  20  32  33  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						        i                            j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  54  15  23  21  37  20  32  33 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        [key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第三次处理]：比较str[i]与str[j]，54&amp;gt;33,即str[i]&amp;gt;str[j],所以将str[i],str[j]互换位置，然后执行&amp;#x27;j--&amp;#x27;操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  						        i                            j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  54  15  23  21  37  20  32  33  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						        i                        j&amp;lt;--j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  33  15  23  21  37  20  32  54  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						        i                        j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  33  15  23  21  37  20  32  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				[key]		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第四次处理]：比较str[i]与str[j]，33&amp;gt;32,即str[i]&amp;gt;str[j],所以将str[i],str[j]互换位置，然后执行&amp;#x27;i++&amp;#x27;操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						        i                        j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  33  15  23  21  37  20  32  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						        i--&amp;gt;i                    j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  37  20  33  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						            i                    j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  37  20  33  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第五次处理]：比较str[i]与str[j]，15&amp;lt;33,即str[i]&amp;lt;str[j],所以执行&amp;#x27;i++&amp;#x27;操作,i右移一位。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						            i                    j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  33  15  23  21  37  20  32  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						            i--&amp;gt;i                j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  37  20  33  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                i                j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  37  20  33  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第六次处理]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;。。。。。。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	   				   [key]				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第八次处理]:比较str[i]与str[j]，37&amp;gt;33,即str[i]&amp;gt;str[j],所以将str[i],str[j]互换位置，然后执行&amp;#x27;j--&amp;#x27;操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                        i        j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  33  15  23  21  37  20  33  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                        i    j&amp;lt;--j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  33  20  37  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                        i    j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  33  20  37  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               [key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[第九次处理]:比较str[i]与str[j]，54&amp;gt;33,即str[i]&amp;gt;str[j],所以将str[i],str[j]互换位置，然后执行&amp;#x27;i++&amp;#x27;操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                        i    j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  33  15  23  21  33  20  37  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                        i---&amp;gt;j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  20  33  37  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						                            ij&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						24  17  32  15  23  21  20  33  37  54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;发现i,j已经相等，此次循环处理结束。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;通过上面的过程，成功的将所有比33大的数排在了它的后面，把比33小的数排在了33的前面，得到了第一次处理的结果。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后再通过对左边 2 边分别进行递归处理，最终得到排序结果。&lt;br /&gt;
##2. 下面是完整的 C 语言代码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//快速排序函数声明 str为数组地址，left，right分别为排序数组的的左边界和右边界&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void sqrtNum(long *str,int left,int right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//传进来的a，b是2个指针，并将指针所指向地址中储存的数据进行交换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void exchange(long* a,long* b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    long temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp=*a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *a=*b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *b=temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//主函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    long str[10];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0;i&amp;lt;10;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%ld&amp;quot;,&amp;amp;str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sqrtNum(str,0,9);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0;i&amp;lt;10;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;  %ld&amp;quot;,str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//排序函数的具体内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void sqrtNum(long *str,int left,int right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //long key=str[left];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int  kn=left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int m=left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n=right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(m&amp;lt;n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //当从右读的标志n大于从左开始读的标志m时，一直循环，判断右边读的数组中的数是否比标志[key]大，如果大，就一直执行n--直到str[m]的值大于等于str[n]：执行第二个if语句中的内容，然后break；跳出内循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(m&amp;lt;n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(str[m]&amp;lt;str[n])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                n--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(str[m]&amp;gt;=str[n])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                exchange(&amp;amp;str[n],&amp;amp;str[m]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //当从右读的标志n大于从左开始读的标志m时，一直循环，判断左边读的数组中的数是否比标志[key]大，如果大，就一直执行m++直到str[m]的值大于等于str[n]：执行第二个if语句中的内容，然后break；跳出内循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(m&amp;lt;n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(str[m]&amp;lt;str[n])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(str[m]&amp;gt;=str[n])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                exchange(&amp;amp;str[n],&amp;amp;str[m]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                n--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kn=m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(left&amp;lt;right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sqrtNum(str, left,kn-1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sqrtNum(str, kn+1,right);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
