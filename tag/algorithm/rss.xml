<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>花咲く • Posts by &#34;algorithm&#34; tag</title>
        <link>http://example.com</link>
        <description>编程笔记 &amp; 学渣的自救</description>
        <language>cn</language>
        <pubDate>Thu, 07 Apr 2022 23:52:17 +0800</pubDate>
        <lastBuildDate>Thu, 07 Apr 2022 23:52:17 +0800</lastBuildDate>
        <category>Android</category>
        <category>图像处理</category>
        <category>C++</category>
        <category>蓝牙</category>
        <category>系统</category>
        <category>Camera</category>
        <category>Cmake</category>
        <category>音视频</category>
        <category>FFmpeg</category>
        <category>多媒体</category>
        <category>ExoPlayer</category>
        <category>流媒体协议</category>
        <category>HLS</category>
        <category>算法</category>
        <category>LeetCode</category>
        <category>开发</category>
        <category>Mac</category>
        <category>OpenGL ES</category>
        <category>OpenGL ES2.0</category>
        <category>OpenGL ES3.0</category>
        <category>OpenSLES</category>
        <category>插件化</category>
        <category>Dalvik虚拟机</category>
        <category>leetcode</category>
        <category>ffmpeg</category>
        <category>日语</category>
        <category>歌词</category>
        <category>排序算法</category>
        <category>二叉树</category>
        <category>Algorithm</category>
        <category>数据结构</category>
        <category>树</category>
        <category>BFS</category>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/07/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</guid>
            <title>贪心算法</title>
            <link>http://example.com/2022/04/07/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</link>
            <category>Algorithm</category>
            <pubDate>Thu, 07 Apr 2022 23:52:17 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;leetcode-45-跳跃游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leetcode-45-跳跃游戏&#34;&gt;#&lt;/a&gt; leetcode 45 跳跃游戏&lt;/h2&gt;
&lt;p&gt;给你一个非负整数数组  &lt;code&gt;nums&lt;/code&gt;  ，你最初位于数组的第一个位置。&lt;/p&gt;
&lt;p&gt;数组中的每个元素代表你在该位置可以跳跃的最大长度。&lt;/p&gt;
&lt;p&gt;你的目标是使用最少的跳跃次数到达数组的最后一个位置。&lt;/p&gt;
&lt;p&gt;假设你总是可以到达数组的最后一个位置。&lt;/p&gt;
&lt;p&gt;输入: nums = [2,3,1,1,4]&lt;br /&gt;
 输出: 2&lt;br /&gt;
 解释：跳到最后一个位置的最小跳跃数是 2。&lt;br /&gt;
从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。&lt;/p&gt;
&lt;p&gt;解题思路：&lt;br /&gt;
贪心思路：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tvax1.sinaimg.cn/large/b5348f57gy1h11n6nuu09j21h31xg4b7.jpg&#34; alt=&#34;Page1&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/b5348f57gy1h11n5w2bjjj21h31xg0z2.jpg&#34; alt=&#34;Page2&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;leetcode-134-加油站问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leetcode-134-加油站问题&#34;&gt;#&lt;/a&gt; Leetcode 134 加油站问题&lt;/h2&gt;
&lt;p&gt;题目：&lt;br /&gt;
在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas [i] 升。&lt;/p&gt;
&lt;p&gt;你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost [i] 升。你从其中的一个加油站出发，开始时油箱为空。&lt;/p&gt;
&lt;p&gt;给定两个整数数组 gas 和 cost ，如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。&lt;br /&gt;
定义 gas [i]-cost [i] 为油量变换，如果油量变换为正，则叫正加油点，否则叫负加油点。&lt;br /&gt;
推论：&lt;br /&gt;
1. 不能从负加油点出发，&lt;br /&gt;
2. 如果从某个加油站 X 到另一个加油站 Y 无法到达，那么从 X 到 Y 之间的加油站出发到 Y 都不可达。待证明&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int canCompleteCircuit(vector&amp;lt;int&amp;gt;&amp;amp; gas, vector&amp;lt;int&amp;gt;&amp;amp; cost) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int mGas = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int step = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int start = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int size = gas.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vector&amp;lt;int&amp;gt; benefit = vector&amp;lt;int&amp;gt;(size, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int i = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while (step &amp;lt; size &amp;amp;&amp;amp; start &amp;lt; size) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int j = i % size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int n = gas[j] - cost[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (mGas + n &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				mGas = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				start = i + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				step = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				mGas += n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			step++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (start &amp;gt;= size) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return start;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
