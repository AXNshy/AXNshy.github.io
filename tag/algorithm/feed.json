{
    "version": "https://jsonfeed.org/version/1",
    "title": "花咲く • All posts by \"algorithm\" tag",
    "description": "编程笔记 & 学渣的自救",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/07/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",
            "url": "http://example.com/2022/04/07/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",
            "title": "贪心算法",
            "date_published": "2022-04-07T15:52:17.000Z",
            "content_html": "<h2 id=\"leetcode-45-跳跃游戏\"><a class=\"anchor\" href=\"#leetcode-45-跳跃游戏\">#</a> leetcode 45 跳跃游戏</h2>\n<p>给你一个非负整数数组  <code>nums</code>  ，你最初位于数组的第一个位置。</p>\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n<p>你的目标是使用最少的跳跃次数到达数组的最后一个位置。</p>\n<p>假设你总是可以到达数组的最后一个位置。</p>\n<p>输入: nums = [2,3,1,1,4]<br />\n 输出: 2<br />\n 解释：跳到最后一个位置的最小跳跃数是 2。<br />\n从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。</p>\n<p>解题思路：<br />\n贪心思路：</p>\n<p><img data-src=\"http://tvax1.sinaimg.cn/large/b5348f57gy1h11n6nuu09j21h31xg4b7.jpg\" alt=\"Page1\" /></p>\n<p><img data-src=\"http://tva1.sinaimg.cn/large/b5348f57gy1h11n5w2bjjj21h31xg0z2.jpg\" alt=\"Page2\" /></p>\n<h2 id=\"leetcode-134-加油站问题\"><a class=\"anchor\" href=\"#leetcode-134-加油站问题\">#</a> Leetcode 134 加油站问题</h2>\n<p>题目：<br />\n在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas [i] 升。</p>\n<p>你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost [i] 升。你从其中的一个加油站出发，开始时油箱为空。</p>\n<p>给定两个整数数组 gas 和 cost ，如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。<br />\n定义 gas [i]-cost [i] 为油量变换，如果油量变换为正，则叫正加油点，否则叫负加油点。<br />\n推论：<br />\n1. 不能从负加油点出发，<br />\n2. 如果从某个加油站 X 到另一个加油站 Y 无法到达，那么从 X 到 Y 之间的加油站出发到 Y 都不可达。待证明<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">int canCompleteCircuit(vector&lt;int&gt;&amp; gas, vector&lt;int&gt;&amp; cost) &#123;</span><br><span class=\"line\">\t\tint mGas = 0;</span><br><span class=\"line\">\t\tint step = 0;</span><br><span class=\"line\">\t\tint start = 0;</span><br><span class=\"line\">\t\tint size = gas.size();</span><br><span class=\"line\">\t\tvector&lt;int&gt; benefit = vector&lt;int&gt;(size, 0);</span><br><span class=\"line\">\t\tint i = 0;</span><br><span class=\"line\">\t\twhile (step &lt; size &amp;&amp; start &lt; size) &#123;</span><br><span class=\"line\">\t\t\tint j = i % size;</span><br><span class=\"line\">\t\t\tint n = gas[j] - cost[j];</span><br><span class=\"line\">\t\t\tif (mGas + n &lt; 0) &#123;</span><br><span class=\"line\">\t\t\t\tmGas = 0;</span><br><span class=\"line\">\t\t\t\tstart = i + 1;</span><br><span class=\"line\">\t\t\t\ti++;</span><br><span class=\"line\">\t\t\t\tstep = 0;</span><br><span class=\"line\">\t\t\t\tcontinue;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\telse &#123;</span><br><span class=\"line\">\t\t\t\tmGas += n;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tstep++;</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif (start &gt;= size) &#123;</span><br><span class=\"line\">\t\t\treturn -1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn start;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "Algorithm"
            ]
        }
    ]
}