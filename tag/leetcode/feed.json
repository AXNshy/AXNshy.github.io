{
    "version": "https://jsonfeed.org/version/1",
    "title": "花咲く • All posts by \"leetcode\" tag",
    "description": "编程笔记 & 学渣的自救",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/19/Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/",
            "url": "http://example.com/2022/04/19/Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/",
            "title": "Z字形变换",
            "date_published": "2022-04-19T15:25:15.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h2>\n<p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p>\n<p>比如输入字符串为 &quot;PAYPALISHIRING&quot; 行数为 3 时，排列如下：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">P   A   H   N</span><br><span class=\"line\">A P L S I I G</span><br><span class=\"line\">Y   I   R</span><br></pre></td></tr></table></figure><br />\n 之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：&quot;PAHNAPLSIIGYIR&quot;。</p>\n<p>请你实现这个将字符串进行指定行数变换的函数：</p>\n<h2 id=\"解法\"><a class=\"anchor\" href=\"#解法\">#</a> 解法</h2>\n<p>仔细观察由字符串构造成的 z 字形，可以发现一下规律：<br />\n对于每个周期每一行都有 2 (1) 个字符，根据字符规律：<br />\n当对构造的 z 型字符有 n 行，对每 (2n-2) 的位置形成重复周期的形状，对第 j 个周期中，第 i 行的位置，下面两个位置 <code>I1</code> , <code>I2</code>  的字符是连在一起的：<br />\n <code>I1 = j*(2n-2) - i</code> <br />\n <code>I2 = j*(2n-2) + i</code> <br />\n 当 <code>I1</code> , <code>I2</code>  相等时，表明他们到了第 0 行或第 n-1 行。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">string convert(string s, int numRows) &#123;</span><br><span class=\"line\">        if(numRows == 1)&#123;</span><br><span class=\"line\">            return s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        string result;</span><br><span class=\"line\">        int last = -1;</span><br><span class=\"line\">        int cur = -1;</span><br><span class=\"line\">        int len = s.length();</span><br><span class=\"line\">        for(int i=0;i&lt;numRows;i++)&#123;</span><br><span class=\"line\">            int j =0;</span><br><span class=\"line\">            //j*(2*numRows - 2) + i &lt; s.length() &amp;&amp; j*(2*numRows - 2) - i &lt; s.length()</span><br><span class=\"line\">            while(true)&#123;</span><br><span class=\"line\">                cur = j*(2*numRows - 2) - i;</span><br><span class=\"line\">                if(cur &gt;= len)&#123;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(cur &gt;= 0 &amp;&amp; cur != last)&#123;</span><br><span class=\"line\">                    result += s[cur];</span><br><span class=\"line\">                    last = cur;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                cur = j*(2*numRows - 2) + i;</span><br><span class=\"line\">                 if(cur &gt;= len)&#123;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(cur &gt;= 0 &amp;&amp; cur != last)&#123;</span><br><span class=\"line\">                    result += s[cur];</span><br><span class=\"line\">                    last = cur;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "算法",
                "leetcode"
            ]
        },
        {
            "id": "http://example.com/2019/03/28/LeetCode-17/",
            "url": "http://example.com/2019/03/28/LeetCode-17/",
            "title": "LeetCode 17",
            "date_published": "2019-03-28T12:30:25.000Z",
            "content_html": "<p>LeetCode 第 17 题 Java 实现<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbGV0dGVyLWNvbWJpbmF0aW9ucy1vZi1hLXBob25lLW51bWJlci8=\">电话号码的字母组合</span></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    static Map&lt;String, String&gt; map;</span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        map = new HashMap&lt;String, String&gt;();</span><br><span class=\"line\">        map.put(&quot;0&quot;, &quot;&quot;);</span><br><span class=\"line\">        map.put(&quot;1&quot;, &quot;&quot;);</span><br><span class=\"line\">        map.put(&quot;2&quot;, &quot;abc&quot;);</span><br><span class=\"line\">        map.put(&quot;3&quot;, &quot;def&quot;);</span><br><span class=\"line\">        map.put(&quot;4&quot;, &quot;ghi&quot;);</span><br><span class=\"line\">        map.put(&quot;5&quot;, &quot;jkl&quot;);</span><br><span class=\"line\">        map.put(&quot;6&quot;, &quot;mno&quot;);</span><br><span class=\"line\">        map.put(&quot;7&quot;, &quot;pqrs&quot;);</span><br><span class=\"line\">        map.put(&quot;8&quot;, &quot;tuv&quot;);</span><br><span class=\"line\">        map.put(&quot;9&quot;, &quot;wxyz&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public List&lt;String&gt; letterCombinations(String digits) &#123;</span><br><span class=\"line\">        if(digits == null || digits.length() == 0)&#123;</span><br><span class=\"line\">            return new ArrayList&lt;String&gt;();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return recusiveResult(digits, 0, digits.length() - 1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private List&lt;String&gt; recusiveResult(String digits, int left, int right) &#123;</span><br><span class=\"line\">        List&lt;String&gt; result = new ArrayList&lt;&gt;();</span><br><span class=\"line\">        if (left == right) &#123;</span><br><span class=\"line\">            String str = map.get(digits.charAt(left) + &quot;&quot;);</span><br><span class=\"line\">            for (int j = 0; j &lt; str.length(); j++) &#123;</span><br><span class=\"line\">                result.add(str.charAt(j) + &quot;&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; else if (left == right - 1) &#123;</span><br><span class=\"line\">            String Sleft = map.get(digits.charAt(left) + &quot;&quot;);</span><br><span class=\"line\">            String Sright = map.get(digits.charAt(right) + &quot;&quot;);</span><br><span class=\"line\">            if (Sleft != null &amp;&amp; Sleft.length() &gt; 0 &amp;&amp; Sright != null &amp;&amp; Sright.length() &gt; 0) &#123;</span><br><span class=\"line\">                for (int i = 0; i &lt; Sleft.length(); i++) &#123;</span><br><span class=\"line\">                    for (int j = 0; j &lt; Sright.length(); j++) &#123;</span><br><span class=\"line\">                        result.add(Sleft.charAt(i) + &quot;&quot; + Sright.charAt(j));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                if (Sleft != null &amp;&amp; Sleft.length() &gt; 0) &#123;</span><br><span class=\"line\">                    for (int i = 0; i &lt; Sleft.length(); i++) &#123;</span><br><span class=\"line\">                        result.add(Sleft.charAt(i) + &quot;&quot;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    for (int i = 0; i &lt; Sright.length(); i++) &#123;</span><br><span class=\"line\">                        result.add(Sright.charAt(i) + &quot;&quot;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            int mid = (left + right) / 2;</span><br><span class=\"line\">            List&lt;String&gt; lefStrings = recusiveResult(digits, left, mid);</span><br><span class=\"line\">            List&lt;String&gt; rightStrings = recusiveResult(digits, mid + 1, right);</span><br><span class=\"line\"></span><br><span class=\"line\">            for (int i = 0; i &lt; lefStrings.size(); i++) &#123;</span><br><span class=\"line\">                for (int j = 0; j &lt; rightStrings.size(); j++) &#123;</span><br><span class=\"line\">                    result.add(lefStrings.get(i) + rightStrings.get(j));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "算法",
                "LeetCode"
            ]
        }
    ]
}