<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>花咲く • Posts by &#34;opensles&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-05-22T15:20:23.000Z</updated>
    <category term="Android" />
    <category term="图像处理" />
    <category term="C++" />
    <category term="蓝牙" />
    <category term="系统" />
    <category term="Camera" />
    <category term="Cmake" />
    <category term="音视频" />
    <category term="FFmpeg" />
    <category term="多媒体" />
    <category term="ExoPlayer" />
    <category term="流媒体协议" />
    <category term="HLS" />
    <category term="算法" />
    <category term="LeetCode" />
    <category term="开发" />
    <category term="Mac" />
    <category term="OpenGL ES" />
    <category term="OpenGL ES2.0" />
    <category term="OpenGL ES3.0" />
    <category term="OpenSLES" />
    <category term="插件化" />
    <category term="Dalvik虚拟机" />
    <category term="leetcode" />
    <category term="ffmpeg" />
    <category term="日语" />
    <category term="歌词" />
    <category term="排序算法" />
    <category term="二叉树" />
    <category term="Algorithm" />
    <category term="数据结构" />
    <category term="树" />
    <category term="BFS" />
    <entry>
        <id>http://example.com/2022/05/22/OpenSLES%E7%AE%80%E4%BB%8B/</id>
        <title>OpenSLES</title>
        <link rel="alternate" href="http://example.com/2022/05/22/OpenSLES%E7%AE%80%E4%BB%8B/"/>
        <content type="html">&lt;p&gt;接受 pcm 原始音频脉冲数据&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;h3 id=&#34;object-sl对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#object-sl对象&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Object&lt;/code&gt;  SL 对象&lt;/h3&gt;
&lt;p&gt;代码中的 &lt;code&gt;SLObjectItf&lt;/code&gt;  类型，&lt;br /&gt;
每个对象都有三种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unrelalized (initial state) : 不可用状态 ， 对接是活跃的，但是还没有分配资源，处于不可用状态，对象内接口的方法不能使用。&lt;/li&gt;
&lt;li&gt;Realized ：可用状态。对象资源已分配，可以使用对象&lt;/li&gt;
&lt;li&gt;Suspended (optional state): 挂起状态，所需资源比可用状态要少，但是在挂起期间保留了状态信息。当资源不足时，系统可以选择将对象状态改成挂起状态或是不可用状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tvax2.sinaimg.cn/large/b5348f57gy1h2iqkwi4e2j20od0d2jsy.jpg&#34; alt=&#34;OpenSLES Object state diagram&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;interface-接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#interface-接口&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Interface&lt;/code&gt;  接口&lt;/h3&gt;
&lt;p&gt;由特定对象提供的相关特性集合的抽象，在代码中一般为 &lt;code&gt;SLxxxxItf&lt;/code&gt; . 接口必须由特定对象进行生成。&lt;/p&gt;
&lt;h3 id=&#34;一般使用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一般使用方法&#34;&gt;#&lt;/a&gt; 一般使用方法&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//声明对象和接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf object = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLxxxxItf itf = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// init object创建对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 初始化对象，分配资源&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*object)-&amp;gt;Realize(object,SL_BOOLEAN_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//check result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 初始化接口，第二个参数指定接口类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*object)-&amp;gt;GetInterface(object,SL_IID_XXX,&amp;amp;itf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//接口可以使用了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;可以理解为一个对象代表了一个资源和状态，它内部有一系列的接口，对象本身不提供操作，而是由对象内部的接口提供方法调用。&lt;/p&gt;
&lt;h2 id=&#34;opensles使用流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opensles使用流程&#34;&gt;#&lt;/a&gt; OpenSLES 使用流程：&lt;/h2&gt;
&lt;h3 id=&#34;环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境配置&#34;&gt;#&lt;/a&gt; 环境配置&lt;/h3&gt;
&lt;p&gt;Android 环境配置，在 CMakeLists 中将 OpenSLES 加入到目标库链接库列表中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CMakeLists.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_link_libraries(nativelib  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		....        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		OpenSLES  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $&amp;#123;log-lib&amp;#125; )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要在头文件中加上引用&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;opensles_player.h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;SLES/OpenSLES.h&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;SLES/OpenSLES_Android.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化&#34;&gt;#&lt;/a&gt; 初始化&lt;/h3&gt;
&lt;p&gt;先看一个图&lt;br /&gt;
&lt;img data-src=&#34;http://tva2.sinaimg.cn/large/b5348f57gy1h2iss734x0j20uc0ckq5i.jpg&#34; alt=&#34;OpenSLES audio flow diagram&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;1初始化引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1初始化引擎&#34;&gt;#&lt;/a&gt; 1. 初始化引擎&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_engine_obj = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEngineItf m_engine = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::CreateEngine() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult lresult =slCreateEngine(&amp;amp;m_engine_obj,0, nullptr,0, nullptr, nullptr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult, &amp;quot;Engine&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_engine_obj)-&amp;gt;Realize(m_engine_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;EngineRealize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_engine_obj)-&amp;gt;GetInterface(m_engine_obj,SL_IID_ENGINE,&amp;amp;m_engine);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;2初始化合成器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2初始化合成器&#34;&gt;#&lt;/a&gt; 2. 初始化合成器&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 合成器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_output_mix_obj = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 环境混响接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEnvironmentalReverbItf m_output_mix_evn_reverb = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 环境混响设置参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEnvironmentalReverbSettings m_output_mix_evn_settings = SL_I3DL2_ENVIRONMENT_PRESET_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::CreateOutputMixer() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const SLInterfaceID mids[1] = &amp;#123;SL_IID_ENVIRONMENTALREVERB&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const SLboolean mreq[1] = &amp;#123;SL_BOOLEAN_FALSE&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//使用Engine接口创建合成器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult lresult = asInterface(m_engine)-&amp;gt;CreateOutputMix(m_engine,&amp;amp;m_output_mix_obj,1,mids,mreq);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Output Mix&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//合成器对象初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_output_mix_obj)-&amp;gt;Realize(m_output_mix_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Mix Realize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//使用合成器对象获取环境混响接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_output_mix_obj)-&amp;gt;GetInterface(m_output_mix_obj,SL_IID_ENVIRONMENTALREVERB,&amp;amp;m_output_mix_evn_reverb);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Mix Env Reverb&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//如果环境混响接口获取成功，设置环境混响属性为上面定义的默认值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(lresult == SL_RESULT_SUCCESS)&amp;#123;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (*m_output_mix_evn_reverb)-&amp;gt;SetEnvironmentalReverbProperties(m_output_mix_evn_reverb,&amp;amp;m_output_mix_evn_settings);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;3初始化并配置播放器对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3初始化并配置播放器对象&#34;&gt;#&lt;/a&gt; 3. 初始化并配置播放器对象&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_pcm_player_obj = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//播放器接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLPlayItf m_pcm_player = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//音量接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLVolumeItf m_pcm_volume = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Android缓冲区队列接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLAndroidSimpleBufferQueueItf m_pcm_buffer = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::ConfigPlayer() &amp;#123;          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataLocator_AndroidSimpleBufferQueue android_queue =&amp;#123;SL_DATALOCATOR_ANDROIDSIMPLEBUFFERQUEUE,SL_QUEUE_BUFFER_COUNT&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 定义PCM数据格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataFormat_PCM pcm = &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_DATAFORMAT_PCM,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(SLuint32)2,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_SAMPLINGRATE_44_1,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_PCMSAMPLEFORMAT_FIXED_16,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_PCMSAMPLEFORMAT_FIXED_16,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_SPEAKER_FRONT_LEFT|SL_SPEAKER_FRONT_RIGHT,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_BYTEORDER_LITTLEENDIAN  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataSource slDataSource =&amp;#123;&amp;amp;android_queue,&amp;amp;pcm&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataLocator_OutputMix outputMix = &amp;#123;SL_DATALOCATOR_OUTPUTMIX,m_output_mix_obj&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataSink dataSink = &amp;#123;&amp;amp;outputMix, nullptr&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLInterfaceID ids[3] = &amp;#123;SL_IID_BUFFERQUEUE,SL_IID_EFFECTSEND,SL_IID_VOLUME&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLboolean reqs[3] = &amp;#123;SL_BOOLEAN_TRUE,SL_BOOLEAN_TRUE,SL_BOOLEAN_TRUE,&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 通过Engine接口创建音频播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult  lresult = asInterface(m_engine)-&amp;gt;CreateAudioPlayer(m_engine,&amp;amp;m_pcm_player_obj,&amp;amp;slDataSource,&amp;amp;dataSink,3,ids,reqs);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Create Audio Player&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 初始化音频播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;Realize(m_pcm_player_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player Realize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取播放接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_PLAY,&amp;amp;m_pcm_player);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取缓冲区队列接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_BUFFERQUEUE,&amp;amp;m_pcm_buffer);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Buffer GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 缓冲区队列注册缓冲区数据可用回调接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = (*m_pcm_buffer)-&amp;gt;RegisterCallback(m_pcm_buffer,sReadPcmBufferCbFun,this);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Buffer RegisterCallback&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取音量接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_VOLUME,&amp;amp;m_pcm_volume);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player Volume  GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LOGD(TAG,&amp;quot;OpenSL ES init success&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;播放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#播放&#34;&gt;#&lt;/a&gt; 播放&lt;/h3&gt;
&lt;p&gt;创建一个播放线程，&lt;br /&gt;
解码器将解码数据 push 到 PCM 数据缓冲队列中，通知播放器线程启动播放&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void createThread()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	std::thread t = std::thread(cb.render);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void cb(OpenSLRender *render)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <category term="Android" />
        <category term="多媒体" />
        <category term="OpenSLES" />
        <updated>2022-05-22T15:20:23.000Z</updated>
    </entry>
</feed>
