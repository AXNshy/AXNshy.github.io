<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>花咲く • Posts by &#34;android&#34; tag</title>
        <link>http://example.com</link>
        <description>编程笔记 &amp; 学渣的自救</description>
        <language>cn</language>
        <pubDate>Mon, 20 Jun 2022 23:42:47 +0800</pubDate>
        <lastBuildDate>Mon, 20 Jun 2022 23:42:47 +0800</lastBuildDate>
        <category>Android</category>
        <category>图像处理</category>
        <category>C++</category>
        <category>蓝牙</category>
        <category>系统</category>
        <category>Camera</category>
        <category>Cmake</category>
        <category>音视频</category>
        <category>FFmpeg</category>
        <category>多媒体</category>
        <category>ExoPlayer</category>
        <category>流媒体协议</category>
        <category>HLS</category>
        <category>算法</category>
        <category>LeetCode</category>
        <category>开发</category>
        <category>Mac</category>
        <category>OpenGL ES</category>
        <category>OpenGL ES2.0</category>
        <category>OpenGL ES3.0</category>
        <category>OpenSLES</category>
        <category>插件化</category>
        <category>Dalvik虚拟机</category>
        <category>leetcode</category>
        <category>ffmpeg</category>
        <category>日语</category>
        <category>歌词</category>
        <category>排序算法</category>
        <category>二叉树</category>
        <category>Algorithm</category>
        <category>数据结构</category>
        <category>树</category>
        <category>BFS</category>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/20/Android-%E7%9B%B8%E6%9C%BA%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
            <title>Android 相机子系统</title>
            <link>http://example.com/2022/06/20/Android-%E7%9B%B8%E6%9C%BA%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
            <category>Android</category>
            <category>Camera</category>
            <pubDate>Mon, 20 Jun 2022 23:42:47 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android Camera 架构&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva3.sinaimg.cn/large/b5348f57gy1h3f5lczmiuj20kt0gkgqt.jpg&#34; alt=&#34;相机系统&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第一层： Java  APP&lt;br /&gt;
 第二层： Framework 封装 java 层的调用；实现 native 层的 CameraService&lt;br /&gt;
 第三层： Camera HAL google 实现的 HIDL 标准接口，同时芯片厂商和 OEM 厂商基于 HIDL 接口实现自己的功能&lt;br /&gt;
第四层： Driver 相机驱动层&lt;br /&gt;
第五层： 各种电子、感光元件以及相机依赖的硬件&lt;/p&gt;
&lt;p&gt;类：&lt;/p&gt;
&lt;p&gt;CameraServiceClient&lt;/p&gt;
&lt;p&gt;CameraDevice  CameraProviderManager&lt;/p&gt;
&lt;p&gt;Camera3Device&lt;/p&gt;
&lt;p&gt;CameraHAL&lt;/p&gt;
&lt;h2 id=&#34;数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据&#34;&gt;#&lt;/a&gt; 数据&lt;/h2&gt;
&lt;h3 id=&#34;camerametadata&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#camerametadata&#34;&gt;#&lt;/a&gt; CameraMetaData&lt;/h3&gt;
&lt;p&gt;以 key-value 的形式存储数据&lt;br /&gt;
 Camera 系统中流转的三种主要数据都是继承了 CameraMetaData&lt;/p&gt;
&lt;h3 id=&#34;capturechractoristics-静态数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#capturechractoristics-静态数据&#34;&gt;#&lt;/a&gt; CaptureChractoristics  静态数据&lt;/h3&gt;
&lt;p&gt;相机静态配置数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入流配置&lt;/li&gt;
&lt;li&gt;输出流配置&lt;/li&gt;
&lt;li&gt;高分辨率配置&lt;/li&gt;
&lt;li&gt;高帧率配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;capturerequest-拍摄请求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#capturerequest-拍摄请求&#34;&gt;#&lt;/a&gt; CaptureRequest  拍摄请求&lt;/h3&gt;
&lt;p&gt;有 2 种类型的请求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;capture   非重复请求&lt;/li&gt;
&lt;li&gt;repeating   重复请求   例如：实现预览的请求可以用 repeating 请求实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CameraCaptureSession 管理相机连接的会话&lt;/p&gt;
&lt;p&gt;CameraCaptureSession 由 createCameraSession 方法创建&lt;/p&gt;
&lt;h3 id=&#34;captureresult-拍摄结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#captureresult-拍摄结果&#34;&gt;#&lt;/a&gt; CaptureResult  拍摄结果&lt;/h3&gt;
&lt;h2 id=&#34;数据流向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据流向&#34;&gt;#&lt;/a&gt; 数据流向&lt;/h2&gt;
&lt;p&gt;CameraDevice   CameraCaptureSession    CameraManager.AvailabilityCallback&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/25/Android-SharedPreference%E8%A7%A3%E6%9E%90/</guid>
            <title>Android SharedPreference解析</title>
            <link>http://example.com/2022/05/25/Android-SharedPreference%E8%A7%A3%E6%9E%90/</link>
            <category>Android</category>
            <pubDate>Wed, 25 May 2022 00:02:22 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;contextgetsharedpreferences&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#contextgetsharedpreferences&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Context.getSharedPreferences()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;获取 &lt;code&gt;SharedPreferences&lt;/code&gt;  对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//android.app.Context.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SharedPreferences getSharedPreferences(String name, int mode) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return mBase.getSharedPreferences(name, mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mBase 是Context的实现类 ContextImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//android.app.ContextImpl.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SharedPreferences getSharedPreferences(String name, int mode) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // At least one application in the world actually passes in a null  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // name.  This happened to work because when we generated the file name    // we would stringify it to &amp;quot;null.xml&amp;quot;.  Nice.    if (mPackageInfo.getApplicationInfo().targetSdkVersion &amp;lt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Build.VERSION_CODES.KITKAT) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (name == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            name = &amp;quot;null&amp;quot;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    File file;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (ContextImpl.class) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (mSharedPrefsPaths == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mSharedPrefsPaths = new ArrayMap&amp;lt;&amp;gt;();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        file = mSharedPrefsPaths.get(name);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (file == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//根据传入的name创建一个File对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            file = getSharedPreferencesPath(name);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mSharedPrefsPaths.put(name, file);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return getSharedPreferences(file, mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SharedPreferences getSharedPreferences(File file, int mode) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SharedPreferencesImpl sp;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (ContextImpl.class) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//先在缓存中查找，如果没有找到对应文件的sp对象，就创建一个新的sp对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        final ArrayMap&amp;lt;File, SharedPreferencesImpl&amp;gt; cache = getSharedPreferencesCacheLocked();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sp = cache.get(file);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (sp == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            checkMode(mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (getApplicationInfo().targetSdkVersion &amp;gt;= android.os.Build.VERSION_CODES.O) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (isCredentialProtectedStorage()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;amp;&amp;amp; !getSystemService(UserManager.class)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                .isUserUnlockingOrUnlocked(UserHandle.myUserId())) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    throw new IllegalStateException(&amp;quot;SharedPreferences in credential encrypted &amp;quot;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            + &amp;quot;storage are not available until after user is unlocked&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//创建一个新SharedPreferencesImpl对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sp = new SharedPreferencesImpl(file, mode);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cache.put(file, sp);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return sp;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ((mode &amp;amp; Context.MODE_MULTI_PROCESS) != 0 ||  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getApplicationInfo().targetSdkVersion &amp;lt; android.os.Build.VERSION_CODES.HONEYCOMB) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // If somebody else (some other process) changed the prefs  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // file behind our back, we reload it.  This has been the        // historical (if undocumented) behavior.        sp.startReloadIfChangedUnexpectedly();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return sp;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SharedPreferences&lt;/code&gt;  是一个接口，实现类是 &lt;code&gt;SharedPreferencesImpl&lt;/code&gt; ,&lt;/p&gt;
&lt;h2 id=&#34;sharedpreferenceseditor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sharedpreferenceseditor&#34;&gt;#&lt;/a&gt;  &lt;code&gt;SharedPreferences.Editor&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sp编辑器&lt;/code&gt; ，用来操作修改 sp 中的数据&lt;/p&gt;
&lt;h3 id=&#34;commit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#commit&#34;&gt;#&lt;/a&gt;  &lt;code&gt;commit&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//android.app.SharedPreferencesImpl$EditorImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public final class EditorImpl implements Editor &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	//存储本次修改的键值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private final Map&amp;lt;String, Object&amp;gt; mModified = new HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public boolean commit() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	long startTime = 0;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	MemoryCommitResult mcr = commitToMemory();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	SharedPreferencesImpl.this.enqueueDiskWrite(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	mcr, null /* sync write on this thread okay */);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//如果没有执行mcr.setDiskWriteResult();那么mcr.writtenToDiskLatch的state&amp;gt;0，调用await会进入挂起状态，走commit方法时，在enqueueDiskWrite这个方法中已经执行了setDiskWriteResult，所以这里不会阻塞，直接返回结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	mcr.writtenToDiskLatch.await();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&amp;#125; catch (InterruptedException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&amp;#125; finally &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	notifyListeners(mcr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	return mcr.writeToDiskResult;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; private void enqueueDiskWrite(final MemoryCommitResult mcr,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                              final Runnable postWriteRunnable) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//是否是执行同步提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final boolean isFromSyncCommit = (postWriteRunnable == null);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final Runnable writeToDiskRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                synchronized (mWritingToDiskLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    writeToFile(mcr, isFromSyncCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                synchronized (mLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    mDiskWritesInFlight--;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (postWriteRunnable != null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    postWriteRunnable.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Typical #commit() path with fewer allocations, doing a write on  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // the current thread.    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (isFromSyncCommit) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        boolean wasEmpty = false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        synchronized (mLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            wasEmpty = mDiskWritesInFlight == 1;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (wasEmpty) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            writeToDiskRunnable.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueuedWork.queue(writeToDiskRunnable, !isFromSyncCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//写入修改到文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private void writeToFile(MemoryCommitResult mcr, boolean isFromSyncCommit) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Attempt to write the file, delete the backup and return true as atomically as  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // possible.  If any exception occurs, delete the new file; next time we will restore    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// from the backup.    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        FileOutputStream str = createFileOutputStream(mFile);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//将本次修改数据写入到文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        XmlUtils.writeMapXml(mcr.mapToWriteToDisk, str);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writeTime = System.currentTimeMillis();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        FileUtils.sync(str);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fsyncTime = System.currentTimeMillis();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        str.close();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ContextImpl.setFilePermissionsFromMode(mFile.getPath(), mMode, 0);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mcr.setDiskWriteResult(true, true);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        long fsyncDuration = fsyncTime - writeTime;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mSyncTimes.add((int) fsyncDuration);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mNumSync++;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (XmlPullParserException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.w(TAG, &amp;quot;writeToFile: Got exception:&amp;quot;, e);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (IOException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Log.w(TAG, &amp;quot;writeToFile: Got exception:&amp;quot;, e);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Clean up an unsuccessfully written file  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (mFile.exists()) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (!mFile.delete()) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Couldn&amp;#x27;t clean up partially-written file &amp;quot; + mFile);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mcr.setDiskWriteResult(false, false);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面的流程可以看出， &lt;code&gt;commit&lt;/code&gt;  调用中没有创建子线程去执行，而是在当前线程去执行，所以 &lt;code&gt;commit&lt;/code&gt;  会产生 IO 调用，如果写入数据太多，会对主线程由影响，所以最好将 &lt;code&gt;commit&lt;/code&gt;  放在子线程中去执行。&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;h3 id=&#34;apply&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apply&#34;&gt;#&lt;/a&gt; apply&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void apply() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final long startTime = System.currentTimeMillis();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final MemoryCommitResult mcr = commitToMemory();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    final Runnable awaitCommit = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    mcr.writtenToDiskLatch.await();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; catch (InterruptedException ignored) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueuedWork.addFinisher(awaitCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Runnable postWriteRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                awaitCommit.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                QueuedWork.removeFinisher(awaitCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//第二个参数传了一个runnable对象所以不会走commit的流程，会执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	notifyListeners(mcr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面可以看到&lt;br /&gt;
 &lt;code&gt;SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable); &lt;/code&gt; &lt;br /&gt;
第二个参数传了一个 runnable 对象所以不会走 commit 的流程， &lt;code&gt;enqueueDiskWrite&lt;/code&gt;  最后会执行下面的代码&lt;br /&gt;
 &lt;code&gt;QueuedWork.queue(writeToDiskRunnable, !isFromSyncCommit);  &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//sholdDeley 为true，sCanDelay也为true，除非在执行Activity销毁时，会变成false,这里会延迟100ms然后执行MSG_RUN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static void queue(Runnable work, boolean shouldDelay) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Handler handler = getHandler();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (sLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sWork.add(work);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (shouldDelay &amp;amp;&amp;amp; sCanDelay) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handler.sendEmptyMessageDelayed(QueuedWorkHandler.MSG_RUN, DELAY);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handler.sendEmptyMessage(QueuedWorkHandler.MSG_RUN);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//android.app.QueueWork.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private static class QueuedWorkHandler extends Handler &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static final int MSG_RUN = 1;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueuedWorkHandler(Looper looper) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        super(looper);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public void handleMessage(Message msg) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (msg.what == MSG_RUN) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            processPendingWork();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private static void processPendingWork() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    long startTime = 0;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (sProcessingWork) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LinkedList&amp;lt;Runnable&amp;gt; work;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        synchronized (sLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//sWork中就是QueueWork.queue中的runnable对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            work = (LinkedList&amp;lt;Runnable&amp;gt;) sWork.clone();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sWork.clear();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Remove all msg-s as all work will be processed now  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            getHandler().removeMessages(QueuedWorkHandler.MSG_RUN);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (work.size() &amp;gt; 0) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for (Runnable w : work) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//遍历执行sWork中的任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                w.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;QueueWorkHandler&lt;/code&gt;  这个线程中就会执行上面方法 &lt;code&gt;enqueueDiskWrite&lt;/code&gt;  中创建的 &lt;code&gt;writeToDiskRunnable&lt;/code&gt;  对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final Runnable writeToDiskRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            synchronized (mWritingToDiskLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                writeToFile(mcr, isFromSyncCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            synchronized (mLock) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mDiskWritesInFlight--;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (postWriteRunnable != null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                postWriteRunnable.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 执行 &lt;code&gt;writeToFile&lt;/code&gt;   进行数据写入，&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;apply&lt;/code&gt;  中创建的 &lt;code&gt;postWriteRunnable&lt;/code&gt;  对象&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Runnable postWriteRunnable = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            awaitCommit.run();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            QueuedWork.removeFinisher(awaitCommit);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 执行 &lt;code&gt;awaitCommit&lt;/code&gt;  任务&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final Runnable awaitCommit = new Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         public void run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 mcr.writtenToDiskLatch.await();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &amp;#125; catch (InterruptedException ignored) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 执行 &lt;code&gt;mcr.writtenToDiskLatch.await();&lt;/code&gt; ，因为 &lt;code&gt;mcr.writtenToDiskLatch&lt;/code&gt;  已经在 &lt;code&gt;wrinteToFile&lt;/code&gt;  中执行了 &lt;code&gt;mcr.setDiskWriteResult&lt;/code&gt; ，所以 state 已经变成了 0，不会挂起当前的 (QueueWrok) 线程&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/22/OpenSLES%E7%AE%80%E4%BB%8B/</guid>
            <title>OpenSLES</title>
            <link>http://example.com/2022/05/22/OpenSLES%E7%AE%80%E4%BB%8B/</link>
            <category>Android</category>
            <category>多媒体</category>
            <category>OpenSLES</category>
            <pubDate>Sun, 22 May 2022 23:20:23 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;接受 pcm 原始音频脉冲数据&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;h3 id=&#34;object-sl对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#object-sl对象&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Object&lt;/code&gt;  SL 对象&lt;/h3&gt;
&lt;p&gt;代码中的 &lt;code&gt;SLObjectItf&lt;/code&gt;  类型，&lt;br /&gt;
每个对象都有三种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unrelalized (initial state) : 不可用状态 ， 对接是活跃的，但是还没有分配资源，处于不可用状态，对象内接口的方法不能使用。&lt;/li&gt;
&lt;li&gt;Realized ：可用状态。对象资源已分配，可以使用对象&lt;/li&gt;
&lt;li&gt;Suspended (optional state): 挂起状态，所需资源比可用状态要少，但是在挂起期间保留了状态信息。当资源不足时，系统可以选择将对象状态改成挂起状态或是不可用状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tvax2.sinaimg.cn/large/b5348f57gy1h2iqkwi4e2j20od0d2jsy.jpg&#34; alt=&#34;OpenSLES Object state diagram&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;interface-接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#interface-接口&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Interface&lt;/code&gt;  接口&lt;/h3&gt;
&lt;p&gt;由特定对象提供的相关特性集合的抽象，在代码中一般为 &lt;code&gt;SLxxxxItf&lt;/code&gt; . 接口必须由特定对象进行生成。&lt;/p&gt;
&lt;h3 id=&#34;一般使用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一般使用方法&#34;&gt;#&lt;/a&gt; 一般使用方法&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//声明对象和接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf object = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLxxxxItf itf = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// init object创建对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 初始化对象，分配资源&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*object)-&amp;gt;Realize(object,SL_BOOLEAN_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//check result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 初始化接口，第二个参数指定接口类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*object)-&amp;gt;GetInterface(object,SL_IID_XXX,&amp;amp;itf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//接口可以使用了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;可以理解为一个对象代表了一个资源和状态，它内部有一系列的接口，对象本身不提供操作，而是由对象内部的接口提供方法调用。&lt;/p&gt;
&lt;h2 id=&#34;opensles使用流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opensles使用流程&#34;&gt;#&lt;/a&gt; OpenSLES 使用流程：&lt;/h2&gt;
&lt;h3 id=&#34;环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境配置&#34;&gt;#&lt;/a&gt; 环境配置&lt;/h3&gt;
&lt;p&gt;Android 环境配置，在 CMakeLists 中将 OpenSLES 加入到目标库链接库列表中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CMakeLists.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_link_libraries(nativelib  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		....        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		OpenSLES  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $&amp;#123;log-lib&amp;#125; )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要在头文件中加上引用&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;opensles_player.h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;SLES/OpenSLES.h&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;SLES/OpenSLES_Android.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化&#34;&gt;#&lt;/a&gt; 初始化&lt;/h3&gt;
&lt;p&gt;先看一个图&lt;br /&gt;
&lt;img data-src=&#34;http://tva2.sinaimg.cn/large/b5348f57gy1h2iss734x0j20uc0ckq5i.jpg&#34; alt=&#34;OpenSLES audio flow diagram&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;1初始化引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1初始化引擎&#34;&gt;#&lt;/a&gt; 1. 初始化引擎&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_engine_obj = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEngineItf m_engine = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::CreateEngine() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult lresult =slCreateEngine(&amp;amp;m_engine_obj,0, nullptr,0, nullptr, nullptr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult, &amp;quot;Engine&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_engine_obj)-&amp;gt;Realize(m_engine_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;EngineRealize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_engine_obj)-&amp;gt;GetInterface(m_engine_obj,SL_IID_ENGINE,&amp;amp;m_engine);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;2初始化合成器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2初始化合成器&#34;&gt;#&lt;/a&gt; 2. 初始化合成器&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 合成器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_output_mix_obj = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 环境混响接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEnvironmentalReverbItf m_output_mix_evn_reverb = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 环境混响设置参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLEnvironmentalReverbSettings m_output_mix_evn_settings = SL_I3DL2_ENVIRONMENT_PRESET_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::CreateOutputMixer() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const SLInterfaceID mids[1] = &amp;#123;SL_IID_ENVIRONMENTALREVERB&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const SLboolean mreq[1] = &amp;#123;SL_BOOLEAN_FALSE&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//使用Engine接口创建合成器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult lresult = asInterface(m_engine)-&amp;gt;CreateOutputMix(m_engine,&amp;amp;m_output_mix_obj,1,mids,mreq);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Output Mix&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//合成器对象初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_output_mix_obj)-&amp;gt;Realize(m_output_mix_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Mix Realize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//使用合成器对象获取环境混响接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_output_mix_obj)-&amp;gt;GetInterface(m_output_mix_obj,SL_IID_ENVIRONMENTALREVERB,&amp;amp;m_output_mix_evn_reverb);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Mix Env Reverb&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//如果环境混响接口获取成功，设置环境混响属性为上面定义的默认值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(lresult == SL_RESULT_SUCCESS)&amp;#123;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (*m_output_mix_evn_reverb)-&amp;gt;SetEnvironmentalReverbProperties(m_output_mix_evn_reverb,&amp;amp;m_output_mix_evn_settings);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;3初始化并配置播放器对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3初始化并配置播放器对象&#34;&gt;#&lt;/a&gt; 3. 初始化并配置播放器对象&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLObjectItf m_pcm_player_obj = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//播放器接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLPlayItf m_pcm_player = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//音量接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLVolumeItf m_pcm_volume = nullptr;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Android缓冲区队列接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SLAndroidSimpleBufferQueueItf m_pcm_buffer = nullptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool OpenSLRender::ConfigPlayer() &amp;#123;          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataLocator_AndroidSimpleBufferQueue android_queue =&amp;#123;SL_DATALOCATOR_ANDROIDSIMPLEBUFFERQUEUE,SL_QUEUE_BUFFER_COUNT&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 定义PCM数据格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataFormat_PCM pcm = &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_DATAFORMAT_PCM,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(SLuint32)2,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_SAMPLINGRATE_44_1,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_PCMSAMPLEFORMAT_FIXED_16,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_PCMSAMPLEFORMAT_FIXED_16,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_SPEAKER_FRONT_LEFT|SL_SPEAKER_FRONT_RIGHT,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SL_BYTEORDER_LITTLEENDIAN  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataSource slDataSource =&amp;#123;&amp;amp;android_queue,&amp;amp;pcm&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataLocator_OutputMix outputMix = &amp;#123;SL_DATALOCATOR_OUTPUTMIX,m_output_mix_obj&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLDataSink dataSink = &amp;#123;&amp;amp;outputMix, nullptr&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLInterfaceID ids[3] = &amp;#123;SL_IID_BUFFERQUEUE,SL_IID_EFFECTSEND,SL_IID_VOLUME&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLboolean reqs[3] = &amp;#123;SL_BOOLEAN_TRUE,SL_BOOLEAN_TRUE,SL_BOOLEAN_TRUE,&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 通过Engine接口创建音频播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SLresult  lresult = asInterface(m_engine)-&amp;gt;CreateAudioPlayer(m_engine,&amp;amp;m_pcm_player_obj,&amp;amp;slDataSource,&amp;amp;dataSink,3,ids,reqs);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Create Audio Player&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 初始化音频播放器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;Realize(m_pcm_player_obj,SL_BOOLEAN_FALSE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player Realize&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取播放接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_PLAY,&amp;amp;m_pcm_player);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取缓冲区队列接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_BUFFERQUEUE,&amp;amp;m_pcm_buffer);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Buffer GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 缓冲区队列注册缓冲区数据可用回调接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = (*m_pcm_buffer)-&amp;gt;RegisterCallback(m_pcm_buffer,sReadPcmBufferCbFun,this);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Buffer RegisterCallback&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	// 使用音频播放器对象获取音量接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lresult = asInterface(m_pcm_player_obj)-&amp;gt;GetInterface(m_pcm_player_obj,SL_IID_VOLUME,&amp;amp;m_pcm_volume);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(CheckError(lresult,&amp;quot;Player Volume  GetInterface&amp;quot;)) return false;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LOGD(TAG,&amp;quot;OpenSL ES init success&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;播放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#播放&#34;&gt;#&lt;/a&gt; 播放&lt;/h3&gt;
&lt;p&gt;创建一个播放线程，&lt;br /&gt;
解码器将解码数据 push 到 PCM 数据缓冲队列中，通知播放器线程启动播放&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void createThread()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	std::thread t = std::thread(cb.render);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void cb(OpenSLRender *render)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/11/Cmake%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
            <title>Cmake的使用</title>
            <link>http://example.com/2022/05/11/Cmake%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
            <category>Android</category>
            <category>Cmake</category>
            <pubDate>Wed, 11 May 2022 00:00:53 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在 Android Studio 中使用 Cmake 来构建 C,C++ 应用&lt;/p&gt;
&lt;p&gt;今天尝试了学习使用 ffmpeg 来编写播放器，需要使用 C,C++ 来编写代码，所有学习一下 Cmake 的使用。&lt;/p&gt;
&lt;p&gt;Cmake 是一个开源，跨平台的工具，被用来构建、测试、打包软件。Cmake 使用了简单的和平台、编译器无关的配置文件，来生成当前平台的软件、链接库。&lt;/p&gt;
&lt;h2 id=&#34;用法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用法&#34;&gt;#&lt;/a&gt; 用法&lt;/h2&gt;
&lt;p&gt;举个栗子：&lt;br /&gt;
我有一个 jni 接口，Java 层调用这个接口，返回一个字符串 &lt;code&gt;hello Cmake&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libnative2/src/main/cpp/nativelib.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;jni.h&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;extern &amp;quot;C&amp;quot; JNIEXPORT jstring JNICALL  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Java_com_xzq_nativelib2_NativeLib_stringFromJNI(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        JNIEnv* env,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jobject /* this */) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::string hello = &amp;quot;hello Cmake&amp;quot;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return env-&amp;gt;NewStringUTF(hello.c_str());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 这个 cpp 文件对应的 java 类是 com/xzq/nativelib2/NativeLib.kt 这个类&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libnative2/src/main/kotlin/com/xzq/nativelib2/NativeLib.kt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;package com.xzq.nativelib2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class NativeLib &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	//external对应的是Java中的native方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	external fun stringFromJNI(): String  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    companion object &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Used to load the &amp;#x27;nativelib2&amp;#x27; library on application startup.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        init &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//它会去加载名为libnativelib2.so的动态库文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.loadLibrary(&amp;quot;nativelib2&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我想要将这个 cpp 编译成 so 文件 &lt;code&gt;libnativelib2.so&lt;/code&gt; ，在 app 模块中 MainActivity 中去调用 NativeLib 接口去访问本地 cpp 代码。&lt;/p&gt;
&lt;p&gt;Cmake 有两种用法：gradle 配置和命令行&lt;/p&gt;
&lt;h3 id=&#34;1gradle配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1gradle配置&#34;&gt;#&lt;/a&gt; 1.gradle 配置&lt;/h3&gt;
&lt;p&gt;CMake 可以通过 android build tool 脚本进行配置，在启动 gradle 构建后自动生成对应的文件。&lt;/p&gt;
&lt;p&gt;1. 在 &lt;code&gt;android&lt;/code&gt;  配置块中将 gradle 链接到你的 CMake 脚本&lt;br /&gt;
 2. 在 &lt;code&gt;defaultConfig&lt;/code&gt;  配置块中可以指定 CMake 可选的参数 (args) 和标记 (flags)&lt;br /&gt;
 3. 在 &lt;code&gt;productFlavor&lt;/code&gt;  中针对不同产品来替换对应属性&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;plugins &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    id &amp;#x27;com.android.library&amp;#x27;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	id &amp;#x27;com.android.application&amp;#x27;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;android &amp;#123;  ...  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	buildTypes &amp;#123;...&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	productFlavors &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		create(&amp;quot;demo&amp;quot;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			externalNativeBuild &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				cmake &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					// 指定gradle只编译target指定的模块。如果不指定target，那么CMake配置中的所有模块都会被进行编译和打包。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					targets += listOf(&amp;quot;native-lib-demo&amp;quot;,                 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				     //可执行文件是可选的，一般情况，仅编译动态库文件能满足要求。	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;quot;my-executible-demo&amp;quot;)       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		create(&amp;quot;paid&amp;quot;) &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			externalNativeBuild &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				cmake &amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					... &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					targets += listOf(&amp;quot;native-lib-paid&amp;quot;,      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;quot;my-executible-paid&amp;quot;)     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// 本地编译配置，可以配置ndk-bundle和CMake&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	externalNativeBuild &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//CMake编译配置    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cmake &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//指定CMakeLists.txt文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			path = file(&amp;quot;CMakeLists.txt&amp;quot;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;2命令行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2命令行&#34;&gt;#&lt;/a&gt; 2. 命令行&lt;/h3&gt;
&lt;p&gt;使用命令行方式编译本地代码，&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ cmake \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake \    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-DANDROID_ABI=$ABI \    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-DANDROID_PLATFORM=android-$MINSDKVERSION \    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$OTHER_ARGS&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面命令行中几个参数的含义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-DCMAKE_TOLLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake   指定 ndk 中 CMake 编译工具链文件地址&lt;/li&gt;
&lt;li&gt;-DANDROID_ABI=$ABI   指定目标平台的应用程序二进制接口    2022 年 最常见的应该是 arm64-v8a&lt;/li&gt;
&lt;li&gt;-DANDROID_PLATFORM=android-$MINSDKVERSION  指定应用或库支持的最低 Android 平台版本，例如 android-31,android-29&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有更多的参数可以参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vbmRrL2d1aWRlcy9jbWFrZT9obD16aC1jbiNjb21tYW5kLWxpbmVfMg==&#34;&gt; Android 指南 - CMake&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;cmakeliststxt-配置文件编写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cmakeliststxt-配置文件编写&#34;&gt;#&lt;/a&gt; CMakeLists.txt 配置文件编写&lt;/h2&gt;
&lt;p&gt;CMake 的执行已经知道了，但是我们没讲到如何将 cpp 文件编译成可执行文件或是库文件，CMakeLists.txt 就是用来告诉 CMake, 要如何编译，按照什么规则进行编译，编译需要使用的依赖项目，好像很类似与 Makefile 文件。下面是一个栗子：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#指定了Cmake的最小支持版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake_minimum_required(VERSION 3.10.2)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#设置这个Cmake项目名，可以通过变量PROJECT_NAME进行访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;project(&amp;quot;nativelib2&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#创建并命名一个库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_library( &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# 设置这个库的名称  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nativelib2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 这个生成的库的类型，静态库，动态库等 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        SHARED  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 指定库的源文件相对路径，当在cpp中新增了文件中，需要在这个进行声明，cmake才会将新文件打包进库中。除了可以指定cpp源文件，还可以指定库文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nativelib2.cpp)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 搜索ndk环境中的库并自定义命名路径变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find_library( &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# 定义变量log-lib存储log这个库的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log-lib  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 指定ndk环境中库的名称     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		log)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#指定所有需要被链接到目标库的库名称  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_link_libraries(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# 目标库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nativelib2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		#被链接的库，可以新增多个库名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     	$&amp;#123;log-lib&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置好了之后，我们直接使用 Android Studio 编译安装 apk，打开 app，能看到打印成功&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2022-05-11 01:25:51.546 20065-20065/com.luffy.mulmedia D/NavigationActivity: stringFromJNI2 hello Cmake&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项&lt;/h2&gt;
&lt;p&gt;我在学习过程中发现，如果 Android Studio 项目存在多个模块，如果有一个模块需要设置 cmake 的 abiFilter  为 armeabi-v7a，那么每一个模块都要设置 abiFilter，不然就会存在找不到 so 的情况。&lt;br /&gt;
我猜测，可能是因为如果某个模块不设置，那么就会在最终的 apk 的 jniLibs 中创建默认的 arm64-v8a 文件夹，然后运行中，发现了有 arm64-v8a 的文件夹，那么就只会在这个路径下搜索全部的 so 文件；又由于其他指定了 abiFilter 的模块会编译出指定的 armeabi-v7a 架构的文件，所有在 arm64-v8a 中找不到，最终抛出异常。如果有大佬知道原因的话可以告诉我一下。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/04/PathClassLoader%E4%B8%8EDexClassLoader-%E8%A7%A3%E6%9E%90/</guid>
            <title>PathClassLoader与DexClassLoader 解析</title>
            <link>http://example.com/2022/04/04/PathClassLoader%E4%B8%8EDexClassLoader-%E8%A7%A3%E6%9E%90/</link>
            <category>Android</category>
            <category>插件化</category>
            <category>Dalvik虚拟机</category>
            <pubDate>Mon, 04 Apr 2022 23:06:50 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;未完&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#未完&#34;&gt;#&lt;/a&gt; 未完&lt;/h1&gt;
&lt;h2 id=&#34;java中的classloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#java中的classloader&#34;&gt;#&lt;/a&gt; Java 中的 ClassLoader&lt;/h2&gt;
&lt;p&gt;在 Java 中，类加载器的作用是通过一个类的全限定名获取描述这个类的二进制字节流，然后加载到虚拟机中生成类对象并提供引用。&lt;br /&gt;
对 Java 虚拟机来说，类加载器可以分为 2 中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动类加载器。由 C++ 代码实现，是 Java 虚拟机的一部分&lt;/li&gt;
&lt;li&gt;其他加载器。由 Java 代码实现，独立于虚拟机，并且全都继承自 java.lang.ClassLoader 这个类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于我们开发人员来说，类加载器由 3 种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bootstrap ClassLoader&lt;/li&gt;
&lt;li&gt;Extension ClassLoader 加载指定扩展包中的类&lt;/li&gt;
&lt;li&gt;Application ClassLoader  加载 ClassPath 指定路径上的类&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;双亲委派模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双亲委派模型&#34;&gt;#&lt;/a&gt; 双亲委派模型&lt;/h2&gt;
&lt;p&gt;双亲委派模型是一种类加载的模型，是被推荐使用的类加载模型。双亲委派模型的定义是每次去加载一个类时，先判断这个类是否加载过，如果没有加载过，那么判断有没有父类加载器，如果有父类加载器，那么先调用父类加载器的加载方法；如果父类加载器加载失败，那么就调用当前类加载器。&lt;/p&gt;
&lt;p&gt;使用双亲委派模型的好处：&lt;br /&gt;
使 Java 类与 Java 类加载器一起产生了优先级层次，保证了同一个类始终由一个类加载器去加载。&lt;/p&gt;
&lt;p&gt;双亲委派模型的实现：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;protected synchronized Class&amp;lt;?&amp;gt; loadClass(Stirng name,boolean resolve) throws ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Class c = findLoadedClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(c == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(parent != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//父类加载器存在，继续调用父类加载器的loadClass方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				c = parent.loadClass(name,false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				//父类加载器不存在，调用启动类加载器去加载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				c = findBootstrapClassOrNull(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125; catch (ClassNotFoundException e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//如果父类加载器和启动类加载器都加载失败，使用当前类加载器去加载&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if ( c == null )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			c = findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(resolve)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		resolveClass(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;android-dalvik虚拟机中的类加载器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#android-dalvik虚拟机中的类加载器&#34;&gt;#&lt;/a&gt; Android Dalvik 虚拟机中的类加载器&lt;/h2&gt;
&lt;h3 id=&#34;basedexclassloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#basedexclassloader&#34;&gt;#&lt;/a&gt; BaseDexClassLoader&lt;/h3&gt;
&lt;p&gt;一个基于 Dex 的通用功能的 ClassLoader 实现，其核心代码如下：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//libcore/dalvik/src/main/java/dalvik/system/BaseDexClassLoader.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Class BaseDexClassLoader extends ClassLoader&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private final DexPathList pathList;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//一个ClassLoader数组，用来加载pathList pathList中可能依赖的类和资源，用来实现	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//Android中的AndroidManifest.xml中&amp;lt;use-library&amp;gt;标签中的库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	protected final ClassLoader[] sharedLibraryLoaders;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	protected final ClassLoader[] sharedLibraryLoadersAfter;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public BaseDexClassLoader(String dexPath,String librarySearchPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ClassLoader parent,ClassLoader[] sharedLibraryLoaders,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ClassLoader[] sharedLibraryLoadersAfter,boolean isTrust)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		super(parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		this.pathList = new DexPathList(this,dexPath,librarySearchPath,null,isTrust);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	protected synchronized Class&amp;lt;?&amp;gt; findClass(Stirng name,boolean resolve) throws ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(sharedLibraryLoaders != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(ClassLoader loader : sharedLibraryLoaders)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					return loader.loadClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;catch(ClassNotFoundException ignore)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		List&amp;lt;Throwable&amp;gt; suppressedExceptions = new ArrayList&amp;lt;Throwable&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Class c = dexPath.findClass(name,suppressedExceptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(c == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(sharedLibraryLoadersAfter != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(ClassLoader loader : sharedLibraryLoadersAfter)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				try&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					return loader.loadClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;catch(ClassNotFoundException ignore)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(c == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			throw new ClassNotFoundException();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从上面可以看出，BaseDexClassLoader 并没有遵守 Java 的双亲委托模型。&lt;/p&gt;
&lt;p&gt;BaseDexClassLoader 将代码加载又委托给了 DexPathList 来进行加载。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//libcore/dalvik/src/main/java/dalvik/system/DexPathList.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class DexPathList&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Element[] dexElements;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public DexPathList(...)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		dexElement = makePathElements(spliteDexPath(dexPath)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			,null,null,classLoader,	isTrust);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//这里有关于热修复实现的知识点，就是将补丁 dex 文件放到 dexElements 数组靠前位置，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//这样在加载 class 时，优先找到补丁包中的 dex 文件，加载到 class 之后就不再寻找，从&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//而原来的 apk 文件中同名的类就不会再使用，从而达到修复的目的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public Class&amp;lt;?&amp;gt; findClass(String name,List&amp;lt;Throwable&amp;gt; suppressed)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(Element element : dexElements)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Class&amp;lt;?&amp;gt; clazz = element.findClass(name,classLoader,suppressed);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(clazz != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				return clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public static Element[] makeDexElements(List&amp;lt;File&amp;gt; files,File optimizedDictionary,List&amp;lt;IOException&amp;gt; suppressedExceptions,ClassLoader classloader,boolean isTrusted)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Element[] elements = new Element[files.size()];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(Files file : files)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(file.isDictionary())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				elements[elementsPos++] = new Element(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				if(file.isFile())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					DexFile dex = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					if(file.path.endWith(&amp;quot;.dex&amp;quot;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						dex = loadDexFile(file,optimizedDictionary,loader,elements);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						if(dex != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							elements[elementsPos++] = new Element(dex,null);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						dex = loadDexFile(file,optimizedDictionary,loader,elements);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						if(dex == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							elements[elementsPos++] = new Element(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;							elements[elementsPos++] = new Element(dex,file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return elements;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private static DexFile loadDexPath(File file,File optimizedDictionary,ClassLoader loader,Element[] elements)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(optimizeDictory == null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			return new DexFile(file,loader,elements);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			//创建一个文件，路径为optimizedDictionary指定文件夹内，file同名的文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			String optimizedPath = optimizedPathFor(file,optimizedDictionary);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//libcore/dalvik/src/main/java/dalvik/system/DexFile.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;final Class DexFile&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private Object mCookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public DexFile(File file,ClassLoader loader,DexPathList.Element[] elements)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		mCookie = openDexFile(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	private static Object openDexFile()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return openDexFileNative(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;pathclassloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pathclassloader&#34;&gt;#&lt;/a&gt; PathClassLoader&lt;/h3&gt;
&lt;p&gt;只能加载已经安装过的 Apk&lt;/p&gt;
&lt;h3 id=&#34;dexclassloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dexclassloader&#34;&gt;#&lt;/a&gt; DexClassLoader&lt;/h3&gt;
&lt;p&gt;可以加载 jar,apk,dex, 可以直接从 SD 卡加载未安装的 apk&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/31/Android-%E8%93%9D%E7%89%99%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</guid>
            <title>Android 蓝牙应用开发流程</title>
            <link>http://example.com/2022/03/31/Android-%E8%93%9D%E7%89%99%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</link>
            <category>Android</category>
            <category>蓝牙</category>
            <pubDate>Thu, 31 Mar 2022 22:30:19 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;蓝牙权限申请&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#蓝牙权限申请&#34;&gt;#&lt;/a&gt; 蓝牙权限申请&lt;/h1&gt;
&lt;p&gt;目标应用的 targetSdkVersion &amp;gt;= 31，那么应该申请一下权限&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;搜索蓝牙设备权限 ：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_SCAN&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启蓝牙对其他设备可见的权限：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_ADVERTISE&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;与已经配对过的设备进行通讯：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_CONNECT&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;传统蓝牙权限，需要声明权限的 maxSdkVersion 来满足兼容性。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!-- Request legacy Bluetooth permissions on older devices. --&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH&amp;quot;  		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	android:maxSdkVersion=&amp;quot;30&amp;quot; /&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_ADMIN&amp;quot;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	android:maxSdkVersion=&amp;quot;30&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取蓝牙设备真实位置信息的权限：&lt;br /&gt;
 &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_FINE_LOCATION&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目标应用的 targetSdkVersion &amp;lt;= 30，那么应该申请一下权限&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//if(version &amp;gt; 29)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_FINE_LOCATION&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.ACCESS_COARSE_LOCATION&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-feature android:name=&amp;quot;android.hardware.bluetooth&amp;quot; android:required=&amp;quot;true&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;// 发现设备权限&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH_ADMIN&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;经典蓝牙连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#经典蓝牙连接&#34;&gt;#&lt;/a&gt; 经典蓝牙连接&lt;/h1&gt;
&lt;h2 id=&#34;创建bluetoothadapter对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建bluetoothadapter对象&#34;&gt;#&lt;/a&gt; 创建 BluetoothAdapter 对象&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;val adapter = BluetoothAdapter.getDefaultAdapter()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取蓝牙状态：蓝牙是否开启，如果没有开启，就跳转到蓝牙开启页面&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if (bluetoothAdapter?.isEnabled == false) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	val enableBtIntent = Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;监听蓝牙状态变化，蓝牙状态由 4 种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;STATE_ON   蓝牙已开启，该状态下才能继续使用 BluetoothAdapter 进行蓝牙配对&lt;/li&gt;
&lt;li&gt;STATE_OFF  蓝牙已关闭。&lt;/li&gt;
&lt;li&gt;STATE_TURNING_ON，正在开启种，该状态 BluetoothAdapter 还无法使用&lt;/li&gt;
&lt;li&gt;STATE_TURNING_OFF 正在关闭种，可以在这个状态去关闭蓝牙连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用系统广播&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//1 声明权限 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.BLUETOOTH&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//2 开启广播监听&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun registerBluetoothReceiver(context : Context)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val intentFilter = IntentFilter().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; addAction(BluetoothAdapter.ACTION_STATE_CHANGED)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; context.registerReceiver(bluetoothReceiver,intentFilter)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val bluetoothReceiver = object : BroadcastReceiver() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    override fun onReceive(context: Context?, intent: Intent?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        when(intent?.action)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            BluetoothAdapter.ACTION_STATE_CHANGED -&amp;gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                val state = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,BluetoothAdapter.STATE_OFF)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                val prestate = intent.getIntExtra(BluetoothAdapter.EXTRA_PREVIOUS_STATE,BluetoothAdapter.STATE_OFF)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;扫描蓝牙设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扫描蓝牙设备&#34;&gt;#&lt;/a&gt; 扫描蓝牙设备&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fun registerBluetoothReceiver(context : Context)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    val intentFilter = IntentFilter().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        addAction(BluetoothDevice.ACTION_FOUND)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; context.registerReceiver(bluetoothReceiver,intentFilter)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val bluetoothReceiver = object : BroadcastReceiver() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    override fun onReceive(context: Context?, intent: Intent?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        when(intent?.action)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            BluetoothDevice.ACTION_FOUND -&amp;gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                val device: BluetoothDevice? =  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                device?.run &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val deviceName = name  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val deviceHardwareAddress = address // MAC address  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;配对&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配对&#34;&gt;#&lt;/a&gt; 配对&lt;/h2&gt;
&lt;p&gt;蓝牙建立连接也是一个 C/S 模型，需要一个 Server 和一个 Client&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BluetoothServerSocket   蓝牙服务端 Socket 接口，监听客户端的连接，收到了连接请求后会返回一个 BluetoothSocket 接口对象用来通讯&lt;/li&gt;
&lt;li&gt;BluetoothSocket   蓝牙双方通讯的 socket 接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;服务端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务端&#34;&gt;#&lt;/a&gt; 服务端&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private inner class AcceptThread : Thread() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private val mmServerSocket: BluetoothServerSocket? by lazy(LazyThreadSafetyMode.NONE) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; bluetoothAdapter?.listenUsingInsecureRfcommWithServiceRecord(&amp;quot;YOUR DEVICE NAME&amp;quot;, UUID.fromString(&amp;quot;MY_UUID&amp;quot;))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Keep listening until exception occurs or a socket is returned.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; var shouldLoop = true  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; while (shouldLoop) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            val socket: BluetoothSocket? = try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmServerSocket?.accept()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.e(TAG, &amp;quot;Socket&amp;#x27;s accept() method failed&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shouldLoop = false  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; null &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            socket?.also &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; manageMyConnectedSocket(it)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmServerSocket?.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                shouldLoop = false  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Closes the connect socket and causes the thread to finish.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun cancel() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmServerSocket?.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Could not close the connect socket&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun manageMyConnectedSocket(socket : BluetoothSocket)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //execute bluetooth communicate  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;客户端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#客户端&#34;&gt;#&lt;/a&gt; 客户端&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private inner class ConnectThread(device: BluetoothDevice) : Thread() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private val mmSocket: BluetoothSocket? by lazy(LazyThreadSafetyMode.NONE) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; device.createRfcommSocketToServiceRecord(UUID.fromString(&amp;quot;MY_UUID&amp;quot;))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Cancel discovery because it otherwise slows down the connection.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; bluetoothAdapter?.cancelDiscovery()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mmSocket?.let &amp;#123; socket -&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // Connect to the remote device through the socket. This call blocks  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // until it succeeds or throws an exception. socket.connect()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // The connection attempt succeeded. Perform work associated with  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // the connection in a separate thread. manageMyConnectedSocket(socket)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Closes the client socket and causes the thread to finish.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun cancel() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmSocket?.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Could not close the client socket&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据传输&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据传输&#34;&gt;#&lt;/a&gt; 数据传输&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private val handler: Handler = Handler()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val MESSAGE_READ: Int = 0  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val MESSAGE_WRITE: Int = 1  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val MESSAGE_TOAST: Int = 2  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private inner class ConnectedThread(private val mmSocket: BluetoothSocket) : Thread() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private val mmInStream: InputStream = mmSocket.inputStream  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; private val mmOutStream: OutputStream = mmSocket.outputStream  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; private val mmBuffer: ByteArray = ByteArray(1024) // mmBuffer store for the stream  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; override fun run() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        var numBytes: Int // bytes returned from read()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // Keep listening to the InputStream until an exception occurs. while (true) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Read from the InputStream.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; numBytes = try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmInStream.read(mmBuffer)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.d(TAG, &amp;quot;Input stream was disconnected&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Send the obtained bytes to the UI activity.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val readMsg = handler.obtainMessage(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                MESSAGE_READ, numBytes, -1,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mmBuffer)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            readMsg.sendToTarget()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Call this from the main activity to send data to the remote device.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun write(bytes: ByteArray) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmOutStream.write(bytes)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Error occurred when sending data&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // Send a failure message back to the activity.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val writeErrorMsg = handler.obtainMessage(MESSAGE_TOAST)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            val bundle = Bundle().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; putString(&amp;quot;toast&amp;quot;, &amp;quot;Couldn&amp;#x27;t send data to the other device&amp;quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; writeErrorMsg.data = bundle  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handler.sendMessage(writeErrorMsg)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Share the sent message with the UI activity.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val writtenMsg = handler.obtainMessage(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MESSAGE_WRITE, -1, -1, mmBuffer)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writtenMsg.sendToTarget()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Call this method from the main activity to shut down the connection.  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fun cancel() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mmSocket.close()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (e: IOException) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Log.e(TAG, &amp;quot;Could not close the connect socket&amp;quot;, e)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;低功耗蓝牙bluetooth-low-energy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#低功耗蓝牙bluetooth-low-energy&#34;&gt;#&lt;/a&gt; 低功耗蓝牙（Bluetooth Low Energy）&lt;/h1&gt;
&lt;h2 id=&#34;ble设备发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ble设备发现&#34;&gt;#&lt;/a&gt; BLE 设备发现&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmx1ZXRvb3RoLmNvbS9ibG9nL2FkdmVydGlzaW5nLXdvcmtzLXBhcnQtMS8=&#34;&gt;https://www.bluetooth.com/blog/advertising-works-part-1/&lt;/span&gt;&lt;br /&gt;
 低功耗蓝牙协议栈中包含的一个用来帮助设备彼此发现并连接的配置文件：Generic Access Profile (GAP)&lt;br /&gt;
 这个发现过程里面就有一个称之为 &amp;quot;advertise&#39;&#39; 的动作，表明设备想被其他设备发现。&lt;br /&gt;
处于 Advertise 的设备会持续向周围发送很小的数据包，让周围的扫描设备能够发现它。&lt;br /&gt;
对于 GAP 协议来说 发送 advertise 广播的设备可以被看做是边缘设备；也可以作为一个广播者存在，不接受任何的连接请求，单纯只发送广播。&lt;/p&gt;
&lt;p&gt;处于扫描中的设备是作为 GAP 的观察者，当其对连接上其他设备感兴趣时，被作为 GAP 中心设备。&lt;/p&gt;
&lt;p&gt;概念：&lt;br /&gt;
PDU: packat data unit&lt;br /&gt;
ADV: advertising 广播&lt;/p&gt;
&lt;p&gt;Android 中低功耗蓝牙发送广播与开启扫描方式：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//第一步依然是初始化BluetoothAdapter，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val adapter = BluetoothAdapter.getDefaultAdapter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// next step: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//发送广播，在边缘设备上实现，Peripheral&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun startAdvertising()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bluetoothAdapter?.bluetoothLeAdvertiser?.run &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val setting = AdvertiseSettings.Builder().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; /*设置Advertise广播的参数  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 设置广播模式 三种模式:ADVERTISE_MODE_LOW_POWER 低功耗，默认模式  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *                   ADVERTISE_MODE_BALANCED 平衡模式，平衡了广播频率与电量消耗  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *                   ADVERTISE_MODE_LOW_LATENCY 传统模式，高耗电模式。  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */ setAdvertiseMode(AdvertiseSettings.ADVERTISE_MODE_LOW_POWER)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            // 广播是否是可连接的  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; setConnectable(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            //设置广播时长，如果为0，则不会中断  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; setTimeout(0)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            /*  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 设置广播传输功耗等级，可以限制广播数据包的可见范围:  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_ULTRA_LOW 最低  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_LOW 低  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_MEDIUM 中  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * ADVERTISE_TX_POWER_HIGH 高  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * */ setTxPowerLevel(AdvertiseSettings.ADVERTISE_TX_POWER_LOW)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.build()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Ble广播数据包，需要注意的是AdvertiseData中包含的数据大小不能超过31个字节  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; val data = AdvertiseData.Builder().apply &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; setIncludeDeviceName(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setIncludeTxPowerLevel(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            addServiceUuid(ParcelUuid.fromString(UUID.randomUUID().toString()))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            addManufacturerData(0x0001, byteArrayOf())  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.build()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        val callback = object :AdvertiseCallback()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onStartSuccess(settingsInEffect: AdvertiseSettings?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onStartSuccess(settingsInEffect)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onStartFailure(errorCode: Int) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onStartFailure(errorCode)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startAdvertising(setting,data,callback)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//扫描广播，在中心设备上实现,Center  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun discovery()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bluetoothAdapter?.bluetoothLeScanner?.apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;val scanSetting = ScanSettings.Builder().apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setLegacy(true)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setScanMode(ScanSettings.SCAN_MODE_BALANCED)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.build()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        val filter = mutableListOf&amp;lt;ScanFilter&amp;gt;().apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(ScanFilter.Builder().apply &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setServiceUuid(ParcelUuid.fromString(UUID.randomUUID().toString()))  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                setManufacturerData(0x0001, byteArrayOf())  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;.build())  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;.toList()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startScan(filter,scanSetting,object: ScanCallback()&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onScanResult(callbackType: Int, result: ScanResult?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onScanResult(callbackType, result)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onBatchScanResults(results: MutableList&amp;lt;ScanResult&amp;gt;?) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onBatchScanResults(results)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            override fun onScanFailed(errorCode: Int) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                super.onScanFailed(errorCode)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/31/Android-Surface%E6%B8%B2%E6%9F%93%E6%9C%BA%E5%88%B6/</guid>
            <title>Android Surface渲染机制</title>
            <link>http://example.com/2022/03/31/Android-Surface%E6%B8%B2%E6%9F%93%E6%9C%BA%E5%88%B6/</link>
            <category>Android</category>
            <pubDate>Thu, 31 Mar 2022 00:37:12 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android Surface 的渲染机制&lt;/p&gt;
&lt;h1 id=&#34;1surface是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1surface是什么&#34;&gt;#&lt;/a&gt; 1.Surface 是什么？&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Handle onto a raw buffer that is being managed by the screen compositor.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A Surface is generally created by or from a consumer of image buffers (such as a SurfaceTexture, android.media.MediaRecorder, or android.renderscript.Allocation), and is handed to some kind of producer (such as OpenGL, MediaPlayer, or CameraDevice) to draw into.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Note: A Surface acts like a weak reference to the consumer it is associated with. By itself it will not keep its parent consumer from being reclaimed.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这段话是 Surface.java 这个类的注释，大致意思是：&lt;br /&gt;
Surface 是一个句柄，指向一个 raw buffer 缓冲对象，这个缓冲对象由 screen compositer 管理。Surface 通常由一个图像缓冲的消费者创建，例如 SurfaceTexture，MediaRecorder，Allocation。然后被送给各种消费者来绘制。&lt;/p&gt;
&lt;h2 id=&#34;window创建流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#window创建流程&#34;&gt;#&lt;/a&gt; window 创建流程&lt;/h2&gt;
&lt;p&gt;在 Activity 的启动过程中，&lt;br /&gt;
ActivityThread.handleLaunchActivity 中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public Activity handleLaunchActivity(ActivityClientRecord r,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PendingTransactionActions pendingActions, Intent customIntent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	WindowManagerGlobal.initialize();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	final Activity a = performLaunchActivity(r, customIntent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ContextImpl appContext = createBaseContextForActivity(r);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Activity activity = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	activity = mInstrumentation.newActivity(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cl, component.getClassName(), r.intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Application app = r.packageInfo.makeApplication(false, mInstrumentation);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	activity.attach(appContext, this, getInstrumentation(), r.token,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.ident, app, r.intent, r.activityInfo, title, r.parent,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.embeddedID, r.lastNonConfigurationInstances, config,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.referrer, r.voiceInteractor, window, r.configCallback,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.assistToken, r.shareableActivityToken);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mInstrumentation.callActivityOnCreate(activity, r.state);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 在 Activity 的 attch 中，创建创建了 Window 对象。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;final void attach(Context context, ActivityThread aThread,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Instrumentation instr, IBinder token, int ident,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Application application, Intent intent, ActivityInfo info,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CharSequence title, Activity parent, String id,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        NonConfigurationInstances lastNonConfigurationInstances,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Configuration config, String referrer, IVoiceInteractor voiceInteractor,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Window window, ActivityConfigCallback activityConfigCallback, IBinder assistToken,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        IBinder shareableActivityToken) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	attachBaseContext(context);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mFragments.attachHost(null /*parent*/);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mWindow = new PhoneWindow(this, window, activityConfigCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mWindow.setWindowManager(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (WindowManager)context.getSystemService(Context.WINDOW_SERVICE),  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mToken, mComponent.flattenToString(),  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (info.flags &amp;amp; ActivityInfo.FLAG_HARDWARE_ACCELERATED) != 0);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (mParent != null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	mWindow.setContainer(mParent.getWindow());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mWindowManager = mWindow.getWindowManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
Activity 中的 WindowManager 的初始化&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void setWindowManager(WindowManager wm, IBinder appToken, String appName,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        boolean hardwareAccelerated) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mAppToken = appToken;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mAppName = appName;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mHardwareAccelerated = hardwareAccelerated;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (wm == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wm = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mWindowManager = ((WindowManagerImpl)wm).createLocalWindowManager(this);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//WindowManagerImpl.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public WindowManagerImpl createLocalWindowManager(Window parentWindow) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Bridge.getLog().fidelityWarning(ILayoutLog.TAG_UNSUPPORTED,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;quot;The preview does not support multiple windows.&amp;quot;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            null, null, null);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return this;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
ActivityThread.handleResumeActivity 中&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//ActivityThread.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void handleResumeActivity(ActivityClientRecord r, boolean finalStateRequest,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        boolean isForward, String reason) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (r.activity.mVisibleFromClient) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	r.activity.makeVisible();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//Activity.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void makeVisible() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (!mWindowAdded) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ViewManager wm = getWindowManager();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        wm.addView(mDecor, getWindow().getAttributes());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mWindowAdded = true;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mDecor.setVisibility(View.VISIBLE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 会通过 &lt;code&gt;WindowManager.addView(View,Attributes)&lt;/code&gt;  将 DecorView 添加到 Window 上。&lt;/p&gt;
&lt;p&gt;WindowManager 实现类是 WindowManagerImpl，他又将添加 View 的操作委托给了 WindowmanagerGlobal。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//WindowmanagerGlobal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void addView(View view, ViewGroup.LayoutParams params,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Display display, Window parentWindow, int userId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ViewRootImpl root = new ViewRootImpl(view.getContext(), display);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	root.setView(view, wparams, panelParentView, userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//ViewRootImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void setView(View view, WindowManager.LayoutParams attrs, View panelParentView,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int userId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//启动Choreographer的Vsync信号监听，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	requestLayout();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//通过WindowSession请求wms，这里的WindowSession是一个binder接口。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	es = mWindowSession.addToDisplayAsUser(mWindow, mWindowAttributes,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        getHostVisibility(), mDisplay.getDisplayId(), userId,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mInsetsController.getRequestedVisibility(), inputChannel, mTempInsets,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mTempControls);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//WindowSession初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static IWindowSession getWindowSession() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    synchronized (WindowManagerGlobal.class) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (sWindowSession == null) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            try &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                // Emulate the legacy behavior.  The global instance of InputMethodManager  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; // was instantiated here. // TODO(b/116157766): Remove this hack after cleaning up @UnsupportedAppUsage InputMethodManager.ensureDefaultInstanceForDefaultDisplayIfNecessary();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                IWindowManager windowManager = getWindowManagerService();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sWindowSession = windowManager.openSession(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        new IWindowSessionCallback.Stub() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            @Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public void onAnimatorScaleChanged(float scale) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                ValueAnimator.setDurationScale(scale);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (RemoteException e) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                throw e.rethrowFromSystemServer();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return sWindowSession;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 从这里进入了 system_server 中的 WMS 进行执行&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//Session.java   Session是IWindowSession这个AIDL接口的实现类，是应用与WMS进行交互的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@Override  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public int addToDisplay(IWindow window, WindowManager.LayoutParams attrs,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int viewVisibility, int displayId, InsetsState requestedVisibility,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InputChannel outInputChannel, InsetsState outInsetsState,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InsetsSourceControl[] outActiveControls) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return mService.addWindow(this, window, attrs, viewVisibility, displayId,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            UserHandle.getUserId(mUid), requestedVisibility, outInputChannel, outInsetsState,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            outActiveControls);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 最后进入了 WindowManagerService 中执行：&lt;/p&gt;
&lt;h2 id=&#34;surface的创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#surface的创建&#34;&gt;#&lt;/a&gt; Surface 的创建&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//1.WindowManagerService.addWindow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public int addWindow(Session session, IWindow client, LayoutParams attrs, int viewVisibility,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int displayId, int requestUserId, InsetsState requestedVisibility,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InputChannel outInputChannel, InsetsState outInsetsState,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        InsetsSourceControl[] outActiveControls) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	final DisplayContent displayContent = getDisplayContentOrCreate(displayId, attrs.token);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	WindowToken token = displayContent.getWindowToken(  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        hasParent ? parentWindow.mAttrs.token : attrs.token);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if (token == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		token = new WindowToken.Builder(this, binder, type)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .setDisplayContent(displayContent)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .setOwnerCanManageAppTokens(session.mCanAddInternalSystemWindow)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .setRoundedCornerOverlay(isRoundedCornerOverlay)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	final WindowState win = new WindowState(this, session, client, token, parentWindow,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        appOp[0], attrs, viewVisibility, session.mUid, userId,  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        session.mCanAddInternalSystemWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	win.attach();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//2.WindowSession.attach()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void attach() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mSession.windowAddedLocked();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//3.Session.windowAddedLocked()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; void windowAddedLocked()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	mSurfaceSession = new SurfaceSession();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; //4.SurfaceSession&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; public SurfaceSession() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mNativeClient = nativeCreate();  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5.android_view_SurfaceSession.nativeCreate()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;static jlong nativeCreate()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	SurfaceClientComposer* client = new SurfaceClientComposer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;surface上屏流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#surface上屏流程&#34;&gt;#&lt;/a&gt; Surface 上屏流程&lt;/h2&gt;
&lt;p&gt;1.Android 发送了 Vsync 垂直同步脉冲信号&lt;/p&gt;
&lt;p&gt;-&amp;gt; DisplaySync&lt;br /&gt;
-&amp;gt;Choreographer 接收到 Vsync-app 信号&lt;br /&gt;
 -&amp;gt;Choreographer 回调 doFrame&lt;br /&gt;
-&amp;gt;ViewRootImpl 执行 scheduleTravesals, 同时发送一个同步屏障&lt;br /&gt;
 -&amp;gt; 取消同步屏障，执行 performTravesals&lt;br /&gt;
-&amp;gt;performMeasure(),performLayout(),performDraw()&lt;br /&gt;
-&amp;gt; 申请 BufferQueue 中的图像缓冲区对象&lt;br /&gt;
 -&amp;gt;RenderThread 发送 OpenGL 命令&lt;br /&gt;
 -&amp;gt;queueBuffer&lt;/p&gt;
&lt;p&gt;-&amp;gt;DisplaySync&lt;br /&gt;
-&amp;gt;SurfaceFlinger 收到 Vsync-sf&lt;br /&gt;
-&amp;gt; 释放上一次获取 buffer 缓冲区对象&lt;br /&gt;
 -&amp;gt;onMessageReceive (INVALIDATE)   判断当前是否有 Layer 状态发生变化，BufferQueue 中是否有新数据&lt;br /&gt;
 -&amp;gt;onMessageReceive (REFRESH)  获取了 LAYER 后，将 buffer 发送给 HWC 进行合成图层&lt;br /&gt;
 -&amp;gt; 图层合成后通过 drm 将帧送显上屏&lt;br /&gt;
 -&amp;gt;HWC 归还 buffer 给 surfaceFlinger，待下一次 Vsync-sf 时 release 这次的 buffer。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/30/Android%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
            <title>Android系统启动流程</title>
            <link>http://example.com/2022/03/30/Android%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
            <category>Android</category>
            <category>系统</category>
            <pubDate>Wed, 30 Mar 2022 00:12:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android 启动分 5 个阶段：&lt;/p&gt;
&lt;h2 id=&#34;bootloader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bootloader&#34;&gt;#&lt;/a&gt; BootLoader&lt;/h2&gt;
&lt;p&gt;上电后引导芯片从指定位置加载 bootloader 程序，初始化 ram，&lt;br /&gt;
然后启动 linux 内核&lt;/p&gt;
&lt;h2 id=&#34;linux内核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux内核&#34;&gt;#&lt;/a&gt; Linux 内核&lt;/h2&gt;
&lt;p&gt;启动 linux 内核后，会初始化内存管理单元和缓存，进程管理。&lt;br /&gt;
加载驱动：Display Driver，Camera Driver, Input，Binder Driver 等。&lt;br /&gt;
最后启动 init 进程&lt;/p&gt;
&lt;h2 id=&#34;init进程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#init进程&#34;&gt;#&lt;/a&gt; init 进程&lt;/h2&gt;
&lt;p&gt;linux 内核启动中创建，是内核创建的第一个用户进程，pid 为 1，执行分两个阶段，分别在从内核态和用户态执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一阶段，设置环境变量，创建挂载文件系统，设置 selinux，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二阶段，初始化启动属性服务，解析 init.rc 文件，启动 ServiceManager, 然后启动 Zygote 进程，最后自身进入一个无限循环等待事件处理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zygote&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zygote&#34;&gt;#&lt;/a&gt; Zygote&lt;/h2&gt;
&lt;p&gt;创建 Java 虚拟机（Dalvik/ART）&lt;br /&gt;
注册 JNI 函数&lt;br /&gt;
通过 JNI 调用到 zygoteInit.java 类中的 main 方法，第一次进入 Java 世界。&lt;br /&gt;
创建一个 Socket 并监听来自 AMS 的 fork 请求&lt;br /&gt;
启动 system_server 进程&lt;/p&gt;
&lt;h2 id=&#34;system_server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#system_server&#34;&gt;#&lt;/a&gt; system_server&lt;/h2&gt;
&lt;p&gt;启动 binder 线程池&lt;br /&gt;
创建 SystemServiceManager 负责创建其他系统服务&lt;br /&gt;
创建 AMS,WMS,PWS,IMS 等系统服务&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/26/ExoPlayer-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%881%EF%BC%89/</guid>
            <title>ExoPlayer 源码解析（1）</title>
            <link>http://example.com/2022/03/26/ExoPlayer-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%881%EF%BC%89/</link>
            <category>Android</category>
            <category>多媒体</category>
            <category>ExoPlayer</category>
            <pubDate>Sat, 26 Mar 2022 18:52:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#start&#34;&gt;#&lt;/a&gt; Start&lt;/h1&gt;
&lt;h2 id=&#34;1exoplayer起播时序图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1exoplayer起播时序图&#34;&gt;#&lt;/a&gt; 1.ExoPlayer 起播时序图&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/b5348f57gy1h0oaiq9lpej21e313iqpe.jpg&#34; alt=&#34;ExoPlayer播放.drawio&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;2exoplayer的初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2exoplayer的初始化&#34;&gt;#&lt;/a&gt; 2.ExoPlayer 的初始化&lt;/h2&gt;
&lt;p&gt;先看看 ExoPlayer 的初始化&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;protected StyledPlayerView playerView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private DataSource.Factory dataSourceFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void onCreate(@Nullable Bundle savedInstanceState)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dataSourceFactory = DemoUtil.getDataSourceFactory(/* context= */ this);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//获取在XML中声明的StyledPlayerView对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	playerView = findViewById(R.id.player_view);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//初始化ExoPlayer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void initializePlayer()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建播放媒体列表对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mediaItems = createMediaItems(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建渲染器工厂对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	RenderersFactory renderersFactory =  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   DemoUtil.buildRenderersFactory(/* context= */ this, preferExtensionDecoders);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建媒体通道选择器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	trackSelector = new DefaultTrackSelector(/* context= */ this);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//创建ExoPlayer对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player =  new ExoPlayer.Builder(/* context= */ this)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.setRenderersFactory(renderersFactory)  //设置渲染器工厂对象  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.setMediaSourceFactory(createMediaSourceFactory())    //设置媒体源工厂对象  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.setTrackSelector(trackSelector)    //设置媒体通道选择器  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       	.build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.setTrackSelectionParameters(trackSelectionParameters);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//设置播放器事件回调&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.addListener(new PlayerEventListener());  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//设置音频参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.setAudioAttributes(AudioAttributes.DEFAULT, /* handleAudioFocus= */ true);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//设置是否自动开始播放&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.setPlayWhenReady(startAutoPlay);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	player.prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面就是 ExoPlayer 的播放代码，总结一下播放的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 DataSource.Factory 工厂对象&lt;/li&gt;
&lt;li&gt;创建 StyledPlayerView 播放器 UI 对象&lt;/li&gt;
&lt;li&gt;创建 RenderersFactory 对象&lt;/li&gt;
&lt;li&gt;创建 MediaSource.Factory 对象&lt;/li&gt;
&lt;li&gt;创建 TrackSelector 对象&lt;/li&gt;
&lt;li&gt;通过 ExoPlayer.Builder 对象构造 ExoPlayer 对象&lt;/li&gt;
&lt;li&gt;添加播放器事件回调，设置默认音频参数&lt;/li&gt;
&lt;li&gt;设置是否自动开始播放&lt;/li&gt;
&lt;li&gt;开始起播&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3重要的对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3重要的对象&#34;&gt;#&lt;/a&gt; 3. 重要的对象&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;DataSource.Factory&lt;br /&gt;
DataSource.Factory 是负责创建 DataSource 对象的工厂类&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DataSource 代表 Uri 识别的数据源，根据不同的协议从不同媒体介质中获取视频数据流&lt;br /&gt;
下面是 ExoPlayer 实现了的数据源类型&lt;br /&gt;
&lt;img data-src=&#34;https://tvax3.sinaimg.cn/large/b5348f57gy1h0oajo70wvj20xz0pdb0a.jpg&#34; alt=&#34;DataSource实现类&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;StyledPlayerView&lt;br /&gt;
 播放器 UI 对象，包含了视频 UI，控制器 UI，字幕，专辑等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RenderersFactory&lt;br /&gt;
RenderersFactory 是负责创建 Renderer 的工厂对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Renderer 渲染器&lt;br /&gt;
 ExoPlayer 定义了 6 种 Renderer 对象：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;VideoRenderer    视频渲染器，负责视频渲染，实现类有 MediaCodecVideoRenderer，还有 ffmpeg 扩展&lt;/li&gt;
&lt;li&gt;AudioRenderer   音频渲染器&lt;/li&gt;
&lt;li&gt;TextRenderer  字幕渲染器&lt;/li&gt;
&lt;li&gt;MetadataRenderer  视频元数据渲染器&lt;/li&gt;
&lt;li&gt;CameraMotionRenderer  相机动作渲染器，CameraMotionRenderer 是处理相机拍摄的视频播放时，相机在物理上可能会有旋转动作，导致相机拍摄的视频也会产生 rotation，所以在播放相机拍摄的视频时需要解析视频中的 rotation 属性，然后在 OpenGL ES 渲染的时候，将窗口进行旋转，使画面恢复正常方向。&lt;/li&gt;
&lt;li&gt;MiscellaneousRenderer  混合渲染器 ，Google 暂时没有实现该渲染器，应该是留作扩展用。&lt;br /&gt;
&lt;img data-src=&#34;https://tvax4.sinaimg.cn/large/b5348f57gy1h0oak2u83fj20y80ieasz.jpg&#34; alt=&#34;Renderer实现类&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;MediaSource.Factory&lt;br /&gt;
MediaSource.Factory 是负责构造 MediaSource 对象的工厂类&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MediaSource 媒体源，ExoPlayer 使用 MediaSource 实现了多视频播放逻辑，还有不停了流媒体协议类型等。&lt;br /&gt;
ExoPlayer 预定义的 MediaSource 类型：&lt;br /&gt;
&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/b5348f57gy1h0oakcx1ssj20xi0exk6h.jpg&#34; alt=&#34;MediaSource实现类&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TrackSelector&lt;br /&gt;
 选择器：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;媒体流：用于在播放时选择容器中封装的的不同的视频、音频通道，比如在 HLS\DASH 流播放时根据网络带宽，设备性能选择不同分辨率的流。&lt;/li&gt;
&lt;li&gt;通道：播放时根据情况选择视频中不同的视频 \ 音频 \ 字幕通道。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;end&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#end&#34;&gt;#&lt;/a&gt; End&lt;/h1&gt;
&lt;p&gt;这里先粗略分析了一下 ExoPlayer 大致播放流程，还有部分的类的介绍，后面再根据情况对不同模块进行分析。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2017/06/25/Android-Matrix%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
            <title>Android Matrix的使用</title>
            <link>http://example.com/2017/06/25/Android-Matrix%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
            <category>Android</category>
            <category>图像处理</category>
            <pubDate>Sun, 25 Jun 2017 21:46:23 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;#Learn the Matrix Class in Android&lt;/p&gt;
&lt;p&gt;参考:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5nY3NzbG9vcC5jb20vY3VzdG9tdmlldy9NYXRyaXhfQmFzaWM=&#34;&gt;GcsSloop 的博客&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;1matrix是android中graphics包下的一个类主要用来对图像进行平移-缩放-旋转-透视-错切等操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1matrix是android中graphics包下的一个类主要用来对图像进行平移-缩放-旋转-透视-错切等操作&#34;&gt;#&lt;/a&gt; 1.Matrix 是 Android 中 Graphics 包下的一个类，主要用来对图像进行平移、缩放、旋转、透视、错切等操作。&lt;/h3&gt;
&lt;p&gt;Matrix 对象实际是一个 3x3 的矩阵。每个值都有不同的用处：&lt;/p&gt;
&lt;p&gt;mScalaX     mSkewX    mTransfX&lt;/p&gt;
&lt;p&gt;mSkewY      mScalaY   mTransfY&lt;/p&gt;
&lt;p&gt;mPersp0     mPersp1   mPersp 2&lt;/p&gt;
&lt;p&gt;scalax, scalay 用于缩放&lt;br /&gt;
 skewx,skewy 用于错切&lt;br /&gt;
 transfx,transfy 用于平移&lt;br /&gt;
 persp0,persp1,persp2 用于透视&lt;/p&gt;
&lt;h3 id=&#34;2关于matrix的要点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2关于matrix的要点&#34;&gt;#&lt;/a&gt; 2. 关于 Matrix 的要点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;所有的操作 (旋转、平移、缩放、错切) 默认都是以坐标原点为基准点的。&lt;/li&gt;
&lt;li&gt;之前操作的坐标系状态会保留，并且影响到后续状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3martirx的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3martirx的方法&#34;&gt;#&lt;/a&gt; 3.Martirx 的方法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;pre&lt;br /&gt;
pre 为前缀的方法的意思是右乘，意思是当前矩阵乘以目标矩阵&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;preScala()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;preTranslate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;preRotate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;post&lt;br /&gt;
post 为前缀的方法的意思是左乘，意思是目标矩阵乘以当前矩阵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;postScala()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;postTranslate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;postRotate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
    </channel>
</rss>
